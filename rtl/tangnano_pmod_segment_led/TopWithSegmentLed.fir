circuit TopWithSegmentLed :
  module Core :
    input clock : Clock
    input reset : Reset
    output io : { flip imem : { flip addr : UInt<32>, inst : UInt<32>, valid : UInt<1>}, flip dmem : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}, gpio_out : UInt<32>, flip interrupt_in : UInt<1>, success : UInt<1>, exit : UInt<1>, debug_pc : UInt<32>}

    cmem regfile : UInt<32> [32] @[Core.scala 21:20]
    reg csr_gpio_out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 23:29]
    reg csr_trap_vector : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 24:32]
    wire csr_mstatus_mstatus : { wpri0 : UInt<1>, sie : UInt<1>, wpri1 : UInt<1>, mie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, ube : UInt<1>, mpie : UInt<1>, spp : UInt<1>, vs : UInt<2>, mpp : UInt<2>, fs : UInt<2>, xs : UInt<2>, mprv : UInt<1>, sum : UInt<1>, mxr : UInt<1>, tvm : UInt<1>, tw : UInt<1>, tsr : UInt<1>, wpri3 : UInt<9>, uxl : UInt<2>, sxl : UInt<2>, sbe : UInt<1>, mbe : UInt<1>, wpri4 : UInt<25>, sd : UInt<1>, wpri5 : UInt<4>} @[CSR.scala 78:23]
    csr_mstatus_mstatus.wpri0 <= UInt<1>("h0") @[CSR.scala 79:19]
    csr_mstatus_mstatus.sie <= UInt<1>("h0") @[CSR.scala 80:17]
    csr_mstatus_mstatus.wpri1 <= UInt<1>("h0") @[CSR.scala 81:19]
    csr_mstatus_mstatus.mie <= UInt<1>("h0") @[CSR.scala 82:17]
    csr_mstatus_mstatus.wpri2 <= UInt<1>("h0") @[CSR.scala 83:19]
    csr_mstatus_mstatus.spie <= UInt<1>("h0") @[CSR.scala 84:18]
    csr_mstatus_mstatus.ube <= UInt<1>("h0") @[CSR.scala 85:17]
    csr_mstatus_mstatus.mpie <= UInt<1>("h0") @[CSR.scala 86:18]
    csr_mstatus_mstatus.spp <= UInt<1>("h0") @[CSR.scala 87:17]
    csr_mstatus_mstatus.vs <= UInt<1>("h0") @[CSR.scala 88:16]
    csr_mstatus_mstatus.mpp <= UInt<1>("h0") @[CSR.scala 89:17]
    csr_mstatus_mstatus.fs <= UInt<1>("h0") @[CSR.scala 90:16]
    csr_mstatus_mstatus.xs <= UInt<1>("h0") @[CSR.scala 91:16]
    csr_mstatus_mstatus.mprv <= UInt<1>("h0") @[CSR.scala 92:18]
    csr_mstatus_mstatus.sum <= UInt<1>("h0") @[CSR.scala 93:17]
    csr_mstatus_mstatus.mxr <= UInt<1>("h0") @[CSR.scala 94:17]
    csr_mstatus_mstatus.tvm <= UInt<1>("h0") @[CSR.scala 95:17]
    csr_mstatus_mstatus.tw <= UInt<1>("h0") @[CSR.scala 96:16]
    csr_mstatus_mstatus.tsr <= UInt<1>("h0") @[CSR.scala 97:17]
    csr_mstatus_mstatus.wpri3 <= UInt<1>("h0") @[CSR.scala 98:19]
    csr_mstatus_mstatus.uxl <= UInt<1>("h0") @[CSR.scala 99:17]
    csr_mstatus_mstatus.sxl <= UInt<1>("h0") @[CSR.scala 100:17]
    csr_mstatus_mstatus.sbe <= UInt<1>("h0") @[CSR.scala 101:17]
    csr_mstatus_mstatus.mbe <= UInt<1>("h0") @[CSR.scala 102:17]
    csr_mstatus_mstatus.wpri4 <= UInt<1>("h0") @[CSR.scala 103:19]
    csr_mstatus_mstatus.sd <= UInt<1>("h0") @[CSR.scala 104:16]
    csr_mstatus_mstatus.wpri5 <= UInt<1>("h0") @[CSR.scala 105:19]
    reg csr_mstatus : { wpri0 : UInt<1>, sie : UInt<1>, wpri1 : UInt<1>, mie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, ube : UInt<1>, mpie : UInt<1>, spp : UInt<1>, vs : UInt<2>, mpp : UInt<2>, fs : UInt<2>, xs : UInt<2>, mprv : UInt<1>, sum : UInt<1>, mxr : UInt<1>, tvm : UInt<1>, tw : UInt<1>, tsr : UInt<1>, wpri3 : UInt<9>, uxl : UInt<2>, sxl : UInt<2>, sbe : UInt<1>, mbe : UInt<1>, wpri4 : UInt<25>, sd : UInt<1>, wpri5 : UInt<4>}, clock with :
      reset => (reset, csr_mstatus_mstatus) @[Core.scala 26:28]
    wire csr_mie_mie : { ssie : UInt<1>, msie : UInt<1>, stie : UInt<1>, mtie : UInt<1>, seie : UInt<1>, meie : UInt<1>} @[CSR.scala 164:19]
    csr_mie_mie.ssie <= UInt<1>("h0") @[CSR.scala 165:14]
    csr_mie_mie.msie <= UInt<1>("h0") @[CSR.scala 166:14]
    csr_mie_mie.stie <= UInt<1>("h0") @[CSR.scala 167:14]
    csr_mie_mie.mtie <= UInt<1>("h0") @[CSR.scala 168:14]
    csr_mie_mie.seie <= UInt<1>("h0") @[CSR.scala 169:14]
    csr_mie_mie.meie <= UInt<1>("h0") @[CSR.scala 170:14]
    reg csr_mie : { ssie : UInt<1>, msie : UInt<1>, stie : UInt<1>, mtie : UInt<1>, seie : UInt<1>, meie : UInt<1>}, clock with :
      reset => (reset, csr_mie_mie) @[Core.scala 27:24]
    wire csr_mip_mip : { ssip : UInt<1>, msip : UInt<1>, stip : UInt<1>, mtip : UInt<1>, seip : UInt<1>, meip : UInt<1>} @[CSR.scala 127:19]
    csr_mip_mip.ssip <= UInt<1>("h0") @[CSR.scala 128:14]
    csr_mip_mip.msip <= UInt<1>("h0") @[CSR.scala 129:14]
    csr_mip_mip.stip <= UInt<1>("h0") @[CSR.scala 130:14]
    csr_mip_mip.mtip <= UInt<1>("h0") @[CSR.scala 131:14]
    csr_mip_mip.seip <= UInt<1>("h0") @[CSR.scala 132:14]
    csr_mip_mip.meip <= UInt<1>("h0") @[CSR.scala 133:14]
    wire csr_mip : { ssip : UInt<1>, msip : UInt<1>, stip : UInt<1>, mtip : UInt<1>, seip : UInt<1>, meip : UInt<1>}
    csr_mip <= csr_mip_mip
    reg csr_mscratch : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 29:29]
    reg csr_mepc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 30:25]
    reg csr_mcause : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 31:27]
    reg csr_mtval : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 32:26]
    csr_mip.meip <= io.interrupt_in @[Core.scala 35:16]
    node CAUSE_INTERRUPT = shl(UInt<32>("h1"), 31) @[Core.scala 37:42]
    node CAUSE_INTERRUPT_SUPERVISOR_SOFTWARE_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("h1")) @[Core.scala 38:71]
    node CAUSE_INTERRUPT_MACHINE_SOFTWARE_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("h3")) @[Core.scala 39:68]
    node CAUSE_INTERRUPT_SUPERVISOR_TIMER_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("h5")) @[Core.scala 40:68]
    node CAUSE_INTERRUPT_MACHINE_TIMER_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("h7")) @[Core.scala 41:65]
    node CAUSE_INTERRUPT_SUPERVISOR_EXTERNAL_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("h9")) @[Core.scala 42:71]
    node CAUSE_INTERRUPT_MACHINE_EXTERNAL_INTERRUPT = or(CAUSE_INTERRUPT, UInt<32>("hb")) @[Core.scala 43:68]
    io.gpio_out <= csr_gpio_out @[Core.scala 46:15]
    reg id_reg_pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 52:38]
    reg id_reg_inst : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 53:38]
    reg exe_reg_pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 56:38]
    reg exe_reg_wb_addr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Core.scala 57:38]
    reg exe_reg_op1_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 58:38]
    reg exe_reg_op2_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 59:38]
    reg exe_reg_rs2_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 60:38]
    reg exe_reg_exe_fun : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Core.scala 61:38]
    reg exe_reg_mem_wen : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Core.scala 62:38]
    reg exe_reg_rf_wen : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Core.scala 63:38]
    reg exe_reg_wb_sel : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Core.scala 64:38]
    reg exe_reg_csr_addr : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[Core.scala 65:38]
    reg exe_reg_csr_cmd : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Core.scala 66:38]
    reg exe_reg_imm_i_sext : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 67:38]
    reg exe_reg_imm_s_sext : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 68:38]
    reg exe_reg_imm_b_sext : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 69:38]
    reg exe_reg_imm_u_shifted : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 70:38]
    reg exe_reg_imm_z_uext : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 71:38]
    reg exe_reg_mem_w : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 72:38]
    reg exe_reg_has_pending_interrupt : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Core.scala 73:46]
    reg exe_reg_exception_target : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 74:41]
    reg exe_reg_mcause : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 75:38]
    reg exe_reg_mret : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Core.scala 76:38]
    reg mem_reg_pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 79:38]
    reg mem_reg_wb_addr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Core.scala 80:38]
    reg mem_reg_op1_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 81:38]
    reg mem_reg_rs2_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 82:38]
    reg mem_reg_mem_wen : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Core.scala 83:38]
    reg mem_reg_rf_wen : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Core.scala 84:38]
    reg mem_reg_wb_sel : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Core.scala 85:38]
    reg mem_reg_csr_addr : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[Core.scala 86:38]
    reg mem_reg_csr_cmd : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Core.scala 87:38]
    reg mem_reg_imm_z_uext : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 88:38]
    reg mem_reg_alu_out : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 89:38]
    reg mem_reg_mem_w : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 90:38]
    reg mem_reg_mem_wstrb : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Core.scala 91:38]
    reg wb_reg_wb_addr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Core.scala 94:38]
    reg wb_reg_rf_wen : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Core.scala 95:38]
    reg wb_reg_wb_data : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 96:38]
    reg if_reg_pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 106:26]
    io.imem.addr <= if_reg_pc @[Core.scala 107:16]
    node if_inst = mux(io.imem.valid, io.imem.inst, UInt<32>("h13")) @[Core.scala 108:20]
    wire stall_flg : UInt<1> @[Core.scala 110:27]
    wire mem_stall_flg : UInt<1> @[Core.scala 111:27]
    wire exe_br_flg : UInt<1> @[Core.scala 112:27]
    wire exe_br_target : UInt<32> @[Core.scala 113:27]
    wire exe_jmp_flg : UInt<1> @[Core.scala 114:27]
    wire exe_alu_out : UInt<32> @[Core.scala 115:27]
    node _if_pc_plus4_T = add(if_reg_pc, UInt<32>("h4")) @[Core.scala 117:31]
    node if_pc_plus4 = tail(_if_pc_plus4_T, 1) @[Core.scala 117:31]
    node _if_pc_next_T = and(if_inst, UInt<32>("hffffffff")) @[Core.scala 122:14]
    node _if_pc_next_T_1 = eq(UInt<7>("h73"), _if_pc_next_T) @[Core.scala 122:14]
    node _if_pc_next_T_2 = eq(io.imem.valid, UInt<1>("h0")) @[Core.scala 123:19]
    node _if_pc_next_T_3 = or(stall_flg, _if_pc_next_T_2) @[Core.scala 123:16]
    node _if_pc_next_T_4 = mux(_if_pc_next_T_3, if_reg_pc, if_pc_plus4) @[Mux.scala 101:16]
    node _if_pc_next_T_5 = mux(_if_pc_next_T_1, csr_trap_vector, _if_pc_next_T_4) @[Mux.scala 101:16]
    node _if_pc_next_T_6 = mux(exe_jmp_flg, exe_alu_out, _if_pc_next_T_5) @[Mux.scala 101:16]
    node if_pc_next = mux(exe_br_flg, exe_br_target, _if_pc_next_T_6) @[Mux.scala 101:16]
    if_reg_pc <= if_pc_next @[Core.scala 125:13]
    node _id_reg_pc_T = or(stall_flg, exe_br_flg) @[Core.scala 130:32]
    node _id_reg_pc_T_1 = or(_id_reg_pc_T, exe_jmp_flg) @[Core.scala 130:46]
    node _id_reg_pc_T_2 = eq(io.imem.valid, UInt<1>("h0")) @[Core.scala 130:64]
    node _id_reg_pc_T_3 = or(_id_reg_pc_T_1, _id_reg_pc_T_2) @[Core.scala 130:61]
    node _id_reg_pc_T_4 = mux(_id_reg_pc_T_3, id_reg_pc, if_reg_pc) @[Core.scala 130:21]
    id_reg_pc <= _id_reg_pc_T_4 @[Core.scala 130:15]
    node _id_reg_inst_T = or(exe_br_flg, exe_jmp_flg) @[Core.scala 133:17]
    node _id_reg_inst_T_1 = mux(stall_flg, id_reg_inst, if_inst) @[Mux.scala 101:16]
    node _id_reg_inst_T_2 = mux(_id_reg_inst_T, UInt<32>("h13"), _id_reg_inst_T_1) @[Mux.scala 101:16]
    id_reg_inst <= _id_reg_inst_T_2 @[Core.scala 131:15]
    node id_rs1_addr_b = bits(id_reg_inst, 19, 15) @[Core.scala 141:34]
    node id_rs2_addr_b = bits(id_reg_inst, 24, 20) @[Core.scala 142:34]
    node _id_rs1_data_hazard_T = eq(exe_reg_rf_wen, UInt<2>("h1")) @[Core.scala 145:44]
    node _id_rs1_data_hazard_T_1 = neq(id_rs1_addr_b, UInt<1>("h0")) @[Core.scala 145:73]
    node _id_rs1_data_hazard_T_2 = and(_id_rs1_data_hazard_T, _id_rs1_data_hazard_T_1) @[Core.scala 145:55]
    node _id_rs1_data_hazard_T_3 = eq(id_rs1_addr_b, exe_reg_wb_addr) @[Core.scala 145:100]
    node id_rs1_data_hazard = and(_id_rs1_data_hazard_T_2, _id_rs1_data_hazard_T_3) @[Core.scala 145:82]
    node _id_rs2_data_hazard_T = eq(exe_reg_rf_wen, UInt<2>("h1")) @[Core.scala 146:44]
    node _id_rs2_data_hazard_T_1 = neq(id_rs2_addr_b, UInt<1>("h0")) @[Core.scala 146:73]
    node _id_rs2_data_hazard_T_2 = and(_id_rs2_data_hazard_T, _id_rs2_data_hazard_T_1) @[Core.scala 146:55]
    node _id_rs2_data_hazard_T_3 = eq(id_rs2_addr_b, exe_reg_wb_addr) @[Core.scala 146:100]
    node id_rs2_data_hazard = and(_id_rs2_data_hazard_T_2, _id_rs2_data_hazard_T_3) @[Core.scala 146:82]
    node _stall_flg_T = or(id_rs1_data_hazard, id_rs2_data_hazard) @[Core.scala 147:36]
    node _stall_flg_T_1 = or(_stall_flg_T, mem_stall_flg) @[Core.scala 147:58]
    stall_flg <= _stall_flg_T_1 @[Core.scala 147:13]
    node id_enabled_mip_lo_lo_hi = cat(UInt<1>("h0"), csr_mip.ssip) @[Cat.scala 33:92]
    node id_enabled_mip_lo_lo = cat(id_enabled_mip_lo_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_lo_hi_hi = cat(csr_mip.stip, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_lo_hi = cat(id_enabled_mip_lo_hi_hi, csr_mip.msip) @[Cat.scala 33:92]
    node id_enabled_mip_lo = cat(id_enabled_mip_lo_hi, id_enabled_mip_lo_lo) @[Cat.scala 33:92]
    node id_enabled_mip_hi_lo_hi = cat(UInt<1>("h0"), csr_mip.mtip) @[Cat.scala 33:92]
    node id_enabled_mip_hi_lo = cat(id_enabled_mip_hi_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi_lo = cat(UInt<1>("h0"), csr_mip.seip) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi_hi = cat(UInt<4>("h0"), csr_mip.meip) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi = cat(id_enabled_mip_hi_hi_hi, id_enabled_mip_hi_hi_lo) @[Cat.scala 33:92]
    node id_enabled_mip_hi = cat(id_enabled_mip_hi_hi, id_enabled_mip_hi_lo) @[Cat.scala 33:92]
    node _id_enabled_mip_T = cat(id_enabled_mip_hi, id_enabled_mip_lo) @[Cat.scala 33:92]
    node id_enabled_mip_lo_lo_hi_1 = cat(UInt<1>("h0"), csr_mie.ssie) @[Cat.scala 33:92]
    node id_enabled_mip_lo_lo_1 = cat(id_enabled_mip_lo_lo_hi_1, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_lo_hi_hi_1 = cat(csr_mie.stie, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_lo_hi_1 = cat(id_enabled_mip_lo_hi_hi_1, csr_mie.msie) @[Cat.scala 33:92]
    node id_enabled_mip_lo_1 = cat(id_enabled_mip_lo_hi_1, id_enabled_mip_lo_lo_1) @[Cat.scala 33:92]
    node id_enabled_mip_hi_lo_hi_1 = cat(UInt<1>("h0"), csr_mie.mtie) @[Cat.scala 33:92]
    node id_enabled_mip_hi_lo_1 = cat(id_enabled_mip_hi_lo_hi_1, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi_lo_1 = cat(UInt<1>("h0"), csr_mie.seie) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi_hi_1 = cat(UInt<4>("h0"), csr_mie.meie) @[Cat.scala 33:92]
    node id_enabled_mip_hi_hi_1 = cat(id_enabled_mip_hi_hi_hi_1, id_enabled_mip_hi_hi_lo_1) @[Cat.scala 33:92]
    node id_enabled_mip_hi_1 = cat(id_enabled_mip_hi_hi_1, id_enabled_mip_hi_lo_1) @[Cat.scala 33:92]
    node _id_enabled_mip_T_1 = cat(id_enabled_mip_hi_1, id_enabled_mip_lo_1) @[Cat.scala 33:92]
    node _id_enabled_mip_T_2 = and(_id_enabled_mip_T, _id_enabled_mip_T_1) @[Core.scala 150:52]
    wire id_enabled_mip : { ssip : UInt<1>, msip : UInt<1>, stip : UInt<1>, mtip : UInt<1>, seip : UInt<1>, meip : UInt<1>} @[CSR.scala 137:19]
    node _id_enabled_mip_mip_ssip_T = bits(_id_enabled_mip_T_2, 1, 1) @[CSR.scala 138:22]
    id_enabled_mip.ssip <= _id_enabled_mip_mip_ssip_T @[CSR.scala 138:14]
    node _id_enabled_mip_mip_msip_T = bits(_id_enabled_mip_T_2, 3, 3) @[CSR.scala 139:22]
    id_enabled_mip.msip <= _id_enabled_mip_mip_msip_T @[CSR.scala 139:14]
    node _id_enabled_mip_mip_stip_T = bits(_id_enabled_mip_T_2, 5, 5) @[CSR.scala 140:22]
    id_enabled_mip.stip <= _id_enabled_mip_mip_stip_T @[CSR.scala 140:14]
    node _id_enabled_mip_mip_mtip_T = bits(_id_enabled_mip_T_2, 7, 7) @[CSR.scala 141:22]
    id_enabled_mip.mtip <= _id_enabled_mip_mip_mtip_T @[CSR.scala 141:14]
    node _id_enabled_mip_mip_seip_T = bits(_id_enabled_mip_T_2, 9, 9) @[CSR.scala 142:22]
    id_enabled_mip.seip <= _id_enabled_mip_mip_seip_T @[CSR.scala 142:14]
    node _id_enabled_mip_mip_meip_T = bits(_id_enabled_mip_T_2, 11, 11) @[CSR.scala 143:22]
    id_enabled_mip.meip <= _id_enabled_mip_mip_meip_T @[CSR.scala 143:14]
    node _id_has_pending_interrupt_T = or(id_enabled_mip.ssip, id_enabled_mip.msip) @[CSR.scala 121:10]
    node _id_has_pending_interrupt_T_1 = or(_id_has_pending_interrupt_T, id_enabled_mip.stip) @[CSR.scala 121:18]
    node _id_has_pending_interrupt_T_2 = or(_id_has_pending_interrupt_T_1, id_enabled_mip.mtip) @[CSR.scala 121:26]
    node _id_has_pending_interrupt_T_3 = or(_id_has_pending_interrupt_T_2, id_enabled_mip.seip) @[CSR.scala 121:34]
    node _id_has_pending_interrupt_T_4 = or(_id_has_pending_interrupt_T_3, id_enabled_mip.meip) @[CSR.scala 121:42]
    node id_has_pending_interrupt = and(_id_has_pending_interrupt_T_4, csr_mstatus.mie) @[Core.scala 151:62]
    node id_exception_cause_lo_lo_hi = cat(UInt<1>("h0"), id_enabled_mip.ssip) @[Cat.scala 33:92]
    node id_exception_cause_lo_lo = cat(id_exception_cause_lo_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_exception_cause_lo_hi_hi = cat(id_enabled_mip.stip, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_exception_cause_lo_hi = cat(id_exception_cause_lo_hi_hi, id_enabled_mip.msip) @[Cat.scala 33:92]
    node id_exception_cause_lo = cat(id_exception_cause_lo_hi, id_exception_cause_lo_lo) @[Cat.scala 33:92]
    node id_exception_cause_hi_lo_hi = cat(UInt<1>("h0"), id_enabled_mip.mtip) @[Cat.scala 33:92]
    node id_exception_cause_hi_lo = cat(id_exception_cause_hi_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
    node id_exception_cause_hi_hi_lo = cat(UInt<1>("h0"), id_enabled_mip.seip) @[Cat.scala 33:92]
    node id_exception_cause_hi_hi_hi = cat(UInt<4>("h0"), id_enabled_mip.meip) @[Cat.scala 33:92]
    node id_exception_cause_hi_hi = cat(id_exception_cause_hi_hi_hi, id_exception_cause_hi_hi_lo) @[Cat.scala 33:92]
    node id_exception_cause_hi = cat(id_exception_cause_hi_hi, id_exception_cause_hi_lo) @[Cat.scala 33:92]
    node _id_exception_cause_T = cat(id_exception_cause_hi, id_exception_cause_lo) @[Cat.scala 33:92]
    node _id_exception_cause_T_1 = bits(_id_exception_cause_T, 0, 0) @[OneHot.scala 47:45]
    node _id_exception_cause_T_2 = bits(_id_exception_cause_T, 1, 1) @[OneHot.scala 47:45]
    node _id_exception_cause_T_3 = bits(_id_exception_cause_T, 2, 2) @[OneHot.scala 47:45]
    node _id_exception_cause_T_4 = bits(_id_exception_cause_T, 3, 3) @[OneHot.scala 47:45]
    node _id_exception_cause_T_5 = bits(_id_exception_cause_T, 4, 4) @[OneHot.scala 47:45]
    node _id_exception_cause_T_6 = bits(_id_exception_cause_T, 5, 5) @[OneHot.scala 47:45]
    node _id_exception_cause_T_7 = bits(_id_exception_cause_T, 6, 6) @[OneHot.scala 47:45]
    node _id_exception_cause_T_8 = bits(_id_exception_cause_T, 7, 7) @[OneHot.scala 47:45]
    node _id_exception_cause_T_9 = bits(_id_exception_cause_T, 8, 8) @[OneHot.scala 47:45]
    node _id_exception_cause_T_10 = bits(_id_exception_cause_T, 9, 9) @[OneHot.scala 47:45]
    node _id_exception_cause_T_11 = bits(_id_exception_cause_T, 10, 10) @[OneHot.scala 47:45]
    node _id_exception_cause_T_12 = bits(_id_exception_cause_T, 11, 11) @[OneHot.scala 47:45]
    node _id_exception_cause_T_13 = bits(_id_exception_cause_T, 12, 12) @[OneHot.scala 47:45]
    node _id_exception_cause_T_14 = bits(_id_exception_cause_T, 13, 13) @[OneHot.scala 47:45]
    node _id_exception_cause_T_15 = bits(_id_exception_cause_T, 14, 14) @[OneHot.scala 47:45]
    node _id_exception_cause_T_16 = bits(_id_exception_cause_T, 15, 15) @[OneHot.scala 47:45]
    node _id_exception_cause_T_17 = mux(_id_exception_cause_T_15, UInt<4>("he"), UInt<4>("hf")) @[Mux.scala 47:70]
    node _id_exception_cause_T_18 = mux(_id_exception_cause_T_14, UInt<4>("hd"), _id_exception_cause_T_17) @[Mux.scala 47:70]
    node _id_exception_cause_T_19 = mux(_id_exception_cause_T_13, UInt<4>("hc"), _id_exception_cause_T_18) @[Mux.scala 47:70]
    node _id_exception_cause_T_20 = mux(_id_exception_cause_T_12, UInt<4>("hb"), _id_exception_cause_T_19) @[Mux.scala 47:70]
    node _id_exception_cause_T_21 = mux(_id_exception_cause_T_11, UInt<4>("ha"), _id_exception_cause_T_20) @[Mux.scala 47:70]
    node _id_exception_cause_T_22 = mux(_id_exception_cause_T_10, UInt<4>("h9"), _id_exception_cause_T_21) @[Mux.scala 47:70]
    node _id_exception_cause_T_23 = mux(_id_exception_cause_T_9, UInt<4>("h8"), _id_exception_cause_T_22) @[Mux.scala 47:70]
    node _id_exception_cause_T_24 = mux(_id_exception_cause_T_8, UInt<3>("h7"), _id_exception_cause_T_23) @[Mux.scala 47:70]
    node _id_exception_cause_T_25 = mux(_id_exception_cause_T_7, UInt<3>("h6"), _id_exception_cause_T_24) @[Mux.scala 47:70]
    node _id_exception_cause_T_26 = mux(_id_exception_cause_T_6, UInt<3>("h5"), _id_exception_cause_T_25) @[Mux.scala 47:70]
    node _id_exception_cause_T_27 = mux(_id_exception_cause_T_5, UInt<3>("h4"), _id_exception_cause_T_26) @[Mux.scala 47:70]
    node _id_exception_cause_T_28 = mux(_id_exception_cause_T_4, UInt<2>("h3"), _id_exception_cause_T_27) @[Mux.scala 47:70]
    node _id_exception_cause_T_29 = mux(_id_exception_cause_T_3, UInt<2>("h2"), _id_exception_cause_T_28) @[Mux.scala 47:70]
    node _id_exception_cause_T_30 = mux(_id_exception_cause_T_2, UInt<1>("h1"), _id_exception_cause_T_29) @[Mux.scala 47:70]
    node id_exception_cause = mux(_id_exception_cause_T_1, UInt<1>("h0"), _id_exception_cause_T_30) @[Mux.scala 47:70]
    node _id_exception_target_T = not(UInt<32>("h3")) @[Core.scala 154:48]
    node _id_exception_target_T_1 = and(csr_trap_vector, _id_exception_target_T) @[Core.scala 154:46]
    node _id_exception_target_T_2 = and(csr_trap_vector, UInt<2>("h3")) @[Core.scala 154:89]
    node _id_exception_target_T_3 = eq(_id_exception_target_T_2, UInt<1>("h0")) @[Core.scala 154:96]
    node _id_exception_target_T_4 = shl(id_exception_cause, 2) @[Core.scala 154:129]
    node _id_exception_target_T_5 = mux(_id_exception_target_T_3, UInt<1>("h0"), _id_exception_target_T_4) @[Core.scala 154:71]
    node _id_exception_target_T_6 = add(_id_exception_target_T_1, _id_exception_target_T_5) @[Core.scala 154:66]
    node id_exception_target = tail(_id_exception_target_T_6, 1) @[Core.scala 154:66]
    node id_mcause_hi = cat(id_has_pending_interrupt, UInt<27>("h0")) @[Cat.scala 33:92]
    node id_mcause = cat(id_mcause_hi, id_exception_cause) @[Cat.scala 33:92]
    node _id_inst_T = or(exe_br_flg, exe_jmp_flg) @[Core.scala 158:33]
    node _id_inst_T_1 = or(_id_inst_T, stall_flg) @[Core.scala 158:48]
    node id_inst = mux(_id_inst_T_1, UInt<32>("h13"), id_reg_inst) @[Core.scala 158:20]
    node id_rs1_addr = bits(id_inst, 19, 15) @[Core.scala 160:28]
    node id_rs2_addr = bits(id_inst, 24, 20) @[Core.scala 161:28]
    node id_wb_addr = bits(id_inst, 11, 7) @[Core.scala 162:28]
    wire mem_wb_data : UInt<32> @[Core.scala 164:25]
    infer mport id_rs1_data_MPORT = regfile[id_rs1_addr], clock @[Core.scala 165:36]
    node _id_rs1_data_T = eq(id_rs1_addr, UInt<1>("h0")) @[Core.scala 166:18]
    node _id_rs1_data_T_1 = eq(id_rs1_addr, mem_reg_wb_addr) @[Core.scala 167:19]
    node _id_rs1_data_T_2 = eq(mem_reg_rf_wen, UInt<2>("h1")) @[Core.scala 167:59]
    node _id_rs1_data_T_3 = and(_id_rs1_data_T_1, _id_rs1_data_T_2) @[Core.scala 167:40]
    node _id_rs1_data_T_4 = eq(id_rs1_addr, wb_reg_wb_addr) @[Core.scala 168:19]
    node _id_rs1_data_T_5 = eq(wb_reg_rf_wen, UInt<2>("h1")) @[Core.scala 168:59]
    node _id_rs1_data_T_6 = and(_id_rs1_data_T_4, _id_rs1_data_T_5) @[Core.scala 168:40]
    node _id_rs1_data_T_7 = mux(_id_rs1_data_T_6, wb_reg_wb_data, id_rs1_data_MPORT) @[Mux.scala 101:16]
    node _id_rs1_data_T_8 = mux(_id_rs1_data_T_3, mem_wb_data, _id_rs1_data_T_7) @[Mux.scala 101:16]
    node id_rs1_data = mux(_id_rs1_data_T, UInt<32>("h0"), _id_rs1_data_T_8) @[Mux.scala 101:16]
    infer mport id_rs2_data_MPORT = regfile[id_rs2_addr], clock @[Core.scala 170:36]
    node _id_rs2_data_T = eq(id_rs2_addr, UInt<1>("h0")) @[Core.scala 171:18]
    node _id_rs2_data_T_1 = eq(id_rs2_addr, mem_reg_wb_addr) @[Core.scala 172:19]
    node _id_rs2_data_T_2 = eq(mem_reg_rf_wen, UInt<2>("h1")) @[Core.scala 172:59]
    node _id_rs2_data_T_3 = and(_id_rs2_data_T_1, _id_rs2_data_T_2) @[Core.scala 172:40]
    node _id_rs2_data_T_4 = eq(id_rs2_addr, wb_reg_wb_addr) @[Core.scala 173:19]
    node _id_rs2_data_T_5 = eq(wb_reg_rf_wen, UInt<2>("h1")) @[Core.scala 173:59]
    node _id_rs2_data_T_6 = and(_id_rs2_data_T_4, _id_rs2_data_T_5) @[Core.scala 173:40]
    node _id_rs2_data_T_7 = mux(_id_rs2_data_T_6, wb_reg_wb_data, id_rs2_data_MPORT) @[Mux.scala 101:16]
    node _id_rs2_data_T_8 = mux(_id_rs2_data_T_3, mem_wb_data, _id_rs2_data_T_7) @[Mux.scala 101:16]
    node id_rs2_data = mux(_id_rs2_data_T, UInt<32>("h0"), _id_rs2_data_T_8) @[Mux.scala 101:16]
    node id_imm_i = bits(id_inst, 31, 20) @[Core.scala 176:25]
    node _id_imm_i_sext_T = bits(id_imm_i, 11, 11) @[Core.scala 177:44]
    node _id_imm_i_sext_T_1 = bits(_id_imm_i_sext_T, 0, 0) @[Bitwise.scala 77:15]
    node _id_imm_i_sext_T_2 = mux(_id_imm_i_sext_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
    node id_imm_i_sext = cat(_id_imm_i_sext_T_2, id_imm_i) @[Cat.scala 33:92]
    node _id_imm_s_T = bits(id_inst, 31, 25) @[Core.scala 178:29]
    node _id_imm_s_T_1 = bits(id_inst, 11, 7) @[Core.scala 178:46]
    node id_imm_s = cat(_id_imm_s_T, _id_imm_s_T_1) @[Cat.scala 33:92]
    node _id_imm_s_sext_T = bits(id_imm_s, 11, 11) @[Core.scala 179:44]
    node _id_imm_s_sext_T_1 = bits(_id_imm_s_sext_T, 0, 0) @[Bitwise.scala 77:15]
    node _id_imm_s_sext_T_2 = mux(_id_imm_s_sext_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
    node id_imm_s_sext = cat(_id_imm_s_sext_T_2, id_imm_s) @[Cat.scala 33:92]
    node _id_imm_b_T = bits(id_inst, 31, 31) @[Core.scala 180:29]
    node _id_imm_b_T_1 = bits(id_inst, 7, 7) @[Core.scala 180:42]
    node _id_imm_b_T_2 = bits(id_inst, 30, 25) @[Core.scala 180:54]
    node _id_imm_b_T_3 = bits(id_inst, 11, 8) @[Core.scala 180:71]
    node id_imm_b_lo = cat(_id_imm_b_T_2, _id_imm_b_T_3) @[Cat.scala 33:92]
    node id_imm_b_hi = cat(_id_imm_b_T, _id_imm_b_T_1) @[Cat.scala 33:92]
    node id_imm_b = cat(id_imm_b_hi, id_imm_b_lo) @[Cat.scala 33:92]
    node _id_imm_b_sext_T = bits(id_imm_b, 11, 11) @[Core.scala 181:44]
    node _id_imm_b_sext_T_1 = bits(_id_imm_b_sext_T, 0, 0) @[Bitwise.scala 77:15]
    node _id_imm_b_sext_T_2 = mux(_id_imm_b_sext_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 77:12]
    node _id_imm_b_sext_T_3 = dshr(UInt<1>("h0"), UInt<1>("h1")) @[Core.scala 181:64]
    node _id_imm_b_sext_T_4 = bits(_id_imm_b_sext_T_3, 0, 0) @[Core.scala 181:64]
    node id_imm_b_sext_hi = cat(_id_imm_b_sext_T_2, id_imm_b) @[Cat.scala 33:92]
    node id_imm_b_sext = cat(id_imm_b_sext_hi, _id_imm_b_sext_T_4) @[Cat.scala 33:92]
    node _id_imm_j_T = bits(id_inst, 31, 31) @[Core.scala 182:29]
    node _id_imm_j_T_1 = bits(id_inst, 19, 12) @[Core.scala 182:42]
    node _id_imm_j_T_2 = bits(id_inst, 20, 20) @[Core.scala 182:59]
    node _id_imm_j_T_3 = bits(id_inst, 30, 21) @[Core.scala 182:72]
    node id_imm_j_lo = cat(_id_imm_j_T_2, _id_imm_j_T_3) @[Cat.scala 33:92]
    node id_imm_j_hi = cat(_id_imm_j_T, _id_imm_j_T_1) @[Cat.scala 33:92]
    node id_imm_j = cat(id_imm_j_hi, id_imm_j_lo) @[Cat.scala 33:92]
    node _id_imm_j_sext_T = bits(id_imm_j, 19, 19) @[Core.scala 183:44]
    node _id_imm_j_sext_T_1 = bits(_id_imm_j_sext_T, 0, 0) @[Bitwise.scala 77:15]
    node _id_imm_j_sext_T_2 = mux(_id_imm_j_sext_T_1, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 77:12]
    node _id_imm_j_sext_T_3 = dshr(UInt<1>("h0"), UInt<1>("h1")) @[Core.scala 183:64]
    node _id_imm_j_sext_T_4 = bits(_id_imm_j_sext_T_3, 0, 0) @[Core.scala 183:64]
    node id_imm_j_sext_hi = cat(_id_imm_j_sext_T_2, id_imm_j) @[Cat.scala 33:92]
    node id_imm_j_sext = cat(id_imm_j_sext_hi, _id_imm_j_sext_T_4) @[Cat.scala 33:92]
    node id_imm_u = bits(id_inst, 31, 12) @[Core.scala 184:25]
    node _id_imm_u_shifted_T = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 77:12]
    node id_imm_u_shifted = cat(id_imm_u, _id_imm_u_shifted_T) @[Cat.scala 33:92]
    node id_imm_z = bits(id_inst, 19, 15) @[Core.scala 186:25]
    node _id_imm_z_uext_T = mux(UInt<1>("h0"), UInt<27>("h7ffffff"), UInt<27>("h0")) @[Bitwise.scala 77:12]
    node id_imm_z_uext = cat(_id_imm_z_uext_T, id_imm_z) @[Cat.scala 33:92]
    node _csignals_T = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_1 = eq(UInt<2>("h3"), _csignals_T) @[Lookup.scala 31:38]
    node _csignals_T_2 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_3 = eq(UInt<15>("h4003"), _csignals_T_2) @[Lookup.scala 31:38]
    node _csignals_T_4 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_5 = eq(UInt<6>("h23"), _csignals_T_4) @[Lookup.scala 31:38]
    node _csignals_T_6 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_7 = eq(UInt<13>("h1003"), _csignals_T_6) @[Lookup.scala 31:38]
    node _csignals_T_8 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_9 = eq(UInt<15>("h5003"), _csignals_T_8) @[Lookup.scala 31:38]
    node _csignals_T_10 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_11 = eq(UInt<13>("h1023"), _csignals_T_10) @[Lookup.scala 31:38]
    node _csignals_T_12 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_13 = eq(UInt<14>("h2003"), _csignals_T_12) @[Lookup.scala 31:38]
    node _csignals_T_14 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_15 = eq(UInt<14>("h2023"), _csignals_T_14) @[Lookup.scala 31:38]
    node _csignals_T_16 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_17 = eq(UInt<6>("h33"), _csignals_T_16) @[Lookup.scala 31:38]
    node _csignals_T_18 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_19 = eq(UInt<5>("h13"), _csignals_T_18) @[Lookup.scala 31:38]
    node _csignals_T_20 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_21 = eq(UInt<31>("h40000033"), _csignals_T_20) @[Lookup.scala 31:38]
    node _csignals_T_22 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_23 = eq(UInt<15>("h7033"), _csignals_T_22) @[Lookup.scala 31:38]
    node _csignals_T_24 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_25 = eq(UInt<15>("h6033"), _csignals_T_24) @[Lookup.scala 31:38]
    node _csignals_T_26 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_27 = eq(UInt<15>("h4033"), _csignals_T_26) @[Lookup.scala 31:38]
    node _csignals_T_28 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_29 = eq(UInt<15>("h7013"), _csignals_T_28) @[Lookup.scala 31:38]
    node _csignals_T_30 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_31 = eq(UInt<15>("h6013"), _csignals_T_30) @[Lookup.scala 31:38]
    node _csignals_T_32 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_33 = eq(UInt<15>("h4013"), _csignals_T_32) @[Lookup.scala 31:38]
    node _csignals_T_34 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_35 = eq(UInt<13>("h1033"), _csignals_T_34) @[Lookup.scala 31:38]
    node _csignals_T_36 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_37 = eq(UInt<15>("h5033"), _csignals_T_36) @[Lookup.scala 31:38]
    node _csignals_T_38 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_39 = eq(UInt<31>("h40005033"), _csignals_T_38) @[Lookup.scala 31:38]
    node _csignals_T_40 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_41 = eq(UInt<13>("h1013"), _csignals_T_40) @[Lookup.scala 31:38]
    node _csignals_T_42 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_43 = eq(UInt<15>("h5013"), _csignals_T_42) @[Lookup.scala 31:38]
    node _csignals_T_44 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_45 = eq(UInt<31>("h40005013"), _csignals_T_44) @[Lookup.scala 31:38]
    node _csignals_T_46 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_47 = eq(UInt<14>("h2033"), _csignals_T_46) @[Lookup.scala 31:38]
    node _csignals_T_48 = and(id_inst, UInt<32>("hfe00707f")) @[Lookup.scala 31:38]
    node _csignals_T_49 = eq(UInt<14>("h3033"), _csignals_T_48) @[Lookup.scala 31:38]
    node _csignals_T_50 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_51 = eq(UInt<14>("h2013"), _csignals_T_50) @[Lookup.scala 31:38]
    node _csignals_T_52 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_53 = eq(UInt<14>("h3013"), _csignals_T_52) @[Lookup.scala 31:38]
    node _csignals_T_54 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_55 = eq(UInt<7>("h63"), _csignals_T_54) @[Lookup.scala 31:38]
    node _csignals_T_56 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_57 = eq(UInt<13>("h1063"), _csignals_T_56) @[Lookup.scala 31:38]
    node _csignals_T_58 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_59 = eq(UInt<15>("h5063"), _csignals_T_58) @[Lookup.scala 31:38]
    node _csignals_T_60 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_61 = eq(UInt<15>("h7063"), _csignals_T_60) @[Lookup.scala 31:38]
    node _csignals_T_62 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_63 = eq(UInt<15>("h4063"), _csignals_T_62) @[Lookup.scala 31:38]
    node _csignals_T_64 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_65 = eq(UInt<15>("h6063"), _csignals_T_64) @[Lookup.scala 31:38]
    node _csignals_T_66 = and(id_inst, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _csignals_T_67 = eq(UInt<7>("h6f"), _csignals_T_66) @[Lookup.scala 31:38]
    node _csignals_T_68 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_69 = eq(UInt<7>("h67"), _csignals_T_68) @[Lookup.scala 31:38]
    node _csignals_T_70 = and(id_inst, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _csignals_T_71 = eq(UInt<6>("h37"), _csignals_T_70) @[Lookup.scala 31:38]
    node _csignals_T_72 = and(id_inst, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _csignals_T_73 = eq(UInt<5>("h17"), _csignals_T_72) @[Lookup.scala 31:38]
    node _csignals_T_74 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_75 = eq(UInt<13>("h1073"), _csignals_T_74) @[Lookup.scala 31:38]
    node _csignals_T_76 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_77 = eq(UInt<15>("h5073"), _csignals_T_76) @[Lookup.scala 31:38]
    node _csignals_T_78 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_79 = eq(UInt<14>("h2073"), _csignals_T_78) @[Lookup.scala 31:38]
    node _csignals_T_80 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_81 = eq(UInt<15>("h6073"), _csignals_T_80) @[Lookup.scala 31:38]
    node _csignals_T_82 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_83 = eq(UInt<14>("h3073"), _csignals_T_82) @[Lookup.scala 31:38]
    node _csignals_T_84 = and(id_inst, UInt<15>("h707f")) @[Lookup.scala 31:38]
    node _csignals_T_85 = eq(UInt<15>("h7073"), _csignals_T_84) @[Lookup.scala 31:38]
    node _csignals_T_86 = and(id_inst, UInt<32>("hffffffff")) @[Lookup.scala 31:38]
    node _csignals_T_87 = eq(UInt<7>("h73"), _csignals_T_86) @[Lookup.scala 31:38]
    node _csignals_T_88 = mux(_csignals_T_87, UInt<5>("h0"), UInt<5>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_89 = mux(_csignals_T_85, UInt<5>("h12"), _csignals_T_88) @[Lookup.scala 34:39]
    node _csignals_T_90 = mux(_csignals_T_83, UInt<5>("h12"), _csignals_T_89) @[Lookup.scala 34:39]
    node _csignals_T_91 = mux(_csignals_T_81, UInt<5>("h12"), _csignals_T_90) @[Lookup.scala 34:39]
    node _csignals_T_92 = mux(_csignals_T_79, UInt<5>("h12"), _csignals_T_91) @[Lookup.scala 34:39]
    node _csignals_T_93 = mux(_csignals_T_77, UInt<5>("h12"), _csignals_T_92) @[Lookup.scala 34:39]
    node _csignals_T_94 = mux(_csignals_T_75, UInt<5>("h12"), _csignals_T_93) @[Lookup.scala 34:39]
    node _csignals_T_95 = mux(_csignals_T_73, UInt<5>("h1"), _csignals_T_94) @[Lookup.scala 34:39]
    node _csignals_T_96 = mux(_csignals_T_71, UInt<5>("h1"), _csignals_T_95) @[Lookup.scala 34:39]
    node _csignals_T_97 = mux(_csignals_T_69, UInt<5>("h11"), _csignals_T_96) @[Lookup.scala 34:39]
    node _csignals_T_98 = mux(_csignals_T_67, UInt<5>("h1"), _csignals_T_97) @[Lookup.scala 34:39]
    node _csignals_T_99 = mux(_csignals_T_65, UInt<5>("hf"), _csignals_T_98) @[Lookup.scala 34:39]
    node _csignals_T_100 = mux(_csignals_T_63, UInt<5>("hd"), _csignals_T_99) @[Lookup.scala 34:39]
    node _csignals_T_101 = mux(_csignals_T_61, UInt<5>("h10"), _csignals_T_100) @[Lookup.scala 34:39]
    node _csignals_T_102 = mux(_csignals_T_59, UInt<5>("he"), _csignals_T_101) @[Lookup.scala 34:39]
    node _csignals_T_103 = mux(_csignals_T_57, UInt<5>("hc"), _csignals_T_102) @[Lookup.scala 34:39]
    node _csignals_T_104 = mux(_csignals_T_55, UInt<5>("hb"), _csignals_T_103) @[Lookup.scala 34:39]
    node _csignals_T_105 = mux(_csignals_T_53, UInt<5>("ha"), _csignals_T_104) @[Lookup.scala 34:39]
    node _csignals_T_106 = mux(_csignals_T_51, UInt<5>("h9"), _csignals_T_105) @[Lookup.scala 34:39]
    node _csignals_T_107 = mux(_csignals_T_49, UInt<5>("ha"), _csignals_T_106) @[Lookup.scala 34:39]
    node _csignals_T_108 = mux(_csignals_T_47, UInt<5>("h9"), _csignals_T_107) @[Lookup.scala 34:39]
    node _csignals_T_109 = mux(_csignals_T_45, UInt<5>("h8"), _csignals_T_108) @[Lookup.scala 34:39]
    node _csignals_T_110 = mux(_csignals_T_43, UInt<5>("h7"), _csignals_T_109) @[Lookup.scala 34:39]
    node _csignals_T_111 = mux(_csignals_T_41, UInt<5>("h6"), _csignals_T_110) @[Lookup.scala 34:39]
    node _csignals_T_112 = mux(_csignals_T_39, UInt<5>("h8"), _csignals_T_111) @[Lookup.scala 34:39]
    node _csignals_T_113 = mux(_csignals_T_37, UInt<5>("h7"), _csignals_T_112) @[Lookup.scala 34:39]
    node _csignals_T_114 = mux(_csignals_T_35, UInt<5>("h6"), _csignals_T_113) @[Lookup.scala 34:39]
    node _csignals_T_115 = mux(_csignals_T_33, UInt<5>("h5"), _csignals_T_114) @[Lookup.scala 34:39]
    node _csignals_T_116 = mux(_csignals_T_31, UInt<5>("h4"), _csignals_T_115) @[Lookup.scala 34:39]
    node _csignals_T_117 = mux(_csignals_T_29, UInt<5>("h3"), _csignals_T_116) @[Lookup.scala 34:39]
    node _csignals_T_118 = mux(_csignals_T_27, UInt<5>("h5"), _csignals_T_117) @[Lookup.scala 34:39]
    node _csignals_T_119 = mux(_csignals_T_25, UInt<5>("h4"), _csignals_T_118) @[Lookup.scala 34:39]
    node _csignals_T_120 = mux(_csignals_T_23, UInt<5>("h3"), _csignals_T_119) @[Lookup.scala 34:39]
    node _csignals_T_121 = mux(_csignals_T_21, UInt<5>("h2"), _csignals_T_120) @[Lookup.scala 34:39]
    node _csignals_T_122 = mux(_csignals_T_19, UInt<5>("h1"), _csignals_T_121) @[Lookup.scala 34:39]
    node _csignals_T_123 = mux(_csignals_T_17, UInt<5>("h1"), _csignals_T_122) @[Lookup.scala 34:39]
    node _csignals_T_124 = mux(_csignals_T_15, UInt<5>("h1"), _csignals_T_123) @[Lookup.scala 34:39]
    node _csignals_T_125 = mux(_csignals_T_13, UInt<5>("h1"), _csignals_T_124) @[Lookup.scala 34:39]
    node _csignals_T_126 = mux(_csignals_T_11, UInt<5>("h1"), _csignals_T_125) @[Lookup.scala 34:39]
    node _csignals_T_127 = mux(_csignals_T_9, UInt<5>("h1"), _csignals_T_126) @[Lookup.scala 34:39]
    node _csignals_T_128 = mux(_csignals_T_7, UInt<5>("h1"), _csignals_T_127) @[Lookup.scala 34:39]
    node _csignals_T_129 = mux(_csignals_T_5, UInt<5>("h1"), _csignals_T_128) @[Lookup.scala 34:39]
    node _csignals_T_130 = mux(_csignals_T_3, UInt<5>("h1"), _csignals_T_129) @[Lookup.scala 34:39]
    node csignals_0 = mux(_csignals_T_1, UInt<5>("h1"), _csignals_T_130) @[Lookup.scala 34:39]
    node _csignals_T_131 = mux(_csignals_T_87, UInt<2>("h2"), UInt<2>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_132 = mux(_csignals_T_85, UInt<2>("h3"), _csignals_T_131) @[Lookup.scala 34:39]
    node _csignals_T_133 = mux(_csignals_T_83, UInt<2>("h0"), _csignals_T_132) @[Lookup.scala 34:39]
    node _csignals_T_134 = mux(_csignals_T_81, UInt<2>("h3"), _csignals_T_133) @[Lookup.scala 34:39]
    node _csignals_T_135 = mux(_csignals_T_79, UInt<2>("h0"), _csignals_T_134) @[Lookup.scala 34:39]
    node _csignals_T_136 = mux(_csignals_T_77, UInt<2>("h3"), _csignals_T_135) @[Lookup.scala 34:39]
    node _csignals_T_137 = mux(_csignals_T_75, UInt<2>("h0"), _csignals_T_136) @[Lookup.scala 34:39]
    node _csignals_T_138 = mux(_csignals_T_73, UInt<2>("h1"), _csignals_T_137) @[Lookup.scala 34:39]
    node _csignals_T_139 = mux(_csignals_T_71, UInt<2>("h2"), _csignals_T_138) @[Lookup.scala 34:39]
    node _csignals_T_140 = mux(_csignals_T_69, UInt<2>("h0"), _csignals_T_139) @[Lookup.scala 34:39]
    node _csignals_T_141 = mux(_csignals_T_67, UInt<2>("h1"), _csignals_T_140) @[Lookup.scala 34:39]
    node _csignals_T_142 = mux(_csignals_T_65, UInt<2>("h0"), _csignals_T_141) @[Lookup.scala 34:39]
    node _csignals_T_143 = mux(_csignals_T_63, UInt<2>("h0"), _csignals_T_142) @[Lookup.scala 34:39]
    node _csignals_T_144 = mux(_csignals_T_61, UInt<2>("h0"), _csignals_T_143) @[Lookup.scala 34:39]
    node _csignals_T_145 = mux(_csignals_T_59, UInt<2>("h0"), _csignals_T_144) @[Lookup.scala 34:39]
    node _csignals_T_146 = mux(_csignals_T_57, UInt<2>("h0"), _csignals_T_145) @[Lookup.scala 34:39]
    node _csignals_T_147 = mux(_csignals_T_55, UInt<2>("h0"), _csignals_T_146) @[Lookup.scala 34:39]
    node _csignals_T_148 = mux(_csignals_T_53, UInt<2>("h0"), _csignals_T_147) @[Lookup.scala 34:39]
    node _csignals_T_149 = mux(_csignals_T_51, UInt<2>("h0"), _csignals_T_148) @[Lookup.scala 34:39]
    node _csignals_T_150 = mux(_csignals_T_49, UInt<2>("h0"), _csignals_T_149) @[Lookup.scala 34:39]
    node _csignals_T_151 = mux(_csignals_T_47, UInt<2>("h0"), _csignals_T_150) @[Lookup.scala 34:39]
    node _csignals_T_152 = mux(_csignals_T_45, UInt<2>("h0"), _csignals_T_151) @[Lookup.scala 34:39]
    node _csignals_T_153 = mux(_csignals_T_43, UInt<2>("h0"), _csignals_T_152) @[Lookup.scala 34:39]
    node _csignals_T_154 = mux(_csignals_T_41, UInt<2>("h0"), _csignals_T_153) @[Lookup.scala 34:39]
    node _csignals_T_155 = mux(_csignals_T_39, UInt<2>("h0"), _csignals_T_154) @[Lookup.scala 34:39]
    node _csignals_T_156 = mux(_csignals_T_37, UInt<2>("h0"), _csignals_T_155) @[Lookup.scala 34:39]
    node _csignals_T_157 = mux(_csignals_T_35, UInt<2>("h0"), _csignals_T_156) @[Lookup.scala 34:39]
    node _csignals_T_158 = mux(_csignals_T_33, UInt<2>("h0"), _csignals_T_157) @[Lookup.scala 34:39]
    node _csignals_T_159 = mux(_csignals_T_31, UInt<2>("h0"), _csignals_T_158) @[Lookup.scala 34:39]
    node _csignals_T_160 = mux(_csignals_T_29, UInt<2>("h0"), _csignals_T_159) @[Lookup.scala 34:39]
    node _csignals_T_161 = mux(_csignals_T_27, UInt<2>("h0"), _csignals_T_160) @[Lookup.scala 34:39]
    node _csignals_T_162 = mux(_csignals_T_25, UInt<2>("h0"), _csignals_T_161) @[Lookup.scala 34:39]
    node _csignals_T_163 = mux(_csignals_T_23, UInt<2>("h0"), _csignals_T_162) @[Lookup.scala 34:39]
    node _csignals_T_164 = mux(_csignals_T_21, UInt<2>("h0"), _csignals_T_163) @[Lookup.scala 34:39]
    node _csignals_T_165 = mux(_csignals_T_19, UInt<2>("h0"), _csignals_T_164) @[Lookup.scala 34:39]
    node _csignals_T_166 = mux(_csignals_T_17, UInt<2>("h0"), _csignals_T_165) @[Lookup.scala 34:39]
    node _csignals_T_167 = mux(_csignals_T_15, UInt<2>("h0"), _csignals_T_166) @[Lookup.scala 34:39]
    node _csignals_T_168 = mux(_csignals_T_13, UInt<2>("h0"), _csignals_T_167) @[Lookup.scala 34:39]
    node _csignals_T_169 = mux(_csignals_T_11, UInt<2>("h0"), _csignals_T_168) @[Lookup.scala 34:39]
    node _csignals_T_170 = mux(_csignals_T_9, UInt<2>("h0"), _csignals_T_169) @[Lookup.scala 34:39]
    node _csignals_T_171 = mux(_csignals_T_7, UInt<2>("h0"), _csignals_T_170) @[Lookup.scala 34:39]
    node _csignals_T_172 = mux(_csignals_T_5, UInt<2>("h0"), _csignals_T_171) @[Lookup.scala 34:39]
    node _csignals_T_173 = mux(_csignals_T_3, UInt<2>("h0"), _csignals_T_172) @[Lookup.scala 34:39]
    node csignals_1 = mux(_csignals_T_1, UInt<2>("h0"), _csignals_T_173) @[Lookup.scala 34:39]
    node _csignals_T_174 = mux(_csignals_T_87, UInt<3>("h0"), UInt<3>("h1")) @[Lookup.scala 34:39]
    node _csignals_T_175 = mux(_csignals_T_85, UInt<3>("h0"), _csignals_T_174) @[Lookup.scala 34:39]
    node _csignals_T_176 = mux(_csignals_T_83, UInt<3>("h0"), _csignals_T_175) @[Lookup.scala 34:39]
    node _csignals_T_177 = mux(_csignals_T_81, UInt<3>("h0"), _csignals_T_176) @[Lookup.scala 34:39]
    node _csignals_T_178 = mux(_csignals_T_79, UInt<3>("h0"), _csignals_T_177) @[Lookup.scala 34:39]
    node _csignals_T_179 = mux(_csignals_T_77, UInt<3>("h0"), _csignals_T_178) @[Lookup.scala 34:39]
    node _csignals_T_180 = mux(_csignals_T_75, UInt<3>("h0"), _csignals_T_179) @[Lookup.scala 34:39]
    node _csignals_T_181 = mux(_csignals_T_73, UInt<3>("h5"), _csignals_T_180) @[Lookup.scala 34:39]
    node _csignals_T_182 = mux(_csignals_T_71, UInt<3>("h5"), _csignals_T_181) @[Lookup.scala 34:39]
    node _csignals_T_183 = mux(_csignals_T_69, UInt<3>("h2"), _csignals_T_182) @[Lookup.scala 34:39]
    node _csignals_T_184 = mux(_csignals_T_67, UInt<3>("h4"), _csignals_T_183) @[Lookup.scala 34:39]
    node _csignals_T_185 = mux(_csignals_T_65, UInt<3>("h1"), _csignals_T_184) @[Lookup.scala 34:39]
    node _csignals_T_186 = mux(_csignals_T_63, UInt<3>("h1"), _csignals_T_185) @[Lookup.scala 34:39]
    node _csignals_T_187 = mux(_csignals_T_61, UInt<3>("h1"), _csignals_T_186) @[Lookup.scala 34:39]
    node _csignals_T_188 = mux(_csignals_T_59, UInt<3>("h1"), _csignals_T_187) @[Lookup.scala 34:39]
    node _csignals_T_189 = mux(_csignals_T_57, UInt<3>("h1"), _csignals_T_188) @[Lookup.scala 34:39]
    node _csignals_T_190 = mux(_csignals_T_55, UInt<3>("h1"), _csignals_T_189) @[Lookup.scala 34:39]
    node _csignals_T_191 = mux(_csignals_T_53, UInt<3>("h2"), _csignals_T_190) @[Lookup.scala 34:39]
    node _csignals_T_192 = mux(_csignals_T_51, UInt<3>("h2"), _csignals_T_191) @[Lookup.scala 34:39]
    node _csignals_T_193 = mux(_csignals_T_49, UInt<3>("h1"), _csignals_T_192) @[Lookup.scala 34:39]
    node _csignals_T_194 = mux(_csignals_T_47, UInt<3>("h1"), _csignals_T_193) @[Lookup.scala 34:39]
    node _csignals_T_195 = mux(_csignals_T_45, UInt<3>("h2"), _csignals_T_194) @[Lookup.scala 34:39]
    node _csignals_T_196 = mux(_csignals_T_43, UInt<3>("h2"), _csignals_T_195) @[Lookup.scala 34:39]
    node _csignals_T_197 = mux(_csignals_T_41, UInt<3>("h2"), _csignals_T_196) @[Lookup.scala 34:39]
    node _csignals_T_198 = mux(_csignals_T_39, UInt<3>("h1"), _csignals_T_197) @[Lookup.scala 34:39]
    node _csignals_T_199 = mux(_csignals_T_37, UInt<3>("h1"), _csignals_T_198) @[Lookup.scala 34:39]
    node _csignals_T_200 = mux(_csignals_T_35, UInt<3>("h1"), _csignals_T_199) @[Lookup.scala 34:39]
    node _csignals_T_201 = mux(_csignals_T_33, UInt<3>("h2"), _csignals_T_200) @[Lookup.scala 34:39]
    node _csignals_T_202 = mux(_csignals_T_31, UInt<3>("h2"), _csignals_T_201) @[Lookup.scala 34:39]
    node _csignals_T_203 = mux(_csignals_T_29, UInt<3>("h2"), _csignals_T_202) @[Lookup.scala 34:39]
    node _csignals_T_204 = mux(_csignals_T_27, UInt<3>("h1"), _csignals_T_203) @[Lookup.scala 34:39]
    node _csignals_T_205 = mux(_csignals_T_25, UInt<3>("h1"), _csignals_T_204) @[Lookup.scala 34:39]
    node _csignals_T_206 = mux(_csignals_T_23, UInt<3>("h1"), _csignals_T_205) @[Lookup.scala 34:39]
    node _csignals_T_207 = mux(_csignals_T_21, UInt<3>("h1"), _csignals_T_206) @[Lookup.scala 34:39]
    node _csignals_T_208 = mux(_csignals_T_19, UInt<3>("h2"), _csignals_T_207) @[Lookup.scala 34:39]
    node _csignals_T_209 = mux(_csignals_T_17, UInt<3>("h1"), _csignals_T_208) @[Lookup.scala 34:39]
    node _csignals_T_210 = mux(_csignals_T_15, UInt<3>("h3"), _csignals_T_209) @[Lookup.scala 34:39]
    node _csignals_T_211 = mux(_csignals_T_13, UInt<3>("h2"), _csignals_T_210) @[Lookup.scala 34:39]
    node _csignals_T_212 = mux(_csignals_T_11, UInt<3>("h3"), _csignals_T_211) @[Lookup.scala 34:39]
    node _csignals_T_213 = mux(_csignals_T_9, UInt<3>("h2"), _csignals_T_212) @[Lookup.scala 34:39]
    node _csignals_T_214 = mux(_csignals_T_7, UInt<3>("h2"), _csignals_T_213) @[Lookup.scala 34:39]
    node _csignals_T_215 = mux(_csignals_T_5, UInt<3>("h3"), _csignals_T_214) @[Lookup.scala 34:39]
    node _csignals_T_216 = mux(_csignals_T_3, UInt<3>("h2"), _csignals_T_215) @[Lookup.scala 34:39]
    node csignals_2 = mux(_csignals_T_1, UInt<3>("h2"), _csignals_T_216) @[Lookup.scala 34:39]
    node _csignals_T_217 = mux(_csignals_T_87, UInt<2>("h0"), UInt<2>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_218 = mux(_csignals_T_85, UInt<2>("h0"), _csignals_T_217) @[Lookup.scala 34:39]
    node _csignals_T_219 = mux(_csignals_T_83, UInt<2>("h0"), _csignals_T_218) @[Lookup.scala 34:39]
    node _csignals_T_220 = mux(_csignals_T_81, UInt<2>("h0"), _csignals_T_219) @[Lookup.scala 34:39]
    node _csignals_T_221 = mux(_csignals_T_79, UInt<2>("h0"), _csignals_T_220) @[Lookup.scala 34:39]
    node _csignals_T_222 = mux(_csignals_T_77, UInt<2>("h0"), _csignals_T_221) @[Lookup.scala 34:39]
    node _csignals_T_223 = mux(_csignals_T_75, UInt<2>("h0"), _csignals_T_222) @[Lookup.scala 34:39]
    node _csignals_T_224 = mux(_csignals_T_73, UInt<2>("h0"), _csignals_T_223) @[Lookup.scala 34:39]
    node _csignals_T_225 = mux(_csignals_T_71, UInt<2>("h0"), _csignals_T_224) @[Lookup.scala 34:39]
    node _csignals_T_226 = mux(_csignals_T_69, UInt<2>("h0"), _csignals_T_225) @[Lookup.scala 34:39]
    node _csignals_T_227 = mux(_csignals_T_67, UInt<2>("h0"), _csignals_T_226) @[Lookup.scala 34:39]
    node _csignals_T_228 = mux(_csignals_T_65, UInt<2>("h0"), _csignals_T_227) @[Lookup.scala 34:39]
    node _csignals_T_229 = mux(_csignals_T_63, UInt<2>("h0"), _csignals_T_228) @[Lookup.scala 34:39]
    node _csignals_T_230 = mux(_csignals_T_61, UInt<2>("h0"), _csignals_T_229) @[Lookup.scala 34:39]
    node _csignals_T_231 = mux(_csignals_T_59, UInt<2>("h0"), _csignals_T_230) @[Lookup.scala 34:39]
    node _csignals_T_232 = mux(_csignals_T_57, UInt<2>("h0"), _csignals_T_231) @[Lookup.scala 34:39]
    node _csignals_T_233 = mux(_csignals_T_55, UInt<2>("h0"), _csignals_T_232) @[Lookup.scala 34:39]
    node _csignals_T_234 = mux(_csignals_T_53, UInt<2>("h0"), _csignals_T_233) @[Lookup.scala 34:39]
    node _csignals_T_235 = mux(_csignals_T_51, UInt<2>("h0"), _csignals_T_234) @[Lookup.scala 34:39]
    node _csignals_T_236 = mux(_csignals_T_49, UInt<2>("h0"), _csignals_T_235) @[Lookup.scala 34:39]
    node _csignals_T_237 = mux(_csignals_T_47, UInt<2>("h0"), _csignals_T_236) @[Lookup.scala 34:39]
    node _csignals_T_238 = mux(_csignals_T_45, UInt<2>("h0"), _csignals_T_237) @[Lookup.scala 34:39]
    node _csignals_T_239 = mux(_csignals_T_43, UInt<2>("h0"), _csignals_T_238) @[Lookup.scala 34:39]
    node _csignals_T_240 = mux(_csignals_T_41, UInt<2>("h0"), _csignals_T_239) @[Lookup.scala 34:39]
    node _csignals_T_241 = mux(_csignals_T_39, UInt<2>("h0"), _csignals_T_240) @[Lookup.scala 34:39]
    node _csignals_T_242 = mux(_csignals_T_37, UInt<2>("h0"), _csignals_T_241) @[Lookup.scala 34:39]
    node _csignals_T_243 = mux(_csignals_T_35, UInt<2>("h0"), _csignals_T_242) @[Lookup.scala 34:39]
    node _csignals_T_244 = mux(_csignals_T_33, UInt<2>("h0"), _csignals_T_243) @[Lookup.scala 34:39]
    node _csignals_T_245 = mux(_csignals_T_31, UInt<2>("h0"), _csignals_T_244) @[Lookup.scala 34:39]
    node _csignals_T_246 = mux(_csignals_T_29, UInt<2>("h0"), _csignals_T_245) @[Lookup.scala 34:39]
    node _csignals_T_247 = mux(_csignals_T_27, UInt<2>("h0"), _csignals_T_246) @[Lookup.scala 34:39]
    node _csignals_T_248 = mux(_csignals_T_25, UInt<2>("h0"), _csignals_T_247) @[Lookup.scala 34:39]
    node _csignals_T_249 = mux(_csignals_T_23, UInt<2>("h0"), _csignals_T_248) @[Lookup.scala 34:39]
    node _csignals_T_250 = mux(_csignals_T_21, UInt<2>("h0"), _csignals_T_249) @[Lookup.scala 34:39]
    node _csignals_T_251 = mux(_csignals_T_19, UInt<2>("h0"), _csignals_T_250) @[Lookup.scala 34:39]
    node _csignals_T_252 = mux(_csignals_T_17, UInt<2>("h0"), _csignals_T_251) @[Lookup.scala 34:39]
    node _csignals_T_253 = mux(_csignals_T_15, UInt<2>("h1"), _csignals_T_252) @[Lookup.scala 34:39]
    node _csignals_T_254 = mux(_csignals_T_13, UInt<2>("h0"), _csignals_T_253) @[Lookup.scala 34:39]
    node _csignals_T_255 = mux(_csignals_T_11, UInt<2>("h1"), _csignals_T_254) @[Lookup.scala 34:39]
    node _csignals_T_256 = mux(_csignals_T_9, UInt<2>("h0"), _csignals_T_255) @[Lookup.scala 34:39]
    node _csignals_T_257 = mux(_csignals_T_7, UInt<2>("h0"), _csignals_T_256) @[Lookup.scala 34:39]
    node _csignals_T_258 = mux(_csignals_T_5, UInt<2>("h1"), _csignals_T_257) @[Lookup.scala 34:39]
    node _csignals_T_259 = mux(_csignals_T_3, UInt<2>("h0"), _csignals_T_258) @[Lookup.scala 34:39]
    node csignals_3 = mux(_csignals_T_1, UInt<2>("h0"), _csignals_T_259) @[Lookup.scala 34:39]
    node _csignals_T_260 = mux(_csignals_T_87, UInt<2>("h0"), UInt<2>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_261 = mux(_csignals_T_85, UInt<2>("h1"), _csignals_T_260) @[Lookup.scala 34:39]
    node _csignals_T_262 = mux(_csignals_T_83, UInt<2>("h1"), _csignals_T_261) @[Lookup.scala 34:39]
    node _csignals_T_263 = mux(_csignals_T_81, UInt<2>("h1"), _csignals_T_262) @[Lookup.scala 34:39]
    node _csignals_T_264 = mux(_csignals_T_79, UInt<2>("h1"), _csignals_T_263) @[Lookup.scala 34:39]
    node _csignals_T_265 = mux(_csignals_T_77, UInt<2>("h1"), _csignals_T_264) @[Lookup.scala 34:39]
    node _csignals_T_266 = mux(_csignals_T_75, UInt<2>("h1"), _csignals_T_265) @[Lookup.scala 34:39]
    node _csignals_T_267 = mux(_csignals_T_73, UInt<2>("h1"), _csignals_T_266) @[Lookup.scala 34:39]
    node _csignals_T_268 = mux(_csignals_T_71, UInt<2>("h1"), _csignals_T_267) @[Lookup.scala 34:39]
    node _csignals_T_269 = mux(_csignals_T_69, UInt<2>("h1"), _csignals_T_268) @[Lookup.scala 34:39]
    node _csignals_T_270 = mux(_csignals_T_67, UInt<2>("h1"), _csignals_T_269) @[Lookup.scala 34:39]
    node _csignals_T_271 = mux(_csignals_T_65, UInt<2>("h0"), _csignals_T_270) @[Lookup.scala 34:39]
    node _csignals_T_272 = mux(_csignals_T_63, UInt<2>("h0"), _csignals_T_271) @[Lookup.scala 34:39]
    node _csignals_T_273 = mux(_csignals_T_61, UInt<2>("h0"), _csignals_T_272) @[Lookup.scala 34:39]
    node _csignals_T_274 = mux(_csignals_T_59, UInt<2>("h0"), _csignals_T_273) @[Lookup.scala 34:39]
    node _csignals_T_275 = mux(_csignals_T_57, UInt<2>("h0"), _csignals_T_274) @[Lookup.scala 34:39]
    node _csignals_T_276 = mux(_csignals_T_55, UInt<2>("h0"), _csignals_T_275) @[Lookup.scala 34:39]
    node _csignals_T_277 = mux(_csignals_T_53, UInt<2>("h1"), _csignals_T_276) @[Lookup.scala 34:39]
    node _csignals_T_278 = mux(_csignals_T_51, UInt<2>("h1"), _csignals_T_277) @[Lookup.scala 34:39]
    node _csignals_T_279 = mux(_csignals_T_49, UInt<2>("h1"), _csignals_T_278) @[Lookup.scala 34:39]
    node _csignals_T_280 = mux(_csignals_T_47, UInt<2>("h1"), _csignals_T_279) @[Lookup.scala 34:39]
    node _csignals_T_281 = mux(_csignals_T_45, UInt<2>("h1"), _csignals_T_280) @[Lookup.scala 34:39]
    node _csignals_T_282 = mux(_csignals_T_43, UInt<2>("h1"), _csignals_T_281) @[Lookup.scala 34:39]
    node _csignals_T_283 = mux(_csignals_T_41, UInt<2>("h1"), _csignals_T_282) @[Lookup.scala 34:39]
    node _csignals_T_284 = mux(_csignals_T_39, UInt<2>("h1"), _csignals_T_283) @[Lookup.scala 34:39]
    node _csignals_T_285 = mux(_csignals_T_37, UInt<2>("h1"), _csignals_T_284) @[Lookup.scala 34:39]
    node _csignals_T_286 = mux(_csignals_T_35, UInt<2>("h1"), _csignals_T_285) @[Lookup.scala 34:39]
    node _csignals_T_287 = mux(_csignals_T_33, UInt<2>("h1"), _csignals_T_286) @[Lookup.scala 34:39]
    node _csignals_T_288 = mux(_csignals_T_31, UInt<2>("h1"), _csignals_T_287) @[Lookup.scala 34:39]
    node _csignals_T_289 = mux(_csignals_T_29, UInt<2>("h1"), _csignals_T_288) @[Lookup.scala 34:39]
    node _csignals_T_290 = mux(_csignals_T_27, UInt<2>("h1"), _csignals_T_289) @[Lookup.scala 34:39]
    node _csignals_T_291 = mux(_csignals_T_25, UInt<2>("h1"), _csignals_T_290) @[Lookup.scala 34:39]
    node _csignals_T_292 = mux(_csignals_T_23, UInt<2>("h1"), _csignals_T_291) @[Lookup.scala 34:39]
    node _csignals_T_293 = mux(_csignals_T_21, UInt<2>("h1"), _csignals_T_292) @[Lookup.scala 34:39]
    node _csignals_T_294 = mux(_csignals_T_19, UInt<2>("h1"), _csignals_T_293) @[Lookup.scala 34:39]
    node _csignals_T_295 = mux(_csignals_T_17, UInt<2>("h1"), _csignals_T_294) @[Lookup.scala 34:39]
    node _csignals_T_296 = mux(_csignals_T_15, UInt<2>("h0"), _csignals_T_295) @[Lookup.scala 34:39]
    node _csignals_T_297 = mux(_csignals_T_13, UInt<2>("h1"), _csignals_T_296) @[Lookup.scala 34:39]
    node _csignals_T_298 = mux(_csignals_T_11, UInt<2>("h0"), _csignals_T_297) @[Lookup.scala 34:39]
    node _csignals_T_299 = mux(_csignals_T_9, UInt<2>("h1"), _csignals_T_298) @[Lookup.scala 34:39]
    node _csignals_T_300 = mux(_csignals_T_7, UInt<2>("h1"), _csignals_T_299) @[Lookup.scala 34:39]
    node _csignals_T_301 = mux(_csignals_T_5, UInt<2>("h0"), _csignals_T_300) @[Lookup.scala 34:39]
    node _csignals_T_302 = mux(_csignals_T_3, UInt<2>("h1"), _csignals_T_301) @[Lookup.scala 34:39]
    node csignals_4 = mux(_csignals_T_1, UInt<2>("h1"), _csignals_T_302) @[Lookup.scala 34:39]
    node _csignals_T_303 = mux(_csignals_T_87, UInt<3>("h0"), UInt<3>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_304 = mux(_csignals_T_85, UInt<3>("h3"), _csignals_T_303) @[Lookup.scala 34:39]
    node _csignals_T_305 = mux(_csignals_T_83, UInt<3>("h3"), _csignals_T_304) @[Lookup.scala 34:39]
    node _csignals_T_306 = mux(_csignals_T_81, UInt<3>("h3"), _csignals_T_305) @[Lookup.scala 34:39]
    node _csignals_T_307 = mux(_csignals_T_79, UInt<3>("h3"), _csignals_T_306) @[Lookup.scala 34:39]
    node _csignals_T_308 = mux(_csignals_T_77, UInt<3>("h3"), _csignals_T_307) @[Lookup.scala 34:39]
    node _csignals_T_309 = mux(_csignals_T_75, UInt<3>("h3"), _csignals_T_308) @[Lookup.scala 34:39]
    node _csignals_T_310 = mux(_csignals_T_73, UInt<3>("h0"), _csignals_T_309) @[Lookup.scala 34:39]
    node _csignals_T_311 = mux(_csignals_T_71, UInt<3>("h0"), _csignals_T_310) @[Lookup.scala 34:39]
    node _csignals_T_312 = mux(_csignals_T_69, UInt<3>("h2"), _csignals_T_311) @[Lookup.scala 34:39]
    node _csignals_T_313 = mux(_csignals_T_67, UInt<3>("h2"), _csignals_T_312) @[Lookup.scala 34:39]
    node _csignals_T_314 = mux(_csignals_T_65, UInt<3>("h0"), _csignals_T_313) @[Lookup.scala 34:39]
    node _csignals_T_315 = mux(_csignals_T_63, UInt<3>("h0"), _csignals_T_314) @[Lookup.scala 34:39]
    node _csignals_T_316 = mux(_csignals_T_61, UInt<3>("h0"), _csignals_T_315) @[Lookup.scala 34:39]
    node _csignals_T_317 = mux(_csignals_T_59, UInt<3>("h0"), _csignals_T_316) @[Lookup.scala 34:39]
    node _csignals_T_318 = mux(_csignals_T_57, UInt<3>("h0"), _csignals_T_317) @[Lookup.scala 34:39]
    node _csignals_T_319 = mux(_csignals_T_55, UInt<3>("h0"), _csignals_T_318) @[Lookup.scala 34:39]
    node _csignals_T_320 = mux(_csignals_T_53, UInt<3>("h0"), _csignals_T_319) @[Lookup.scala 34:39]
    node _csignals_T_321 = mux(_csignals_T_51, UInt<3>("h0"), _csignals_T_320) @[Lookup.scala 34:39]
    node _csignals_T_322 = mux(_csignals_T_49, UInt<3>("h0"), _csignals_T_321) @[Lookup.scala 34:39]
    node _csignals_T_323 = mux(_csignals_T_47, UInt<3>("h0"), _csignals_T_322) @[Lookup.scala 34:39]
    node _csignals_T_324 = mux(_csignals_T_45, UInt<3>("h0"), _csignals_T_323) @[Lookup.scala 34:39]
    node _csignals_T_325 = mux(_csignals_T_43, UInt<3>("h0"), _csignals_T_324) @[Lookup.scala 34:39]
    node _csignals_T_326 = mux(_csignals_T_41, UInt<3>("h0"), _csignals_T_325) @[Lookup.scala 34:39]
    node _csignals_T_327 = mux(_csignals_T_39, UInt<3>("h0"), _csignals_T_326) @[Lookup.scala 34:39]
    node _csignals_T_328 = mux(_csignals_T_37, UInt<3>("h0"), _csignals_T_327) @[Lookup.scala 34:39]
    node _csignals_T_329 = mux(_csignals_T_35, UInt<3>("h0"), _csignals_T_328) @[Lookup.scala 34:39]
    node _csignals_T_330 = mux(_csignals_T_33, UInt<3>("h0"), _csignals_T_329) @[Lookup.scala 34:39]
    node _csignals_T_331 = mux(_csignals_T_31, UInt<3>("h0"), _csignals_T_330) @[Lookup.scala 34:39]
    node _csignals_T_332 = mux(_csignals_T_29, UInt<3>("h0"), _csignals_T_331) @[Lookup.scala 34:39]
    node _csignals_T_333 = mux(_csignals_T_27, UInt<3>("h0"), _csignals_T_332) @[Lookup.scala 34:39]
    node _csignals_T_334 = mux(_csignals_T_25, UInt<3>("h0"), _csignals_T_333) @[Lookup.scala 34:39]
    node _csignals_T_335 = mux(_csignals_T_23, UInt<3>("h0"), _csignals_T_334) @[Lookup.scala 34:39]
    node _csignals_T_336 = mux(_csignals_T_21, UInt<3>("h0"), _csignals_T_335) @[Lookup.scala 34:39]
    node _csignals_T_337 = mux(_csignals_T_19, UInt<3>("h0"), _csignals_T_336) @[Lookup.scala 34:39]
    node _csignals_T_338 = mux(_csignals_T_17, UInt<3>("h0"), _csignals_T_337) @[Lookup.scala 34:39]
    node _csignals_T_339 = mux(_csignals_T_15, UInt<3>("h0"), _csignals_T_338) @[Lookup.scala 34:39]
    node _csignals_T_340 = mux(_csignals_T_13, UInt<3>("h1"), _csignals_T_339) @[Lookup.scala 34:39]
    node _csignals_T_341 = mux(_csignals_T_11, UInt<3>("h0"), _csignals_T_340) @[Lookup.scala 34:39]
    node _csignals_T_342 = mux(_csignals_T_9, UInt<3>("h1"), _csignals_T_341) @[Lookup.scala 34:39]
    node _csignals_T_343 = mux(_csignals_T_7, UInt<3>("h1"), _csignals_T_342) @[Lookup.scala 34:39]
    node _csignals_T_344 = mux(_csignals_T_5, UInt<3>("h0"), _csignals_T_343) @[Lookup.scala 34:39]
    node _csignals_T_345 = mux(_csignals_T_3, UInt<3>("h1"), _csignals_T_344) @[Lookup.scala 34:39]
    node csignals_5 = mux(_csignals_T_1, UInt<3>("h1"), _csignals_T_345) @[Lookup.scala 34:39]
    node _csignals_T_346 = mux(_csignals_T_87, UInt<3>("h4"), UInt<3>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_347 = mux(_csignals_T_85, UInt<3>("h3"), _csignals_T_346) @[Lookup.scala 34:39]
    node _csignals_T_348 = mux(_csignals_T_83, UInt<3>("h3"), _csignals_T_347) @[Lookup.scala 34:39]
    node _csignals_T_349 = mux(_csignals_T_81, UInt<3>("h2"), _csignals_T_348) @[Lookup.scala 34:39]
    node _csignals_T_350 = mux(_csignals_T_79, UInt<3>("h2"), _csignals_T_349) @[Lookup.scala 34:39]
    node _csignals_T_351 = mux(_csignals_T_77, UInt<3>("h1"), _csignals_T_350) @[Lookup.scala 34:39]
    node _csignals_T_352 = mux(_csignals_T_75, UInt<3>("h1"), _csignals_T_351) @[Lookup.scala 34:39]
    node _csignals_T_353 = mux(_csignals_T_73, UInt<3>("h0"), _csignals_T_352) @[Lookup.scala 34:39]
    node _csignals_T_354 = mux(_csignals_T_71, UInt<3>("h0"), _csignals_T_353) @[Lookup.scala 34:39]
    node _csignals_T_355 = mux(_csignals_T_69, UInt<3>("h0"), _csignals_T_354) @[Lookup.scala 34:39]
    node _csignals_T_356 = mux(_csignals_T_67, UInt<3>("h0"), _csignals_T_355) @[Lookup.scala 34:39]
    node _csignals_T_357 = mux(_csignals_T_65, UInt<3>("h0"), _csignals_T_356) @[Lookup.scala 34:39]
    node _csignals_T_358 = mux(_csignals_T_63, UInt<3>("h0"), _csignals_T_357) @[Lookup.scala 34:39]
    node _csignals_T_359 = mux(_csignals_T_61, UInt<3>("h0"), _csignals_T_358) @[Lookup.scala 34:39]
    node _csignals_T_360 = mux(_csignals_T_59, UInt<3>("h0"), _csignals_T_359) @[Lookup.scala 34:39]
    node _csignals_T_361 = mux(_csignals_T_57, UInt<3>("h0"), _csignals_T_360) @[Lookup.scala 34:39]
    node _csignals_T_362 = mux(_csignals_T_55, UInt<3>("h0"), _csignals_T_361) @[Lookup.scala 34:39]
    node _csignals_T_363 = mux(_csignals_T_53, UInt<3>("h0"), _csignals_T_362) @[Lookup.scala 34:39]
    node _csignals_T_364 = mux(_csignals_T_51, UInt<3>("h0"), _csignals_T_363) @[Lookup.scala 34:39]
    node _csignals_T_365 = mux(_csignals_T_49, UInt<3>("h0"), _csignals_T_364) @[Lookup.scala 34:39]
    node _csignals_T_366 = mux(_csignals_T_47, UInt<3>("h0"), _csignals_T_365) @[Lookup.scala 34:39]
    node _csignals_T_367 = mux(_csignals_T_45, UInt<3>("h0"), _csignals_T_366) @[Lookup.scala 34:39]
    node _csignals_T_368 = mux(_csignals_T_43, UInt<3>("h0"), _csignals_T_367) @[Lookup.scala 34:39]
    node _csignals_T_369 = mux(_csignals_T_41, UInt<3>("h0"), _csignals_T_368) @[Lookup.scala 34:39]
    node _csignals_T_370 = mux(_csignals_T_39, UInt<3>("h0"), _csignals_T_369) @[Lookup.scala 34:39]
    node _csignals_T_371 = mux(_csignals_T_37, UInt<3>("h0"), _csignals_T_370) @[Lookup.scala 34:39]
    node _csignals_T_372 = mux(_csignals_T_35, UInt<3>("h0"), _csignals_T_371) @[Lookup.scala 34:39]
    node _csignals_T_373 = mux(_csignals_T_33, UInt<3>("h0"), _csignals_T_372) @[Lookup.scala 34:39]
    node _csignals_T_374 = mux(_csignals_T_31, UInt<3>("h0"), _csignals_T_373) @[Lookup.scala 34:39]
    node _csignals_T_375 = mux(_csignals_T_29, UInt<3>("h0"), _csignals_T_374) @[Lookup.scala 34:39]
    node _csignals_T_376 = mux(_csignals_T_27, UInt<3>("h0"), _csignals_T_375) @[Lookup.scala 34:39]
    node _csignals_T_377 = mux(_csignals_T_25, UInt<3>("h0"), _csignals_T_376) @[Lookup.scala 34:39]
    node _csignals_T_378 = mux(_csignals_T_23, UInt<3>("h0"), _csignals_T_377) @[Lookup.scala 34:39]
    node _csignals_T_379 = mux(_csignals_T_21, UInt<3>("h0"), _csignals_T_378) @[Lookup.scala 34:39]
    node _csignals_T_380 = mux(_csignals_T_19, UInt<3>("h0"), _csignals_T_379) @[Lookup.scala 34:39]
    node _csignals_T_381 = mux(_csignals_T_17, UInt<3>("h0"), _csignals_T_380) @[Lookup.scala 34:39]
    node _csignals_T_382 = mux(_csignals_T_15, UInt<3>("h0"), _csignals_T_381) @[Lookup.scala 34:39]
    node _csignals_T_383 = mux(_csignals_T_13, UInt<3>("h0"), _csignals_T_382) @[Lookup.scala 34:39]
    node _csignals_T_384 = mux(_csignals_T_11, UInt<3>("h0"), _csignals_T_383) @[Lookup.scala 34:39]
    node _csignals_T_385 = mux(_csignals_T_9, UInt<3>("h0"), _csignals_T_384) @[Lookup.scala 34:39]
    node _csignals_T_386 = mux(_csignals_T_7, UInt<3>("h0"), _csignals_T_385) @[Lookup.scala 34:39]
    node _csignals_T_387 = mux(_csignals_T_5, UInt<3>("h0"), _csignals_T_386) @[Lookup.scala 34:39]
    node _csignals_T_388 = mux(_csignals_T_3, UInt<3>("h0"), _csignals_T_387) @[Lookup.scala 34:39]
    node csignals_6 = mux(_csignals_T_1, UInt<3>("h0"), _csignals_T_388) @[Lookup.scala 34:39]
    node _csignals_T_389 = mux(_csignals_T_87, UInt<3>("h0"), UInt<3>("h0")) @[Lookup.scala 34:39]
    node _csignals_T_390 = mux(_csignals_T_85, UInt<3>("h0"), _csignals_T_389) @[Lookup.scala 34:39]
    node _csignals_T_391 = mux(_csignals_T_83, UInt<3>("h0"), _csignals_T_390) @[Lookup.scala 34:39]
    node _csignals_T_392 = mux(_csignals_T_81, UInt<3>("h0"), _csignals_T_391) @[Lookup.scala 34:39]
    node _csignals_T_393 = mux(_csignals_T_79, UInt<3>("h0"), _csignals_T_392) @[Lookup.scala 34:39]
    node _csignals_T_394 = mux(_csignals_T_77, UInt<3>("h0"), _csignals_T_393) @[Lookup.scala 34:39]
    node _csignals_T_395 = mux(_csignals_T_75, UInt<3>("h0"), _csignals_T_394) @[Lookup.scala 34:39]
    node _csignals_T_396 = mux(_csignals_T_73, UInt<3>("h0"), _csignals_T_395) @[Lookup.scala 34:39]
    node _csignals_T_397 = mux(_csignals_T_71, UInt<3>("h0"), _csignals_T_396) @[Lookup.scala 34:39]
    node _csignals_T_398 = mux(_csignals_T_69, UInt<3>("h0"), _csignals_T_397) @[Lookup.scala 34:39]
    node _csignals_T_399 = mux(_csignals_T_67, UInt<3>("h0"), _csignals_T_398) @[Lookup.scala 34:39]
    node _csignals_T_400 = mux(_csignals_T_65, UInt<3>("h0"), _csignals_T_399) @[Lookup.scala 34:39]
    node _csignals_T_401 = mux(_csignals_T_63, UInt<3>("h0"), _csignals_T_400) @[Lookup.scala 34:39]
    node _csignals_T_402 = mux(_csignals_T_61, UInt<3>("h0"), _csignals_T_401) @[Lookup.scala 34:39]
    node _csignals_T_403 = mux(_csignals_T_59, UInt<3>("h0"), _csignals_T_402) @[Lookup.scala 34:39]
    node _csignals_T_404 = mux(_csignals_T_57, UInt<3>("h0"), _csignals_T_403) @[Lookup.scala 34:39]
    node _csignals_T_405 = mux(_csignals_T_55, UInt<3>("h0"), _csignals_T_404) @[Lookup.scala 34:39]
    node _csignals_T_406 = mux(_csignals_T_53, UInt<3>("h0"), _csignals_T_405) @[Lookup.scala 34:39]
    node _csignals_T_407 = mux(_csignals_T_51, UInt<3>("h0"), _csignals_T_406) @[Lookup.scala 34:39]
    node _csignals_T_408 = mux(_csignals_T_49, UInt<3>("h0"), _csignals_T_407) @[Lookup.scala 34:39]
    node _csignals_T_409 = mux(_csignals_T_47, UInt<3>("h0"), _csignals_T_408) @[Lookup.scala 34:39]
    node _csignals_T_410 = mux(_csignals_T_45, UInt<3>("h0"), _csignals_T_409) @[Lookup.scala 34:39]
    node _csignals_T_411 = mux(_csignals_T_43, UInt<3>("h0"), _csignals_T_410) @[Lookup.scala 34:39]
    node _csignals_T_412 = mux(_csignals_T_41, UInt<3>("h0"), _csignals_T_411) @[Lookup.scala 34:39]
    node _csignals_T_413 = mux(_csignals_T_39, UInt<3>("h0"), _csignals_T_412) @[Lookup.scala 34:39]
    node _csignals_T_414 = mux(_csignals_T_37, UInt<3>("h0"), _csignals_T_413) @[Lookup.scala 34:39]
    node _csignals_T_415 = mux(_csignals_T_35, UInt<3>("h0"), _csignals_T_414) @[Lookup.scala 34:39]
    node _csignals_T_416 = mux(_csignals_T_33, UInt<3>("h0"), _csignals_T_415) @[Lookup.scala 34:39]
    node _csignals_T_417 = mux(_csignals_T_31, UInt<3>("h0"), _csignals_T_416) @[Lookup.scala 34:39]
    node _csignals_T_418 = mux(_csignals_T_29, UInt<3>("h0"), _csignals_T_417) @[Lookup.scala 34:39]
    node _csignals_T_419 = mux(_csignals_T_27, UInt<3>("h0"), _csignals_T_418) @[Lookup.scala 34:39]
    node _csignals_T_420 = mux(_csignals_T_25, UInt<3>("h0"), _csignals_T_419) @[Lookup.scala 34:39]
    node _csignals_T_421 = mux(_csignals_T_23, UInt<3>("h0"), _csignals_T_420) @[Lookup.scala 34:39]
    node _csignals_T_422 = mux(_csignals_T_21, UInt<3>("h0"), _csignals_T_421) @[Lookup.scala 34:39]
    node _csignals_T_423 = mux(_csignals_T_19, UInt<3>("h0"), _csignals_T_422) @[Lookup.scala 34:39]
    node _csignals_T_424 = mux(_csignals_T_17, UInt<3>("h0"), _csignals_T_423) @[Lookup.scala 34:39]
    node _csignals_T_425 = mux(_csignals_T_15, UInt<3>("h1"), _csignals_T_424) @[Lookup.scala 34:39]
    node _csignals_T_426 = mux(_csignals_T_13, UInt<3>("h1"), _csignals_T_425) @[Lookup.scala 34:39]
    node _csignals_T_427 = mux(_csignals_T_11, UInt<3>("h2"), _csignals_T_426) @[Lookup.scala 34:39]
    node _csignals_T_428 = mux(_csignals_T_9, UInt<3>("h4"), _csignals_T_427) @[Lookup.scala 34:39]
    node _csignals_T_429 = mux(_csignals_T_7, UInt<3>("h2"), _csignals_T_428) @[Lookup.scala 34:39]
    node _csignals_T_430 = mux(_csignals_T_5, UInt<3>("h3"), _csignals_T_429) @[Lookup.scala 34:39]
    node _csignals_T_431 = mux(_csignals_T_3, UInt<3>("h5"), _csignals_T_430) @[Lookup.scala 34:39]
    node csignals_7 = mux(_csignals_T_1, UInt<3>("h3"), _csignals_T_431) @[Lookup.scala 34:39]
    node _id_op1_data_T = eq(csignals_1, UInt<2>("h0")) @[Core.scala 241:17]
    node _id_op1_data_T_1 = eq(csignals_1, UInt<2>("h1")) @[Core.scala 242:17]
    node _id_op1_data_T_2 = eq(csignals_1, UInt<2>("h3")) @[Core.scala 243:17]
    node _id_op1_data_T_3 = mux(_id_op1_data_T_2, id_imm_z_uext, UInt<32>("h0")) @[Mux.scala 101:16]
    node _id_op1_data_T_4 = mux(_id_op1_data_T_1, id_reg_pc, _id_op1_data_T_3) @[Mux.scala 101:16]
    node id_op1_data = mux(_id_op1_data_T, id_rs1_data, _id_op1_data_T_4) @[Mux.scala 101:16]
    node _id_op2_data_T = eq(csignals_2, UInt<3>("h1")) @[Core.scala 246:17]
    node _id_op2_data_T_1 = eq(csignals_2, UInt<3>("h2")) @[Core.scala 247:17]
    node _id_op2_data_T_2 = eq(csignals_2, UInt<3>("h3")) @[Core.scala 248:17]
    node _id_op2_data_T_3 = eq(csignals_2, UInt<3>("h4")) @[Core.scala 249:17]
    node _id_op2_data_T_4 = eq(csignals_2, UInt<3>("h5")) @[Core.scala 250:17]
    node _id_op2_data_T_5 = mux(_id_op2_data_T_4, id_imm_u_shifted, UInt<32>("h0")) @[Mux.scala 101:16]
    node _id_op2_data_T_6 = mux(_id_op2_data_T_3, id_imm_j_sext, _id_op2_data_T_5) @[Mux.scala 101:16]
    node _id_op2_data_T_7 = mux(_id_op2_data_T_2, id_imm_s_sext, _id_op2_data_T_6) @[Mux.scala 101:16]
    node _id_op2_data_T_8 = mux(_id_op2_data_T_1, id_imm_i_sext, _id_op2_data_T_7) @[Mux.scala 101:16]
    node id_op2_data = mux(_id_op2_data_T, id_rs2_data, _id_op2_data_T_8) @[Mux.scala 101:16]
    node _id_csr_addr_T = eq(csignals_6, UInt<3>("h4")) @[Core.scala 253:36]
    node _id_csr_addr_T_1 = bits(id_inst, 31, 20) @[Core.scala 253:79]
    node id_csr_addr = mux(_id_csr_addr_T, UInt<12>("h342"), _id_csr_addr_T_1) @[Core.scala 253:24]
    node _id_mret_T = and(id_inst, UInt<32>("hffffffff")) @[Core.scala 255:25]
    node id_mret = eq(UInt<30>("h30200073"), _id_mret_T) @[Core.scala 255:25]
    node _T = eq(mem_stall_flg, UInt<1>("h0")) @[Core.scala 260:9]
    when _T : @[Core.scala 260:26]
      exe_reg_op1_data <= id_op1_data @[Core.scala 261:27]
      exe_reg_op2_data <= id_op2_data @[Core.scala 262:27]
      exe_reg_rs2_data <= id_rs2_data @[Core.scala 263:27]
      exe_reg_wb_addr <= id_wb_addr @[Core.scala 264:27]
      exe_reg_rf_wen <= csignals_4 @[Core.scala 265:27]
      exe_reg_exe_fun <= csignals_0 @[Core.scala 266:27]
      exe_reg_wb_sel <= csignals_5 @[Core.scala 267:27]
      exe_reg_imm_i_sext <= id_imm_i_sext @[Core.scala 268:27]
      exe_reg_imm_s_sext <= id_imm_s_sext @[Core.scala 269:27]
      exe_reg_imm_b_sext <= id_imm_b_sext @[Core.scala 270:27]
      exe_reg_imm_u_shifted <= id_imm_u_shifted @[Core.scala 271:27]
      exe_reg_imm_z_uext <= id_imm_z_uext @[Core.scala 272:27]
      exe_reg_csr_addr <= id_csr_addr @[Core.scala 273:27]
      exe_reg_csr_cmd <= csignals_6 @[Core.scala 274:27]
      exe_reg_mem_wen <= csignals_3 @[Core.scala 275:27]
      exe_reg_mem_w <= csignals_7 @[Core.scala 276:27]
      exe_reg_has_pending_interrupt <= id_has_pending_interrupt @[Core.scala 277:35]
      exe_reg_exception_target <= id_exception_target @[Core.scala 278:30]
      exe_reg_mcause <= id_mcause @[Core.scala 279:27]
      exe_reg_mret <= id_mret @[Core.scala 280:27]
    node _T_1 = eq(mem_stall_flg, UInt<1>("h0")) @[Core.scala 282:10]
    node _T_2 = or(exe_br_flg, exe_jmp_flg) @[Core.scala 282:41]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[Core.scala 282:28]
    node _T_4 = and(_T_1, _T_3) @[Core.scala 282:25]
    when _T_4 : @[Core.scala 282:59]
      exe_reg_pc <= id_reg_pc @[Core.scala 283:27]
    when exe_reg_has_pending_interrupt : @[Core.scala 285:41]
      exe_reg_has_pending_interrupt <= UInt<1>("h0") @[Core.scala 286:35]
    node _exe_alu_out_T = eq(exe_reg_exe_fun, UInt<5>("h1")) @[Core.scala 293:22]
    node _exe_alu_out_T_1 = add(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 293:58]
    node _exe_alu_out_T_2 = tail(_exe_alu_out_T_1, 1) @[Core.scala 293:58]
    node _exe_alu_out_T_3 = eq(exe_reg_exe_fun, UInt<5>("h2")) @[Core.scala 294:22]
    node _exe_alu_out_T_4 = sub(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 294:58]
    node _exe_alu_out_T_5 = tail(_exe_alu_out_T_4, 1) @[Core.scala 294:58]
    node _exe_alu_out_T_6 = eq(exe_reg_exe_fun, UInt<5>("h3")) @[Core.scala 295:22]
    node _exe_alu_out_T_7 = and(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 295:58]
    node _exe_alu_out_T_8 = eq(exe_reg_exe_fun, UInt<5>("h4")) @[Core.scala 296:22]
    node _exe_alu_out_T_9 = or(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 296:58]
    node _exe_alu_out_T_10 = eq(exe_reg_exe_fun, UInt<5>("h5")) @[Core.scala 297:22]
    node _exe_alu_out_T_11 = xor(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 297:58]
    node _exe_alu_out_T_12 = eq(exe_reg_exe_fun, UInt<5>("h6")) @[Core.scala 298:22]
    node _exe_alu_out_T_13 = bits(exe_reg_op2_data, 4, 0) @[Core.scala 298:77]
    node _exe_alu_out_T_14 = dshl(exe_reg_op1_data, _exe_alu_out_T_13) @[Core.scala 298:58]
    node _exe_alu_out_T_15 = bits(_exe_alu_out_T_14, 31, 0) @[Core.scala 298:84]
    node _exe_alu_out_T_16 = eq(exe_reg_exe_fun, UInt<5>("h7")) @[Core.scala 299:22]
    node _exe_alu_out_T_17 = bits(exe_reg_op2_data, 4, 0) @[Core.scala 299:77]
    node _exe_alu_out_T_18 = dshr(exe_reg_op1_data, _exe_alu_out_T_17) @[Core.scala 299:58]
    node _exe_alu_out_T_19 = eq(exe_reg_exe_fun, UInt<5>("h8")) @[Core.scala 300:22]
    node _exe_alu_out_T_20 = asSInt(exe_reg_op1_data) @[Core.scala 300:64]
    node _exe_alu_out_T_21 = bits(exe_reg_op2_data, 4, 0) @[Core.scala 300:86]
    node _exe_alu_out_T_22 = dshr(_exe_alu_out_T_20, _exe_alu_out_T_21) @[Core.scala 300:67]
    node _exe_alu_out_T_23 = asUInt(_exe_alu_out_T_22) @[Core.scala 300:100]
    node _exe_alu_out_T_24 = eq(exe_reg_exe_fun, UInt<5>("h9")) @[Core.scala 301:22]
    node _exe_alu_out_T_25 = asSInt(exe_reg_op1_data) @[Core.scala 301:64]
    node _exe_alu_out_T_26 = asSInt(exe_reg_op2_data) @[Core.scala 301:92]
    node _exe_alu_out_T_27 = lt(_exe_alu_out_T_25, _exe_alu_out_T_26) @[Core.scala 301:67]
    node _exe_alu_out_T_28 = eq(exe_reg_exe_fun, UInt<5>("ha")) @[Core.scala 302:22]
    node _exe_alu_out_T_29 = lt(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 302:58]
    node _exe_alu_out_T_30 = eq(exe_reg_exe_fun, UInt<5>("h11")) @[Core.scala 303:22]
    node _exe_alu_out_T_31 = add(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 303:59]
    node _exe_alu_out_T_32 = tail(_exe_alu_out_T_31, 1) @[Core.scala 303:59]
    node _exe_alu_out_T_33 = not(UInt<32>("h1")) @[Core.scala 303:81]
    node _exe_alu_out_T_34 = and(_exe_alu_out_T_32, _exe_alu_out_T_33) @[Core.scala 303:79]
    node _exe_alu_out_T_35 = eq(exe_reg_exe_fun, UInt<5>("h12")) @[Core.scala 304:22]
    node _exe_alu_out_T_36 = mux(_exe_alu_out_T_35, exe_reg_op1_data, UInt<32>("h0")) @[Mux.scala 101:16]
    node _exe_alu_out_T_37 = mux(_exe_alu_out_T_30, _exe_alu_out_T_34, _exe_alu_out_T_36) @[Mux.scala 101:16]
    node _exe_alu_out_T_38 = mux(_exe_alu_out_T_28, _exe_alu_out_T_29, _exe_alu_out_T_37) @[Mux.scala 101:16]
    node _exe_alu_out_T_39 = mux(_exe_alu_out_T_24, _exe_alu_out_T_27, _exe_alu_out_T_38) @[Mux.scala 101:16]
    node _exe_alu_out_T_40 = mux(_exe_alu_out_T_19, _exe_alu_out_T_23, _exe_alu_out_T_39) @[Mux.scala 101:16]
    node _exe_alu_out_T_41 = mux(_exe_alu_out_T_16, _exe_alu_out_T_18, _exe_alu_out_T_40) @[Mux.scala 101:16]
    node _exe_alu_out_T_42 = mux(_exe_alu_out_T_12, _exe_alu_out_T_15, _exe_alu_out_T_41) @[Mux.scala 101:16]
    node _exe_alu_out_T_43 = mux(_exe_alu_out_T_10, _exe_alu_out_T_11, _exe_alu_out_T_42) @[Mux.scala 101:16]
    node _exe_alu_out_T_44 = mux(_exe_alu_out_T_8, _exe_alu_out_T_9, _exe_alu_out_T_43) @[Mux.scala 101:16]
    node _exe_alu_out_T_45 = mux(_exe_alu_out_T_6, _exe_alu_out_T_7, _exe_alu_out_T_44) @[Mux.scala 101:16]
    node _exe_alu_out_T_46 = mux(_exe_alu_out_T_3, _exe_alu_out_T_5, _exe_alu_out_T_45) @[Mux.scala 101:16]
    node _exe_alu_out_T_47 = mux(_exe_alu_out_T, _exe_alu_out_T_2, _exe_alu_out_T_46) @[Mux.scala 101:16]
    exe_alu_out <= _exe_alu_out_T_47 @[Core.scala 292:15]
    node _exe_br_flg_T = eq(exe_reg_exe_fun, UInt<5>("hb")) @[Core.scala 311:22]
    node _exe_br_flg_T_1 = eq(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 311:57]
    node _exe_br_flg_T_2 = eq(exe_reg_exe_fun, UInt<5>("hc")) @[Core.scala 312:22]
    node _exe_br_flg_T_3 = eq(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 312:57]
    node _exe_br_flg_T_4 = eq(_exe_br_flg_T_3, UInt<1>("h0")) @[Core.scala 312:38]
    node _exe_br_flg_T_5 = eq(exe_reg_exe_fun, UInt<5>("hd")) @[Core.scala 313:22]
    node _exe_br_flg_T_6 = asSInt(exe_reg_op1_data) @[Core.scala 313:63]
    node _exe_br_flg_T_7 = asSInt(exe_reg_op2_data) @[Core.scala 313:91]
    node _exe_br_flg_T_8 = lt(_exe_br_flg_T_6, _exe_br_flg_T_7) @[Core.scala 313:66]
    node _exe_br_flg_T_9 = eq(exe_reg_exe_fun, UInt<5>("he")) @[Core.scala 314:22]
    node _exe_br_flg_T_10 = asSInt(exe_reg_op1_data) @[Core.scala 314:63]
    node _exe_br_flg_T_11 = asSInt(exe_reg_op2_data) @[Core.scala 314:91]
    node _exe_br_flg_T_12 = lt(_exe_br_flg_T_10, _exe_br_flg_T_11) @[Core.scala 314:66]
    node _exe_br_flg_T_13 = eq(_exe_br_flg_T_12, UInt<1>("h0")) @[Core.scala 314:38]
    node _exe_br_flg_T_14 = eq(exe_reg_exe_fun, UInt<5>("hf")) @[Core.scala 315:22]
    node _exe_br_flg_T_15 = lt(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 315:57]
    node _exe_br_flg_T_16 = eq(exe_reg_exe_fun, UInt<5>("h10")) @[Core.scala 316:22]
    node _exe_br_flg_T_17 = lt(exe_reg_op1_data, exe_reg_op2_data) @[Core.scala 316:57]
    node _exe_br_flg_T_18 = eq(_exe_br_flg_T_17, UInt<1>("h0")) @[Core.scala 316:38]
    node _exe_br_flg_T_19 = mux(_exe_br_flg_T_16, _exe_br_flg_T_18, UInt<1>("h0")) @[Mux.scala 101:16]
    node _exe_br_flg_T_20 = mux(_exe_br_flg_T_14, _exe_br_flg_T_15, _exe_br_flg_T_19) @[Mux.scala 101:16]
    node _exe_br_flg_T_21 = mux(_exe_br_flg_T_9, _exe_br_flg_T_13, _exe_br_flg_T_20) @[Mux.scala 101:16]
    node _exe_br_flg_T_22 = mux(_exe_br_flg_T_5, _exe_br_flg_T_8, _exe_br_flg_T_21) @[Mux.scala 101:16]
    node _exe_br_flg_T_23 = mux(_exe_br_flg_T_2, _exe_br_flg_T_4, _exe_br_flg_T_22) @[Mux.scala 101:16]
    node _exe_br_flg_T_24 = mux(_exe_br_flg_T, _exe_br_flg_T_1, _exe_br_flg_T_23) @[Mux.scala 101:16]
    node _exe_br_flg_T_25 = mux(exe_reg_mret, UInt<1>("h1"), _exe_br_flg_T_24) @[Mux.scala 101:16]
    node _exe_br_flg_T_26 = mux(exe_reg_has_pending_interrupt, UInt<1>("h1"), _exe_br_flg_T_25) @[Mux.scala 101:16]
    exe_br_flg <= _exe_br_flg_T_26 @[Core.scala 308:14]
    node _exe_br_target_T = add(exe_reg_pc, exe_reg_imm_b_sext) @[Core.scala 318:39]
    node _exe_br_target_T_1 = tail(_exe_br_target_T, 1) @[Core.scala 318:39]
    node _exe_br_target_T_2 = mux(exe_reg_mret, csr_mepc, _exe_br_target_T_1) @[Mux.scala 101:16]
    node _exe_br_target_T_3 = mux(exe_reg_has_pending_interrupt, exe_reg_exception_target, _exe_br_target_T_2) @[Mux.scala 101:16]
    exe_br_target <= _exe_br_target_T_3 @[Core.scala 318:17]
    when exe_reg_has_pending_interrupt : @[Core.scala 324:39]
      csr_mcause <= exe_reg_mcause @[Core.scala 325:16]
      csr_mepc <= exe_reg_pc @[Core.scala 326:14]
      csr_mstatus.mpie <= csr_mstatus.mie @[Core.scala 327:22]
      csr_mstatus.mie <= UInt<1>("h0") @[Core.scala 328:21]
    when exe_reg_mret : @[Core.scala 331:22]
      csr_mstatus.mie <= csr_mstatus.mpie @[Core.scala 332:21]
    node _exe_jmp_flg_T = eq(exe_reg_wb_sel, UInt<3>("h2")) @[Core.scala 335:34]
    exe_jmp_flg <= _exe_jmp_flg_T @[Core.scala 335:15]
    node _T_5 = eq(mem_stall_flg, UInt<1>("h0")) @[Core.scala 341:9]
    when _T_5 : @[Core.scala 341:26]
      mem_reg_pc <= exe_reg_pc @[Core.scala 342:24]
      mem_reg_op1_data <= exe_reg_op1_data @[Core.scala 343:24]
      mem_reg_rs2_data <= exe_reg_rs2_data @[Core.scala 344:24]
      mem_reg_wb_addr <= exe_reg_wb_addr @[Core.scala 345:24]
      mem_reg_alu_out <= exe_alu_out @[Core.scala 346:24]
      mem_reg_rf_wen <= exe_reg_rf_wen @[Core.scala 347:24]
      mem_reg_wb_sel <= exe_reg_wb_sel @[Core.scala 348:24]
      mem_reg_csr_addr <= exe_reg_csr_addr @[Core.scala 349:24]
      mem_reg_csr_cmd <= exe_reg_csr_cmd @[Core.scala 350:24]
      mem_reg_imm_z_uext <= exe_reg_imm_z_uext @[Core.scala 351:24]
      mem_reg_mem_wen <= exe_reg_mem_wen @[Core.scala 352:24]
      mem_reg_mem_w <= exe_reg_mem_w @[Core.scala 353:24]
      node _mem_reg_mem_wstrb_T = eq(exe_reg_mem_w, UInt<3>("h3")) @[Core.scala 355:22]
      node _mem_reg_mem_wstrb_T_1 = eq(exe_reg_mem_w, UInt<3>("h2")) @[Core.scala 356:22]
      node _mem_reg_mem_wstrb_T_2 = eq(exe_reg_mem_w, UInt<3>("h1")) @[Core.scala 357:22]
      node _mem_reg_mem_wstrb_T_3 = mux(_mem_reg_mem_wstrb_T_2, UInt<4>("hf"), UInt<4>("hf")) @[Mux.scala 101:16]
      node _mem_reg_mem_wstrb_T_4 = mux(_mem_reg_mem_wstrb_T_1, UInt<2>("h3"), _mem_reg_mem_wstrb_T_3) @[Mux.scala 101:16]
      node _mem_reg_mem_wstrb_T_5 = mux(_mem_reg_mem_wstrb_T, UInt<1>("h1"), _mem_reg_mem_wstrb_T_4) @[Mux.scala 101:16]
      node _mem_reg_mem_wstrb_T_6 = bits(exe_alu_out, 1, 0) @[Core.scala 358:23]
      node _mem_reg_mem_wstrb_T_7 = dshl(_mem_reg_mem_wstrb_T_5, _mem_reg_mem_wstrb_T_6) @[Core.scala 358:8]
      node _mem_reg_mem_wstrb_T_8 = bits(_mem_reg_mem_wstrb_T_7, 3, 0) @[Core.scala 358:31]
      mem_reg_mem_wstrb <= _mem_reg_mem_wstrb_T_8 @[Core.scala 354:24]
    io.dmem.addr <= mem_reg_alu_out @[Core.scala 364:17]
    node _io_dmem_ren_T = eq(mem_reg_wb_sel, UInt<3>("h1")) @[Core.scala 365:35]
    io.dmem.ren <= _io_dmem_ren_T @[Core.scala 365:17]
    io.dmem.wen <= mem_reg_mem_wen @[Core.scala 366:17]
    io.dmem.wstrb <= mem_reg_mem_wstrb @[Core.scala 367:17]
    node _io_dmem_wdata_T = bits(mem_reg_alu_out, 1, 0) @[Core.scala 368:63]
    node _io_dmem_wdata_T_1 = mul(UInt<4>("h8"), _io_dmem_wdata_T) @[Core.scala 368:46]
    node _io_dmem_wdata_T_2 = dshl(mem_reg_rs2_data, _io_dmem_wdata_T_1) @[Core.scala 368:38]
    node _io_dmem_wdata_T_3 = bits(_io_dmem_wdata_T_2, 31, 0) @[Core.scala 368:71]
    io.dmem.wdata <= _io_dmem_wdata_T_3 @[Core.scala 368:17]
    node _mem_stall_flg_T = eq(io.dmem.rvalid, UInt<1>("h0")) @[Core.scala 370:35]
    node _mem_stall_flg_T_1 = and(io.dmem.ren, _mem_stall_flg_T) @[Core.scala 370:32]
    mem_stall_flg <= _mem_stall_flg_T_1 @[Core.scala 370:17]
    node _csr_rdata_T = bits(csr_mstatus.wpri3, 7, 0) @[CSR.scala 36:18]
    node csr_rdata_lo_lo_lo = cat(csr_mstatus.sie, csr_mstatus.wpri0) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_hi_hi = cat(csr_mstatus.wpri2, csr_mstatus.mie) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_hi = cat(csr_rdata_lo_lo_hi_hi, csr_mstatus.wpri1) @[Cat.scala 33:92]
    node csr_rdata_lo_lo = cat(csr_rdata_lo_lo_hi, csr_rdata_lo_lo_lo) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_lo = cat(csr_mstatus.ube, csr_mstatus.spie) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_hi_hi = cat(csr_mstatus.vs, csr_mstatus.spp) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_hi = cat(csr_rdata_lo_hi_hi_hi, csr_mstatus.mpie) @[Cat.scala 33:92]
    node csr_rdata_lo_hi = cat(csr_rdata_lo_hi_hi, csr_rdata_lo_hi_lo) @[Cat.scala 33:92]
    node csr_rdata_lo = cat(csr_rdata_lo_hi, csr_rdata_lo_lo) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_lo = cat(csr_mstatus.fs, csr_mstatus.mpp) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_hi_hi = cat(csr_mstatus.sum, csr_mstatus.mprv) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_hi = cat(csr_rdata_hi_lo_hi_hi, csr_mstatus.xs) @[Cat.scala 33:92]
    node csr_rdata_hi_lo = cat(csr_rdata_hi_lo_hi, csr_rdata_hi_lo_lo) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_lo_hi = cat(csr_mstatus.tw, csr_mstatus.tvm) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_lo = cat(csr_rdata_hi_hi_lo_hi, csr_mstatus.mxr) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_hi_hi = cat(csr_mstatus.sd, _csr_rdata_T) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_hi = cat(csr_rdata_hi_hi_hi_hi, csr_mstatus.tsr) @[Cat.scala 33:92]
    node csr_rdata_hi_hi = cat(csr_rdata_hi_hi_hi, csr_rdata_hi_hi_lo) @[Cat.scala 33:92]
    node csr_rdata_hi = cat(csr_rdata_hi_hi, csr_rdata_hi_lo) @[Cat.scala 33:92]
    node _csr_rdata_T_1 = cat(csr_rdata_hi, csr_rdata_lo) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_hi_1 = cat(UInt<1>("h0"), csr_mie.ssie) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_1 = cat(csr_rdata_lo_lo_hi_1, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_hi_1 = cat(csr_mie.stie, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_1 = cat(csr_rdata_lo_hi_hi_1, csr_mie.msie) @[Cat.scala 33:92]
    node csr_rdata_lo_1 = cat(csr_rdata_lo_hi_1, csr_rdata_lo_lo_1) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_hi_1 = cat(UInt<1>("h0"), csr_mie.mtie) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_1 = cat(csr_rdata_hi_lo_hi_1, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_lo_1 = cat(UInt<1>("h0"), csr_mie.seie) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_hi_1 = cat(UInt<4>("h0"), csr_mie.meie) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_1 = cat(csr_rdata_hi_hi_hi_1, csr_rdata_hi_hi_lo_1) @[Cat.scala 33:92]
    node csr_rdata_hi_1 = cat(csr_rdata_hi_hi_1, csr_rdata_hi_lo_1) @[Cat.scala 33:92]
    node _csr_rdata_T_2 = cat(csr_rdata_hi_1, csr_rdata_lo_1) @[Cat.scala 33:92]
    node _csr_rdata_T_3 = bits(csr_mstatus.wpri3, 8, 8) @[CSR.scala 39:21]
    node csr_rdata_lo_2 = cat(csr_mstatus.sbe, csr_mstatus.wpri5) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_2 = cat(csr_mstatus.wpri4, _csr_rdata_T_3) @[Cat.scala 33:92]
    node csr_rdata_hi_2 = cat(csr_rdata_hi_hi_2, csr_mstatus.mbe) @[Cat.scala 33:92]
    node _csr_rdata_T_4 = cat(csr_rdata_hi_2, csr_rdata_lo_2) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_hi_2 = cat(UInt<1>("h0"), csr_mip.ssip) @[Cat.scala 33:92]
    node csr_rdata_lo_lo_2 = cat(csr_rdata_lo_lo_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_hi_2 = cat(csr_mip.stip, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_lo_hi_2 = cat(csr_rdata_lo_hi_hi_2, csr_mip.msip) @[Cat.scala 33:92]
    node csr_rdata_lo_3 = cat(csr_rdata_lo_hi_2, csr_rdata_lo_lo_2) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_hi_2 = cat(UInt<1>("h0"), csr_mip.mtip) @[Cat.scala 33:92]
    node csr_rdata_hi_lo_2 = cat(csr_rdata_hi_lo_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_lo_2 = cat(UInt<1>("h0"), csr_mip.seip) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_hi_2 = cat(UInt<4>("h0"), csr_mip.meip) @[Cat.scala 33:92]
    node csr_rdata_hi_hi_3 = cat(csr_rdata_hi_hi_hi_2, csr_rdata_hi_hi_lo_2) @[Cat.scala 33:92]
    node csr_rdata_hi_3 = cat(csr_rdata_hi_hi_3, csr_rdata_hi_lo_2) @[Cat.scala 33:92]
    node _csr_rdata_T_5 = cat(csr_rdata_hi_3, csr_rdata_lo_3) @[Cat.scala 33:92]
    node _csr_rdata_T_6 = eq(UInt<11>("h7c0"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_7 = mux(_csr_rdata_T_6, csr_gpio_out, UInt<32>("h0")) @[Mux.scala 81:58]
    node _csr_rdata_T_8 = eq(UInt<12>("h300"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_9 = mux(_csr_rdata_T_8, _csr_rdata_T_1, _csr_rdata_T_7) @[Mux.scala 81:58]
    node _csr_rdata_T_10 = eq(UInt<12>("h301"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_11 = mux(_csr_rdata_T_10, UInt<1>("h0"), _csr_rdata_T_9) @[Mux.scala 81:58]
    node _csr_rdata_T_12 = eq(UInt<12>("h304"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_13 = mux(_csr_rdata_T_12, _csr_rdata_T_2, _csr_rdata_T_11) @[Mux.scala 81:58]
    node _csr_rdata_T_14 = eq(UInt<12>("h305"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_15 = mux(_csr_rdata_T_14, csr_trap_vector, _csr_rdata_T_13) @[Mux.scala 81:58]
    node _csr_rdata_T_16 = eq(UInt<12>("h310"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_17 = mux(_csr_rdata_T_16, _csr_rdata_T_4, _csr_rdata_T_15) @[Mux.scala 81:58]
    node _csr_rdata_T_18 = eq(UInt<12>("h340"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_19 = mux(_csr_rdata_T_18, csr_mscratch, _csr_rdata_T_17) @[Mux.scala 81:58]
    node _csr_rdata_T_20 = eq(UInt<12>("h341"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_21 = mux(_csr_rdata_T_20, csr_mepc, _csr_rdata_T_19) @[Mux.scala 81:58]
    node _csr_rdata_T_22 = eq(UInt<12>("h342"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_23 = mux(_csr_rdata_T_22, csr_mcause, _csr_rdata_T_21) @[Mux.scala 81:58]
    node _csr_rdata_T_24 = eq(UInt<12>("h343"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node _csr_rdata_T_25 = mux(_csr_rdata_T_24, csr_mtval, _csr_rdata_T_23) @[Mux.scala 81:58]
    node _csr_rdata_T_26 = eq(UInt<12>("h344"), mem_reg_csr_addr) @[Mux.scala 81:61]
    node csr_rdata = mux(_csr_rdata_T_26, _csr_rdata_T_5, _csr_rdata_T_25) @[Mux.scala 81:58]
    node _csr_wdata_T = eq(mem_reg_csr_cmd, UInt<3>("h1")) @[Core.scala 388:22]
    node _csr_wdata_T_1 = eq(mem_reg_csr_cmd, UInt<3>("h2")) @[Core.scala 389:22]
    node _csr_wdata_T_2 = or(csr_rdata, mem_reg_op1_data) @[Core.scala 389:47]
    node _csr_wdata_T_3 = eq(mem_reg_csr_cmd, UInt<3>("h3")) @[Core.scala 390:22]
    node _csr_wdata_T_4 = not(mem_reg_op1_data) @[Core.scala 390:49]
    node _csr_wdata_T_5 = and(csr_rdata, _csr_wdata_T_4) @[Core.scala 390:47]
    node _csr_wdata_T_6 = eq(mem_reg_csr_cmd, UInt<3>("h4")) @[Core.scala 391:22]
    node _csr_wdata_T_7 = mux(_csr_wdata_T_6, UInt<32>("hb"), UInt<32>("h0")) @[Mux.scala 101:16]
    node _csr_wdata_T_8 = mux(_csr_wdata_T_3, _csr_wdata_T_5, _csr_wdata_T_7) @[Mux.scala 101:16]
    node _csr_wdata_T_9 = mux(_csr_wdata_T_1, _csr_wdata_T_2, _csr_wdata_T_8) @[Mux.scala 101:16]
    node csr_wdata = mux(_csr_wdata_T, mem_reg_op1_data, _csr_wdata_T_9) @[Mux.scala 101:16]
    node _T_6 = gt(mem_reg_csr_cmd, UInt<1>("h0")) @[Core.scala 394:24]
    when _T_6 : @[Core.scala 394:30]
      node _T_7 = eq(UInt<11>("h7c0"), mem_reg_csr_addr) @[Core.scala 395:30]
      when _T_7 : @[Core.scala 395:30]
        csr_gpio_out <= csr_wdata @[Core.scala 396:44]
      else :
        node _T_8 = eq(UInt<12>("h300"), mem_reg_csr_addr) @[Core.scala 395:30]
        when _T_8 : @[Core.scala 395:30]
          node _csr_mstatus_T = bits(csr_mstatus.wpri3, 8, 8) @[CSR.scala 39:21]
          node csr_mstatus_lo = cat(csr_mstatus.sbe, csr_mstatus.wpri5) @[Cat.scala 33:92]
          node csr_mstatus_hi_hi = cat(csr_mstatus.wpri4, _csr_mstatus_T) @[Cat.scala 33:92]
          node csr_mstatus_hi = cat(csr_mstatus_hi_hi, csr_mstatus.mbe) @[Cat.scala 33:92]
          node _csr_mstatus_T_1 = cat(csr_mstatus_hi, csr_mstatus_lo) @[Cat.scala 33:92]
          wire csr_mstatus_mstatus_1 : { wpri0 : UInt<1>, sie : UInt<1>, wpri1 : UInt<1>, mie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, ube : UInt<1>, mpie : UInt<1>, spp : UInt<1>, vs : UInt<2>, mpp : UInt<2>, fs : UInt<2>, xs : UInt<2>, mprv : UInt<1>, sum : UInt<1>, mxr : UInt<1>, tvm : UInt<1>, tw : UInt<1>, tsr : UInt<1>, wpri3 : UInt<9>, uxl : UInt<2>, sxl : UInt<2>, sbe : UInt<1>, mbe : UInt<1>, wpri4 : UInt<25>, sd : UInt<1>, wpri5 : UInt<4>} @[CSR.scala 78:23]
          csr_mstatus_mstatus_1.wpri0 <= UInt<1>("h0") @[CSR.scala 79:19]
          csr_mstatus_mstatus_1.sie <= UInt<1>("h0") @[CSR.scala 80:17]
          csr_mstatus_mstatus_1.wpri1 <= UInt<1>("h0") @[CSR.scala 81:19]
          csr_mstatus_mstatus_1.mie <= UInt<1>("h0") @[CSR.scala 82:17]
          csr_mstatus_mstatus_1.wpri2 <= UInt<1>("h0") @[CSR.scala 83:19]
          csr_mstatus_mstatus_1.spie <= UInt<1>("h0") @[CSR.scala 84:18]
          csr_mstatus_mstatus_1.ube <= UInt<1>("h0") @[CSR.scala 85:17]
          csr_mstatus_mstatus_1.mpie <= UInt<1>("h0") @[CSR.scala 86:18]
          csr_mstatus_mstatus_1.spp <= UInt<1>("h0") @[CSR.scala 87:17]
          csr_mstatus_mstatus_1.vs <= UInt<1>("h0") @[CSR.scala 88:16]
          csr_mstatus_mstatus_1.mpp <= UInt<1>("h0") @[CSR.scala 89:17]
          csr_mstatus_mstatus_1.fs <= UInt<1>("h0") @[CSR.scala 90:16]
          csr_mstatus_mstatus_1.xs <= UInt<1>("h0") @[CSR.scala 91:16]
          csr_mstatus_mstatus_1.mprv <= UInt<1>("h0") @[CSR.scala 92:18]
          csr_mstatus_mstatus_1.sum <= UInt<1>("h0") @[CSR.scala 93:17]
          csr_mstatus_mstatus_1.mxr <= UInt<1>("h0") @[CSR.scala 94:17]
          csr_mstatus_mstatus_1.tvm <= UInt<1>("h0") @[CSR.scala 95:17]
          csr_mstatus_mstatus_1.tw <= UInt<1>("h0") @[CSR.scala 96:16]
          csr_mstatus_mstatus_1.tsr <= UInt<1>("h0") @[CSR.scala 97:17]
          csr_mstatus_mstatus_1.wpri3 <= UInt<1>("h0") @[CSR.scala 98:19]
          csr_mstatus_mstatus_1.uxl <= UInt<1>("h0") @[CSR.scala 99:17]
          csr_mstatus_mstatus_1.sxl <= UInt<1>("h0") @[CSR.scala 100:17]
          csr_mstatus_mstatus_1.sbe <= UInt<1>("h0") @[CSR.scala 101:17]
          csr_mstatus_mstatus_1.mbe <= UInt<1>("h0") @[CSR.scala 102:17]
          csr_mstatus_mstatus_1.wpri4 <= UInt<1>("h0") @[CSR.scala 103:19]
          csr_mstatus_mstatus_1.sd <= UInt<1>("h0") @[CSR.scala 104:16]
          csr_mstatus_mstatus_1.wpri5 <= UInt<1>("h0") @[CSR.scala 105:19]
          node _csr_mstatus_mstatus_wpri0_T = bits(csr_wdata, 0, 0) @[CSR.scala 49:28]
          csr_mstatus_mstatus_1.wpri0 <= _csr_mstatus_mstatus_wpri0_T @[CSR.scala 49:19]
          node _csr_mstatus_mstatus_sie_T = bits(csr_wdata, 1, 1) @[CSR.scala 50:26]
          csr_mstatus_mstatus_1.sie <= _csr_mstatus_mstatus_sie_T @[CSR.scala 50:17]
          node _csr_mstatus_mstatus_wpri1_T = bits(csr_wdata, 2, 2) @[CSR.scala 51:28]
          csr_mstatus_mstatus_1.wpri1 <= _csr_mstatus_mstatus_wpri1_T @[CSR.scala 51:19]
          node _csr_mstatus_mstatus_mie_T = bits(csr_wdata, 3, 3) @[CSR.scala 52:26]
          csr_mstatus_mstatus_1.mie <= _csr_mstatus_mstatus_mie_T @[CSR.scala 52:17]
          node _csr_mstatus_mstatus_wpri2_T = bits(csr_wdata, 4, 4) @[CSR.scala 53:28]
          csr_mstatus_mstatus_1.wpri2 <= _csr_mstatus_mstatus_wpri2_T @[CSR.scala 53:19]
          node _csr_mstatus_mstatus_spie_T = bits(csr_wdata, 5, 5) @[CSR.scala 54:27]
          csr_mstatus_mstatus_1.spie <= _csr_mstatus_mstatus_spie_T @[CSR.scala 54:18]
          node _csr_mstatus_mstatus_ube_T = bits(csr_wdata, 6, 6) @[CSR.scala 55:26]
          csr_mstatus_mstatus_1.ube <= _csr_mstatus_mstatus_ube_T @[CSR.scala 55:17]
          node _csr_mstatus_mstatus_mpie_T = bits(csr_wdata, 7, 7) @[CSR.scala 56:27]
          csr_mstatus_mstatus_1.mpie <= _csr_mstatus_mstatus_mpie_T @[CSR.scala 56:18]
          node _csr_mstatus_mstatus_spp_T = bits(csr_wdata, 8, 8) @[CSR.scala 57:26]
          csr_mstatus_mstatus_1.spp <= _csr_mstatus_mstatus_spp_T @[CSR.scala 57:17]
          node _csr_mstatus_mstatus_vs_T = bits(csr_wdata, 10, 9) @[CSR.scala 58:25]
          csr_mstatus_mstatus_1.vs <= _csr_mstatus_mstatus_vs_T @[CSR.scala 58:16]
          node _csr_mstatus_mstatus_mpp_T = bits(csr_wdata, 12, 11) @[CSR.scala 59:26]
          csr_mstatus_mstatus_1.mpp <= _csr_mstatus_mstatus_mpp_T @[CSR.scala 59:17]
          node _csr_mstatus_mstatus_fs_T = bits(csr_wdata, 14, 13) @[CSR.scala 60:25]
          csr_mstatus_mstatus_1.fs <= _csr_mstatus_mstatus_fs_T @[CSR.scala 60:16]
          node _csr_mstatus_mstatus_xs_T = bits(csr_wdata, 16, 15) @[CSR.scala 61:25]
          csr_mstatus_mstatus_1.xs <= _csr_mstatus_mstatus_xs_T @[CSR.scala 61:16]
          node _csr_mstatus_mstatus_mprv_T = bits(csr_wdata, 17, 17) @[CSR.scala 62:27]
          csr_mstatus_mstatus_1.mprv <= _csr_mstatus_mstatus_mprv_T @[CSR.scala 62:18]
          node _csr_mstatus_mstatus_sum_T = bits(csr_wdata, 18, 18) @[CSR.scala 63:26]
          csr_mstatus_mstatus_1.sum <= _csr_mstatus_mstatus_sum_T @[CSR.scala 63:17]
          node _csr_mstatus_mstatus_mxr_T = bits(csr_wdata, 19, 19) @[CSR.scala 64:26]
          csr_mstatus_mstatus_1.mxr <= _csr_mstatus_mstatus_mxr_T @[CSR.scala 64:17]
          node _csr_mstatus_mstatus_tvm_T = bits(csr_wdata, 20, 20) @[CSR.scala 65:26]
          csr_mstatus_mstatus_1.tvm <= _csr_mstatus_mstatus_tvm_T @[CSR.scala 65:17]
          node _csr_mstatus_mstatus_tw_T = bits(csr_wdata, 21, 21) @[CSR.scala 66:25]
          csr_mstatus_mstatus_1.tw <= _csr_mstatus_mstatus_tw_T @[CSR.scala 66:16]
          node _csr_mstatus_mstatus_tsr_T = bits(csr_wdata, 22, 22) @[CSR.scala 67:26]
          csr_mstatus_mstatus_1.tsr <= _csr_mstatus_mstatus_tsr_T @[CSR.scala 67:17]
          node _csr_mstatus_mstatus_wpri3_T = bits(_csr_mstatus_T_1, 6, 6) @[CSR.scala 68:32]
          node _csr_mstatus_mstatus_wpri3_T_1 = bits(csr_wdata, 30, 23) @[CSR.scala 68:43]
          node _csr_mstatus_mstatus_wpri3_T_2 = cat(_csr_mstatus_mstatus_wpri3_T, _csr_mstatus_mstatus_wpri3_T_1) @[Cat.scala 33:92]
          csr_mstatus_mstatus_1.wpri3 <= _csr_mstatus_mstatus_wpri3_T_2 @[CSR.scala 68:19]
          node _csr_mstatus_mstatus_sd_T = bits(csr_wdata, 31, 31) @[CSR.scala 69:25]
          csr_mstatus_mstatus_1.sd <= _csr_mstatus_mstatus_sd_T @[CSR.scala 69:16]
          node _csr_mstatus_mstatus_wpri5_T = bits(_csr_mstatus_T_1, 3, 0) @[CSR.scala 70:28]
          csr_mstatus_mstatus_1.wpri5 <= _csr_mstatus_mstatus_wpri5_T @[CSR.scala 70:19]
          node _csr_mstatus_mstatus_sbe_T = bits(_csr_mstatus_T_1, 4, 4) @[CSR.scala 71:26]
          csr_mstatus_mstatus_1.sbe <= _csr_mstatus_mstatus_sbe_T @[CSR.scala 71:17]
          node _csr_mstatus_mstatus_mbe_T = bits(_csr_mstatus_T_1, 5, 5) @[CSR.scala 72:26]
          csr_mstatus_mstatus_1.mbe <= _csr_mstatus_mstatus_mbe_T @[CSR.scala 72:17]
          node _csr_mstatus_mstatus_wpri4_T = bits(_csr_mstatus_T_1, 31, 6) @[CSR.scala 73:28]
          csr_mstatus_mstatus_1.wpri4 <= _csr_mstatus_mstatus_wpri4_T @[CSR.scala 73:19]
          csr_mstatus <= csr_mstatus_mstatus_1 @[Core.scala 397:43]
        else :
          node _T_9 = eq(UInt<12>("h301"), mem_reg_csr_addr) @[Core.scala 395:30]
          when _T_9 : @[Core.scala 395:30]
            skip
          else :
            node _T_10 = eq(UInt<12>("h304"), mem_reg_csr_addr) @[Core.scala 395:30]
            when _T_10 : @[Core.scala 395:30]
              wire csr_mie_mip : { ssie : UInt<1>, msie : UInt<1>, stie : UInt<1>, mtie : UInt<1>, seie : UInt<1>, meie : UInt<1>} @[CSR.scala 174:19]
              node _csr_mie_mip_ssie_T = bits(csr_wdata, 1, 1) @[CSR.scala 175:22]
              csr_mie_mip.ssie <= _csr_mie_mip_ssie_T @[CSR.scala 175:14]
              node _csr_mie_mip_msie_T = bits(csr_wdata, 3, 3) @[CSR.scala 176:22]
              csr_mie_mip.msie <= _csr_mie_mip_msie_T @[CSR.scala 176:14]
              node _csr_mie_mip_stie_T = bits(csr_wdata, 5, 5) @[CSR.scala 177:22]
              csr_mie_mip.stie <= _csr_mie_mip_stie_T @[CSR.scala 177:14]
              node _csr_mie_mip_mtie_T = bits(csr_wdata, 7, 7) @[CSR.scala 178:22]
              csr_mie_mip.mtie <= _csr_mie_mip_mtie_T @[CSR.scala 178:14]
              node _csr_mie_mip_seie_T = bits(csr_wdata, 9, 9) @[CSR.scala 179:22]
              csr_mie_mip.seie <= _csr_mie_mip_seie_T @[CSR.scala 179:14]
              node _csr_mie_mip_meie_T = bits(csr_wdata, 11, 11) @[CSR.scala 180:22]
              csr_mie_mip.meie <= _csr_mie_mip_meie_T @[CSR.scala 180:14]
              csr_mie <= csr_mie_mip @[Core.scala 399:39]
            else :
              node _T_11 = eq(UInt<12>("h305"), mem_reg_csr_addr) @[Core.scala 395:30]
              when _T_11 : @[Core.scala 395:30]
                csr_trap_vector <= csr_wdata @[Core.scala 400:47]
              else :
                node _T_12 = eq(UInt<12>("h310"), mem_reg_csr_addr) @[Core.scala 395:30]
                when _T_12 : @[Core.scala 395:30]
                  node _csr_mstatus_T_2 = bits(csr_mstatus.wpri3, 7, 0) @[CSR.scala 36:18]
                  node csr_mstatus_lo_lo_lo = cat(csr_mstatus.sie, csr_mstatus.wpri0) @[Cat.scala 33:92]
                  node csr_mstatus_lo_lo_hi_hi = cat(csr_mstatus.wpri2, csr_mstatus.mie) @[Cat.scala 33:92]
                  node csr_mstatus_lo_lo_hi = cat(csr_mstatus_lo_lo_hi_hi, csr_mstatus.wpri1) @[Cat.scala 33:92]
                  node csr_mstatus_lo_lo = cat(csr_mstatus_lo_lo_hi, csr_mstatus_lo_lo_lo) @[Cat.scala 33:92]
                  node csr_mstatus_lo_hi_lo = cat(csr_mstatus.ube, csr_mstatus.spie) @[Cat.scala 33:92]
                  node csr_mstatus_lo_hi_hi_hi = cat(csr_mstatus.vs, csr_mstatus.spp) @[Cat.scala 33:92]
                  node csr_mstatus_lo_hi_hi = cat(csr_mstatus_lo_hi_hi_hi, csr_mstatus.mpie) @[Cat.scala 33:92]
                  node csr_mstatus_lo_hi = cat(csr_mstatus_lo_hi_hi, csr_mstatus_lo_hi_lo) @[Cat.scala 33:92]
                  node csr_mstatus_lo_1 = cat(csr_mstatus_lo_hi, csr_mstatus_lo_lo) @[Cat.scala 33:92]
                  node csr_mstatus_hi_lo_lo = cat(csr_mstatus.fs, csr_mstatus.mpp) @[Cat.scala 33:92]
                  node csr_mstatus_hi_lo_hi_hi = cat(csr_mstatus.sum, csr_mstatus.mprv) @[Cat.scala 33:92]
                  node csr_mstatus_hi_lo_hi = cat(csr_mstatus_hi_lo_hi_hi, csr_mstatus.xs) @[Cat.scala 33:92]
                  node csr_mstatus_hi_lo = cat(csr_mstatus_hi_lo_hi, csr_mstatus_hi_lo_lo) @[Cat.scala 33:92]
                  node csr_mstatus_hi_hi_lo_hi = cat(csr_mstatus.tw, csr_mstatus.tvm) @[Cat.scala 33:92]
                  node csr_mstatus_hi_hi_lo = cat(csr_mstatus_hi_hi_lo_hi, csr_mstatus.mxr) @[Cat.scala 33:92]
                  node csr_mstatus_hi_hi_hi_hi = cat(csr_mstatus.sd, _csr_mstatus_T_2) @[Cat.scala 33:92]
                  node csr_mstatus_hi_hi_hi = cat(csr_mstatus_hi_hi_hi_hi, csr_mstatus.tsr) @[Cat.scala 33:92]
                  node csr_mstatus_hi_hi_1 = cat(csr_mstatus_hi_hi_hi, csr_mstatus_hi_hi_lo) @[Cat.scala 33:92]
                  node csr_mstatus_hi_1 = cat(csr_mstatus_hi_hi_1, csr_mstatus_hi_lo) @[Cat.scala 33:92]
                  node _csr_mstatus_T_3 = cat(csr_mstatus_hi_1, csr_mstatus_lo_1) @[Cat.scala 33:92]
                  wire csr_mstatus_mstatus_2 : { wpri0 : UInt<1>, sie : UInt<1>, wpri1 : UInt<1>, mie : UInt<1>, wpri2 : UInt<1>, spie : UInt<1>, ube : UInt<1>, mpie : UInt<1>, spp : UInt<1>, vs : UInt<2>, mpp : UInt<2>, fs : UInt<2>, xs : UInt<2>, mprv : UInt<1>, sum : UInt<1>, mxr : UInt<1>, tvm : UInt<1>, tw : UInt<1>, tsr : UInt<1>, wpri3 : UInt<9>, uxl : UInt<2>, sxl : UInt<2>, sbe : UInt<1>, mbe : UInt<1>, wpri4 : UInt<25>, sd : UInt<1>, wpri5 : UInt<4>} @[CSR.scala 78:23]
                  csr_mstatus_mstatus_2.wpri0 <= UInt<1>("h0") @[CSR.scala 79:19]
                  csr_mstatus_mstatus_2.sie <= UInt<1>("h0") @[CSR.scala 80:17]
                  csr_mstatus_mstatus_2.wpri1 <= UInt<1>("h0") @[CSR.scala 81:19]
                  csr_mstatus_mstatus_2.mie <= UInt<1>("h0") @[CSR.scala 82:17]
                  csr_mstatus_mstatus_2.wpri2 <= UInt<1>("h0") @[CSR.scala 83:19]
                  csr_mstatus_mstatus_2.spie <= UInt<1>("h0") @[CSR.scala 84:18]
                  csr_mstatus_mstatus_2.ube <= UInt<1>("h0") @[CSR.scala 85:17]
                  csr_mstatus_mstatus_2.mpie <= UInt<1>("h0") @[CSR.scala 86:18]
                  csr_mstatus_mstatus_2.spp <= UInt<1>("h0") @[CSR.scala 87:17]
                  csr_mstatus_mstatus_2.vs <= UInt<1>("h0") @[CSR.scala 88:16]
                  csr_mstatus_mstatus_2.mpp <= UInt<1>("h0") @[CSR.scala 89:17]
                  csr_mstatus_mstatus_2.fs <= UInt<1>("h0") @[CSR.scala 90:16]
                  csr_mstatus_mstatus_2.xs <= UInt<1>("h0") @[CSR.scala 91:16]
                  csr_mstatus_mstatus_2.mprv <= UInt<1>("h0") @[CSR.scala 92:18]
                  csr_mstatus_mstatus_2.sum <= UInt<1>("h0") @[CSR.scala 93:17]
                  csr_mstatus_mstatus_2.mxr <= UInt<1>("h0") @[CSR.scala 94:17]
                  csr_mstatus_mstatus_2.tvm <= UInt<1>("h0") @[CSR.scala 95:17]
                  csr_mstatus_mstatus_2.tw <= UInt<1>("h0") @[CSR.scala 96:16]
                  csr_mstatus_mstatus_2.tsr <= UInt<1>("h0") @[CSR.scala 97:17]
                  csr_mstatus_mstatus_2.wpri3 <= UInt<1>("h0") @[CSR.scala 98:19]
                  csr_mstatus_mstatus_2.uxl <= UInt<1>("h0") @[CSR.scala 99:17]
                  csr_mstatus_mstatus_2.sxl <= UInt<1>("h0") @[CSR.scala 100:17]
                  csr_mstatus_mstatus_2.sbe <= UInt<1>("h0") @[CSR.scala 101:17]
                  csr_mstatus_mstatus_2.mbe <= UInt<1>("h0") @[CSR.scala 102:17]
                  csr_mstatus_mstatus_2.wpri4 <= UInt<1>("h0") @[CSR.scala 103:19]
                  csr_mstatus_mstatus_2.sd <= UInt<1>("h0") @[CSR.scala 104:16]
                  csr_mstatus_mstatus_2.wpri5 <= UInt<1>("h0") @[CSR.scala 105:19]
                  node _csr_mstatus_mstatus_wpri0_T_1 = bits(_csr_mstatus_T_3, 0, 0) @[CSR.scala 49:28]
                  csr_mstatus_mstatus_2.wpri0 <= _csr_mstatus_mstatus_wpri0_T_1 @[CSR.scala 49:19]
                  node _csr_mstatus_mstatus_sie_T_1 = bits(_csr_mstatus_T_3, 1, 1) @[CSR.scala 50:26]
                  csr_mstatus_mstatus_2.sie <= _csr_mstatus_mstatus_sie_T_1 @[CSR.scala 50:17]
                  node _csr_mstatus_mstatus_wpri1_T_1 = bits(_csr_mstatus_T_3, 2, 2) @[CSR.scala 51:28]
                  csr_mstatus_mstatus_2.wpri1 <= _csr_mstatus_mstatus_wpri1_T_1 @[CSR.scala 51:19]
                  node _csr_mstatus_mstatus_mie_T_1 = bits(_csr_mstatus_T_3, 3, 3) @[CSR.scala 52:26]
                  csr_mstatus_mstatus_2.mie <= _csr_mstatus_mstatus_mie_T_1 @[CSR.scala 52:17]
                  node _csr_mstatus_mstatus_wpri2_T_1 = bits(_csr_mstatus_T_3, 4, 4) @[CSR.scala 53:28]
                  csr_mstatus_mstatus_2.wpri2 <= _csr_mstatus_mstatus_wpri2_T_1 @[CSR.scala 53:19]
                  node _csr_mstatus_mstatus_spie_T_1 = bits(_csr_mstatus_T_3, 5, 5) @[CSR.scala 54:27]
                  csr_mstatus_mstatus_2.spie <= _csr_mstatus_mstatus_spie_T_1 @[CSR.scala 54:18]
                  node _csr_mstatus_mstatus_ube_T_1 = bits(_csr_mstatus_T_3, 6, 6) @[CSR.scala 55:26]
                  csr_mstatus_mstatus_2.ube <= _csr_mstatus_mstatus_ube_T_1 @[CSR.scala 55:17]
                  node _csr_mstatus_mstatus_mpie_T_1 = bits(_csr_mstatus_T_3, 7, 7) @[CSR.scala 56:27]
                  csr_mstatus_mstatus_2.mpie <= _csr_mstatus_mstatus_mpie_T_1 @[CSR.scala 56:18]
                  node _csr_mstatus_mstatus_spp_T_1 = bits(_csr_mstatus_T_3, 8, 8) @[CSR.scala 57:26]
                  csr_mstatus_mstatus_2.spp <= _csr_mstatus_mstatus_spp_T_1 @[CSR.scala 57:17]
                  node _csr_mstatus_mstatus_vs_T_1 = bits(_csr_mstatus_T_3, 10, 9) @[CSR.scala 58:25]
                  csr_mstatus_mstatus_2.vs <= _csr_mstatus_mstatus_vs_T_1 @[CSR.scala 58:16]
                  node _csr_mstatus_mstatus_mpp_T_1 = bits(_csr_mstatus_T_3, 12, 11) @[CSR.scala 59:26]
                  csr_mstatus_mstatus_2.mpp <= _csr_mstatus_mstatus_mpp_T_1 @[CSR.scala 59:17]
                  node _csr_mstatus_mstatus_fs_T_1 = bits(_csr_mstatus_T_3, 14, 13) @[CSR.scala 60:25]
                  csr_mstatus_mstatus_2.fs <= _csr_mstatus_mstatus_fs_T_1 @[CSR.scala 60:16]
                  node _csr_mstatus_mstatus_xs_T_1 = bits(_csr_mstatus_T_3, 16, 15) @[CSR.scala 61:25]
                  csr_mstatus_mstatus_2.xs <= _csr_mstatus_mstatus_xs_T_1 @[CSR.scala 61:16]
                  node _csr_mstatus_mstatus_mprv_T_1 = bits(_csr_mstatus_T_3, 17, 17) @[CSR.scala 62:27]
                  csr_mstatus_mstatus_2.mprv <= _csr_mstatus_mstatus_mprv_T_1 @[CSR.scala 62:18]
                  node _csr_mstatus_mstatus_sum_T_1 = bits(_csr_mstatus_T_3, 18, 18) @[CSR.scala 63:26]
                  csr_mstatus_mstatus_2.sum <= _csr_mstatus_mstatus_sum_T_1 @[CSR.scala 63:17]
                  node _csr_mstatus_mstatus_mxr_T_1 = bits(_csr_mstatus_T_3, 19, 19) @[CSR.scala 64:26]
                  csr_mstatus_mstatus_2.mxr <= _csr_mstatus_mstatus_mxr_T_1 @[CSR.scala 64:17]
                  node _csr_mstatus_mstatus_tvm_T_1 = bits(_csr_mstatus_T_3, 20, 20) @[CSR.scala 65:26]
                  csr_mstatus_mstatus_2.tvm <= _csr_mstatus_mstatus_tvm_T_1 @[CSR.scala 65:17]
                  node _csr_mstatus_mstatus_tw_T_1 = bits(_csr_mstatus_T_3, 21, 21) @[CSR.scala 66:25]
                  csr_mstatus_mstatus_2.tw <= _csr_mstatus_mstatus_tw_T_1 @[CSR.scala 66:16]
                  node _csr_mstatus_mstatus_tsr_T_1 = bits(_csr_mstatus_T_3, 22, 22) @[CSR.scala 67:26]
                  csr_mstatus_mstatus_2.tsr <= _csr_mstatus_mstatus_tsr_T_1 @[CSR.scala 67:17]
                  node _csr_mstatus_mstatus_wpri3_T_3 = bits(csr_wdata, 6, 6) @[CSR.scala 68:32]
                  node _csr_mstatus_mstatus_wpri3_T_4 = bits(_csr_mstatus_T_3, 30, 23) @[CSR.scala 68:43]
                  node _csr_mstatus_mstatus_wpri3_T_5 = cat(_csr_mstatus_mstatus_wpri3_T_3, _csr_mstatus_mstatus_wpri3_T_4) @[Cat.scala 33:92]
                  csr_mstatus_mstatus_2.wpri3 <= _csr_mstatus_mstatus_wpri3_T_5 @[CSR.scala 68:19]
                  node _csr_mstatus_mstatus_sd_T_1 = bits(_csr_mstatus_T_3, 31, 31) @[CSR.scala 69:25]
                  csr_mstatus_mstatus_2.sd <= _csr_mstatus_mstatus_sd_T_1 @[CSR.scala 69:16]
                  node _csr_mstatus_mstatus_wpri5_T_1 = bits(csr_wdata, 3, 0) @[CSR.scala 70:28]
                  csr_mstatus_mstatus_2.wpri5 <= _csr_mstatus_mstatus_wpri5_T_1 @[CSR.scala 70:19]
                  node _csr_mstatus_mstatus_sbe_T_1 = bits(csr_wdata, 4, 4) @[CSR.scala 71:26]
                  csr_mstatus_mstatus_2.sbe <= _csr_mstatus_mstatus_sbe_T_1 @[CSR.scala 71:17]
                  node _csr_mstatus_mstatus_mbe_T_1 = bits(csr_wdata, 5, 5) @[CSR.scala 72:26]
                  csr_mstatus_mstatus_2.mbe <= _csr_mstatus_mstatus_mbe_T_1 @[CSR.scala 72:17]
                  node _csr_mstatus_mstatus_wpri4_T_1 = bits(csr_wdata, 31, 6) @[CSR.scala 73:28]
                  csr_mstatus_mstatus_2.wpri4 <= _csr_mstatus_mstatus_wpri4_T_1 @[CSR.scala 73:19]
                  csr_mstatus <= csr_mstatus_mstatus_2 @[Core.scala 401:43]
                else :
                  node _T_13 = eq(UInt<12>("h340"), mem_reg_csr_addr) @[Core.scala 395:30]
                  when _T_13 : @[Core.scala 395:30]
                    csr_mscratch <= csr_wdata @[Core.scala 402:44]
                  else :
                    node _T_14 = eq(UInt<12>("h341"), mem_reg_csr_addr) @[Core.scala 395:30]
                    when _T_14 : @[Core.scala 395:30]
                      csr_mepc <= csr_wdata @[Core.scala 403:40]
                    else :
                      node _T_15 = eq(UInt<12>("h342"), mem_reg_csr_addr) @[Core.scala 395:30]
                      when _T_15 : @[Core.scala 395:30]
                        csr_mcause <= csr_wdata @[Core.scala 404:42]
                      else :
                        node _T_16 = eq(UInt<12>("h343"), mem_reg_csr_addr) @[Core.scala 395:30]
                        when _T_16 : @[Core.scala 395:30]
                          csr_mtval <= csr_wdata @[Core.scala 405:41]
                        else :
                          node _T_17 = eq(UInt<12>("h344"), mem_reg_csr_addr) @[Core.scala 395:30]
                          when _T_17 : @[Core.scala 395:30]
                            skip
    node mem_wb_byte_offset = bits(mem_reg_alu_out, 1, 0) @[Core.scala 417:43]
    node _mem_wb_rdata_T = mul(UInt<4>("h8"), mem_wb_byte_offset) @[Core.scala 418:44]
    node mem_wb_rdata = dshr(io.dmem.rdata, _mem_wb_rdata_T) @[Core.scala 418:36]
    node _mem_wb_data_load_T = eq(mem_reg_mem_w, UInt<3>("h3")) @[Core.scala 420:20]
    node _mem_wb_data_load_T_1 = bits(mem_wb_rdata, 7, 7) @[Core.scala 412:29]
    node _mem_wb_data_load_T_2 = bits(_mem_wb_data_load_T_1, 0, 0) @[Bitwise.scala 77:15]
    node _mem_wb_data_load_T_3 = mux(_mem_wb_data_load_T_2, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
    node _mem_wb_data_load_T_4 = bits(mem_wb_rdata, 7, 0) @[Core.scala 412:46]
    node _mem_wb_data_load_T_5 = cat(_mem_wb_data_load_T_3, _mem_wb_data_load_T_4) @[Core.scala 412:38]
    node _mem_wb_data_load_T_6 = eq(mem_reg_mem_w, UInt<3>("h2")) @[Core.scala 421:20]
    node _mem_wb_data_load_T_7 = bits(mem_wb_rdata, 15, 15) @[Core.scala 412:29]
    node _mem_wb_data_load_T_8 = bits(_mem_wb_data_load_T_7, 0, 0) @[Bitwise.scala 77:15]
    node _mem_wb_data_load_T_9 = mux(_mem_wb_data_load_T_8, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _mem_wb_data_load_T_10 = bits(mem_wb_rdata, 15, 0) @[Core.scala 412:46]
    node _mem_wb_data_load_T_11 = cat(_mem_wb_data_load_T_9, _mem_wb_data_load_T_10) @[Core.scala 412:38]
    node _mem_wb_data_load_T_12 = eq(mem_reg_mem_w, UInt<3>("h5")) @[Core.scala 422:20]
    node _mem_wb_data_load_T_13 = mux(UInt<1>("h0"), UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
    node _mem_wb_data_load_T_14 = bits(mem_wb_rdata, 7, 0) @[Core.scala 415:37]
    node _mem_wb_data_load_T_15 = cat(_mem_wb_data_load_T_13, _mem_wb_data_load_T_14) @[Core.scala 415:29]
    node _mem_wb_data_load_T_16 = eq(mem_reg_mem_w, UInt<3>("h4")) @[Core.scala 423:20]
    node _mem_wb_data_load_T_17 = mux(UInt<1>("h0"), UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _mem_wb_data_load_T_18 = bits(mem_wb_rdata, 15, 0) @[Core.scala 415:37]
    node _mem_wb_data_load_T_19 = cat(_mem_wb_data_load_T_17, _mem_wb_data_load_T_18) @[Core.scala 415:29]
    node _mem_wb_data_load_T_20 = mux(_mem_wb_data_load_T_16, _mem_wb_data_load_T_19, mem_wb_rdata) @[Mux.scala 101:16]
    node _mem_wb_data_load_T_21 = mux(_mem_wb_data_load_T_12, _mem_wb_data_load_T_15, _mem_wb_data_load_T_20) @[Mux.scala 101:16]
    node _mem_wb_data_load_T_22 = mux(_mem_wb_data_load_T_6, _mem_wb_data_load_T_11, _mem_wb_data_load_T_21) @[Mux.scala 101:16]
    node mem_wb_data_load = mux(_mem_wb_data_load_T, _mem_wb_data_load_T_5, _mem_wb_data_load_T_22) @[Mux.scala 101:16]
    node _mem_wb_data_T = eq(mem_reg_wb_sel, UInt<3>("h1")) @[Core.scala 427:21]
    node _mem_wb_data_T_1 = eq(mem_reg_wb_sel, UInt<3>("h2")) @[Core.scala 428:21]
    node _mem_wb_data_T_2 = add(mem_reg_pc, UInt<32>("h4")) @[Core.scala 428:48]
    node _mem_wb_data_T_3 = tail(_mem_wb_data_T_2, 1) @[Core.scala 428:48]
    node _mem_wb_data_T_4 = eq(mem_reg_wb_sel, UInt<3>("h3")) @[Core.scala 429:21]
    node _mem_wb_data_T_5 = mux(_mem_wb_data_T_4, csr_rdata, mem_reg_alu_out) @[Mux.scala 101:16]
    node _mem_wb_data_T_6 = mux(_mem_wb_data_T_1, _mem_wb_data_T_3, _mem_wb_data_T_5) @[Mux.scala 101:16]
    node _mem_wb_data_T_7 = mux(_mem_wb_data_T, mem_wb_data_load, _mem_wb_data_T_6) @[Mux.scala 101:16]
    mem_wb_data <= _mem_wb_data_T_7 @[Core.scala 426:15]
    wb_reg_wb_addr <= mem_reg_wb_addr @[Core.scala 435:18]
    node _wb_reg_rf_wen_T = eq(mem_stall_flg, UInt<1>("h0")) @[Core.scala 436:25]
    node _wb_reg_rf_wen_T_1 = mux(_wb_reg_rf_wen_T, mem_reg_rf_wen, UInt<2>("h0")) @[Core.scala 436:24]
    wb_reg_rf_wen <= _wb_reg_rf_wen_T_1 @[Core.scala 436:18]
    wb_reg_wb_data <= mem_wb_data @[Core.scala 437:18]
    node _T_18 = eq(wb_reg_rf_wen, UInt<2>("h1")) @[Core.scala 443:22]
    when _T_18 : @[Core.scala 443:33]
      infer mport MPORT = regfile[wb_reg_wb_addr], clock @[Core.scala 444:12]
      MPORT <= wb_reg_wb_data @[Core.scala 444:29]
    reg successDetected : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Core.scala 450:32]
    node _successDetected_T = neq(if_inst, UInt<32>("h13")) @[Core.scala 451:34]
    node _successDetected_T_1 = eq(if_inst, UInt<11>("h513")) @[Core.scala 451:54]
    node _successDetected_T_2 = mux(_successDetected_T, _successDetected_T_1, successDetected) @[Core.scala 451:25]
    successDetected <= _successDetected_T_2 @[Core.scala 451:19]
    io.success <= successDetected @[Core.scala 452:14]
    node _io_exit_T = and(if_inst, UInt<32>("hffffffff")) @[Core.scala 453:22]
    node _io_exit_T_1 = eq(UInt<7>("h73"), _io_exit_T) @[Core.scala 453:22]
    io.exit <= _io_exit_T_1 @[Core.scala 453:11]
    io.debug_pc <= if_reg_pc @[Core.scala 454:15]
    node _T_19 = asUInt(reset) @[Core.scala 456:11]
    node _T_20 = eq(_T_19, UInt<1>("h0")) @[Core.scala 456:11]
    when _T_20 : @[Core.scala 456:11]
      printf(clock, UInt<1>("h1"), "if_reg_pc        : 0x%x\n", if_reg_pc) : printf @[Core.scala 456:11]
    node _T_21 = asUInt(reset) @[Core.scala 457:11]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[Core.scala 457:11]
    when _T_22 : @[Core.scala 457:11]
      printf(clock, UInt<1>("h1"), "id_reg_pc        : 0x%x\n", id_reg_pc) : printf_1 @[Core.scala 457:11]
    node _T_23 = asUInt(reset) @[Core.scala 458:11]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[Core.scala 458:11]
    when _T_24 : @[Core.scala 458:11]
      printf(clock, UInt<1>("h1"), "id_reg_inst      : 0x%x\n", id_reg_inst) : printf_2 @[Core.scala 458:11]
    node _T_25 = asUInt(reset) @[Core.scala 459:11]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[Core.scala 459:11]
    when _T_26 : @[Core.scala 459:11]
      printf(clock, UInt<1>("h1"), "stall_flg        : 0x%x\n", stall_flg) : printf_3 @[Core.scala 459:11]
    node _T_27 = asUInt(reset) @[Core.scala 460:11]
    node _T_28 = eq(_T_27, UInt<1>("h0")) @[Core.scala 460:11]
    when _T_28 : @[Core.scala 460:11]
      printf(clock, UInt<1>("h1"), "id_inst          : 0x%x\n", id_inst) : printf_4 @[Core.scala 460:11]
    node _T_29 = asUInt(reset) @[Core.scala 461:11]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[Core.scala 461:11]
    when _T_30 : @[Core.scala 461:11]
      printf(clock, UInt<1>("h1"), "id_rs1_data      : 0x%x\n", id_rs1_data) : printf_5 @[Core.scala 461:11]
    node _T_31 = asUInt(reset) @[Core.scala 462:11]
    node _T_32 = eq(_T_31, UInt<1>("h0")) @[Core.scala 462:11]
    when _T_32 : @[Core.scala 462:11]
      printf(clock, UInt<1>("h1"), "id_rs2_data      : 0x%x\n", id_rs2_data) : printf_6 @[Core.scala 462:11]
    node _T_33 = asUInt(reset) @[Core.scala 463:11]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[Core.scala 463:11]
    when _T_34 : @[Core.scala 463:11]
      printf(clock, UInt<1>("h1"), "exe_reg_pc       : 0x%x\n", exe_reg_pc) : printf_7 @[Core.scala 463:11]
    node _T_35 = asUInt(reset) @[Core.scala 464:11]
    node _T_36 = eq(_T_35, UInt<1>("h0")) @[Core.scala 464:11]
    when _T_36 : @[Core.scala 464:11]
      printf(clock, UInt<1>("h1"), "exe_reg_op1_data : 0x%x\n", exe_reg_op1_data) : printf_8 @[Core.scala 464:11]
    node _T_37 = asUInt(reset) @[Core.scala 465:11]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[Core.scala 465:11]
    when _T_38 : @[Core.scala 465:11]
      printf(clock, UInt<1>("h1"), "exe_reg_op2_data : 0x%x\n", exe_reg_op2_data) : printf_9 @[Core.scala 465:11]
    node _T_39 = asUInt(reset) @[Core.scala 466:11]
    node _T_40 = eq(_T_39, UInt<1>("h0")) @[Core.scala 466:11]
    when _T_40 : @[Core.scala 466:11]
      printf(clock, UInt<1>("h1"), "exe_alu_out      : 0x%x\n", exe_alu_out) : printf_10 @[Core.scala 466:11]
    node _T_41 = asUInt(reset) @[Core.scala 467:11]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[Core.scala 467:11]
    when _T_42 : @[Core.scala 467:11]
      printf(clock, UInt<1>("h1"), "mem_reg_pc       : 0x%x\n", mem_reg_pc) : printf_11 @[Core.scala 467:11]
    node _T_43 = asUInt(reset) @[Core.scala 468:11]
    node _T_44 = eq(_T_43, UInt<1>("h0")) @[Core.scala 468:11]
    when _T_44 : @[Core.scala 468:11]
      printf(clock, UInt<1>("h1"), "mem_wb_data      : 0x%x\n", mem_wb_data) : printf_12 @[Core.scala 468:11]
    node _T_45 = asUInt(reset) @[Core.scala 469:11]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[Core.scala 469:11]
    when _T_46 : @[Core.scala 469:11]
      printf(clock, UInt<1>("h1"), "wb_reg_wb_data   : 0x%x\n", wb_reg_wb_data) : printf_13 @[Core.scala 469:11]
    node _T_47 = asUInt(reset) @[Core.scala 470:11]
    node _T_48 = eq(_T_47, UInt<1>("h0")) @[Core.scala 470:11]
    when _T_48 : @[Core.scala 470:11]
      printf(clock, UInt<1>("h1"), "---------\n") : printf_14 @[Core.scala 470:11]

  module Memory :
    input clock : Clock
    input reset : Reset
    output io : { imem : { flip addr : UInt<32>, inst : UInt<32>, valid : UInt<1>}, dmem : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}}

    smem mems_0 : UInt<8> [2048] @[Memory.scala 30:43]
    smem mems_1 : UInt<8> [2048] @[Memory.scala 30:43]
    smem mems_2 : UInt<8> [2048] @[Memory.scala 30:43]
    smem mems_3 : UInt<8> [2048] @[Memory.scala 30:43]
    node _imemWordAddr_T = sub(io.imem.addr, UInt<32>("h0")) @[Memory.scala 38:36]
    node _imemWordAddr_T_1 = tail(_imemWordAddr_T, 1) @[Memory.scala 38:36]
    node imemWordAddr = shr(_imemWordAddr_T_1, 2) @[Memory.scala 38:51]
    reg imemWordAddrFetched : UInt<30>, clock with :
      reset => (UInt<1>("h0"), imemWordAddrFetched) @[Memory.scala 39:32]
    reg isFirstCycle : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Memory.scala 40:29]
    isFirstCycle <= UInt<1>("h0") @[Memory.scala 41:16]
    node _io_imem_valid_T = eq(isFirstCycle, UInt<1>("h0")) @[Memory.scala 43:20]
    node _io_imem_valid_T_1 = eq(imemWordAddrFetched, imemWordAddr) @[Memory.scala 43:57]
    node _io_imem_valid_T_2 = and(_io_imem_valid_T, _io_imem_valid_T_1) @[Memory.scala 43:34]
    io.imem.valid <= _io_imem_valid_T_2 @[Memory.scala 43:17]
    imemWordAddrFetched <= imemWordAddr @[Memory.scala 44:23]
    wire _io_imem_inst_WIRE : UInt @[Memory.scala 46:35]
    _io_imem_inst_WIRE is invalid @[Memory.scala 46:35]
    when UInt<1>("h1") : @[Memory.scala 46:35]
      _io_imem_inst_WIRE <= imemWordAddr @[Memory.scala 46:35]
      node _io_imem_inst_T = or(_io_imem_inst_WIRE, UInt<11>("h0")) @[Memory.scala 46:35]
      node _io_imem_inst_T_1 = bits(_io_imem_inst_T, 10, 0) @[Memory.scala 46:35]
      read mport io_imem_inst_MPORT = mems_0[_io_imem_inst_T_1], clock @[Memory.scala 46:35]
    wire _io_imem_inst_WIRE_1 : UInt @[Memory.scala 46:35]
    _io_imem_inst_WIRE_1 is invalid @[Memory.scala 46:35]
    when UInt<1>("h1") : @[Memory.scala 46:35]
      _io_imem_inst_WIRE_1 <= imemWordAddr @[Memory.scala 46:35]
      node _io_imem_inst_T_2 = or(_io_imem_inst_WIRE_1, UInt<11>("h0")) @[Memory.scala 46:35]
      node _io_imem_inst_T_3 = bits(_io_imem_inst_T_2, 10, 0) @[Memory.scala 46:35]
      read mport io_imem_inst_MPORT_1 = mems_1[_io_imem_inst_T_3], clock @[Memory.scala 46:35]
    wire _io_imem_inst_WIRE_2 : UInt @[Memory.scala 46:35]
    _io_imem_inst_WIRE_2 is invalid @[Memory.scala 46:35]
    when UInt<1>("h1") : @[Memory.scala 46:35]
      _io_imem_inst_WIRE_2 <= imemWordAddr @[Memory.scala 46:35]
      node _io_imem_inst_T_4 = or(_io_imem_inst_WIRE_2, UInt<11>("h0")) @[Memory.scala 46:35]
      node _io_imem_inst_T_5 = bits(_io_imem_inst_T_4, 10, 0) @[Memory.scala 46:35]
      read mport io_imem_inst_MPORT_2 = mems_2[_io_imem_inst_T_5], clock @[Memory.scala 46:35]
    wire _io_imem_inst_WIRE_3 : UInt @[Memory.scala 46:35]
    _io_imem_inst_WIRE_3 is invalid @[Memory.scala 46:35]
    when UInt<1>("h1") : @[Memory.scala 46:35]
      _io_imem_inst_WIRE_3 <= imemWordAddr @[Memory.scala 46:35]
      node _io_imem_inst_T_6 = or(_io_imem_inst_WIRE_3, UInt<11>("h0")) @[Memory.scala 46:35]
      node _io_imem_inst_T_7 = bits(_io_imem_inst_T_6, 10, 0) @[Memory.scala 46:35]
      read mport io_imem_inst_MPORT_3 = mems_3[_io_imem_inst_T_7], clock @[Memory.scala 46:35]
    node io_imem_inst_lo = cat(io_imem_inst_MPORT_1, io_imem_inst_MPORT) @[Cat.scala 33:92]
    node io_imem_inst_hi = cat(io_imem_inst_MPORT_3, io_imem_inst_MPORT_2) @[Cat.scala 33:92]
    node _io_imem_inst_T_8 = cat(io_imem_inst_hi, io_imem_inst_lo) @[Cat.scala 33:92]
    io.imem.inst <= _io_imem_inst_T_8 @[Memory.scala 45:16]
    node _dmemWordAddr_T = sub(io.dmem.addr, UInt<32>("h0")) @[Memory.scala 49:36]
    node _dmemWordAddr_T_1 = tail(_dmemWordAddr_T, 1) @[Memory.scala 49:36]
    node dmemWordAddr = shr(_dmemWordAddr_T_1, 2) @[Memory.scala 49:51]
    reg rvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Memory.scala 50:23]
    wire _rdata_WIRE : UInt @[Memory.scala 52:35]
    _rdata_WIRE is invalid @[Memory.scala 52:35]
    when UInt<1>("h1") : @[Memory.scala 52:35]
      _rdata_WIRE <= dmemWordAddr @[Memory.scala 52:35]
      node _rdata_T = or(_rdata_WIRE, UInt<11>("h0")) @[Memory.scala 52:35]
      node _rdata_T_1 = bits(_rdata_T, 10, 0) @[Memory.scala 52:35]
      read mport rdata_MPORT = mems_0[_rdata_T_1], clock @[Memory.scala 52:35]
    wire _rdata_WIRE_1 : UInt @[Memory.scala 52:35]
    _rdata_WIRE_1 is invalid @[Memory.scala 52:35]
    when UInt<1>("h1") : @[Memory.scala 52:35]
      _rdata_WIRE_1 <= dmemWordAddr @[Memory.scala 52:35]
      node _rdata_T_2 = or(_rdata_WIRE_1, UInt<11>("h0")) @[Memory.scala 52:35]
      node _rdata_T_3 = bits(_rdata_T_2, 10, 0) @[Memory.scala 52:35]
      read mport rdata_MPORT_1 = mems_1[_rdata_T_3], clock @[Memory.scala 52:35]
    wire _rdata_WIRE_2 : UInt @[Memory.scala 52:35]
    _rdata_WIRE_2 is invalid @[Memory.scala 52:35]
    when UInt<1>("h1") : @[Memory.scala 52:35]
      _rdata_WIRE_2 <= dmemWordAddr @[Memory.scala 52:35]
      node _rdata_T_4 = or(_rdata_WIRE_2, UInt<11>("h0")) @[Memory.scala 52:35]
      node _rdata_T_5 = bits(_rdata_T_4, 10, 0) @[Memory.scala 52:35]
      read mport rdata_MPORT_2 = mems_2[_rdata_T_5], clock @[Memory.scala 52:35]
    wire _rdata_WIRE_3 : UInt @[Memory.scala 52:35]
    _rdata_WIRE_3 is invalid @[Memory.scala 52:35]
    when UInt<1>("h1") : @[Memory.scala 52:35]
      _rdata_WIRE_3 <= dmemWordAddr @[Memory.scala 52:35]
      node _rdata_T_6 = or(_rdata_WIRE_3, UInt<11>("h0")) @[Memory.scala 52:35]
      node _rdata_T_7 = bits(_rdata_T_6, 10, 0) @[Memory.scala 52:35]
      read mport rdata_MPORT_3 = mems_3[_rdata_T_7], clock @[Memory.scala 52:35]
    node rdata_lo = cat(rdata_MPORT_1, rdata_MPORT) @[Cat.scala 33:92]
    node rdata_hi = cat(rdata_MPORT_3, rdata_MPORT_2) @[Cat.scala 33:92]
    node rdata = cat(rdata_hi, rdata_lo) @[Cat.scala 33:92]
    io.dmem.rvalid <= rvalid @[Memory.scala 54:18]
    io.dmem.rdata <= rdata @[Memory.scala 55:17]
    rvalid <= UInt<1>("h0") @[Memory.scala 56:10]
    reg dmemAddrReg : UInt<32>, clock with :
      reset => (UInt<1>("h0"), dmemAddrReg) @[Memory.scala 57:24]
    node _T = eq(io.dmem.wen, UInt<1>("h0")) @[Memory.scala 58:24]
    node _T_1 = and(io.dmem.ren, _T) @[Memory.scala 58:21]
    node _T_2 = eq(rvalid, UInt<1>("h0")) @[Memory.scala 58:40]
    node _T_3 = and(_T_1, _T_2) @[Memory.scala 58:37]
    when _T_3 : @[Memory.scala 58:50]
      rvalid <= UInt<1>("h1") @[Memory.scala 59:12]
      dmemAddrReg <= io.dmem.addr @[Memory.scala 60:17]
    when rvalid : @[Memory.scala 62:18]
      node _T_4 = asUInt(reset) @[Memory.scala 63:11]
      node _T_5 = eq(_T_4, UInt<1>("h0")) @[Memory.scala 63:11]
      when _T_5 : @[Memory.scala 63:11]
        printf(clock, UInt<1>("h1"), "Data read address=0x%x data=0x%x\n", dmemAddrReg, rdata) : printf @[Memory.scala 63:11]
    when io.dmem.wen : @[Memory.scala 65:20]
      node _T_6 = bits(io.dmem.wstrb, 0, 0) @[Memory.scala 67:25]
      when _T_6 : @[Memory.scala 67:30]
        node _T_7 = sub(io.dmem.addr, UInt<32>("h0")) @[Memory.scala 68:37]
        node _T_8 = tail(_T_7, 1) @[Memory.scala 68:37]
        node _T_9 = shr(_T_8, 2) @[Memory.scala 68:52]
        node _T_10 = bits(io.dmem.wdata, 7, 0) @[Memory.scala 68:71]
        node _T_11 = bits(_T_9, 10, 0)
        write mport MPORT = mems_0[_T_11], clock
        MPORT <= _T_10
      node _T_12 = bits(io.dmem.wstrb, 1, 1) @[Memory.scala 67:25]
      when _T_12 : @[Memory.scala 67:30]
        node _T_13 = sub(io.dmem.addr, UInt<32>("h0")) @[Memory.scala 68:37]
        node _T_14 = tail(_T_13, 1) @[Memory.scala 68:37]
        node _T_15 = shr(_T_14, 2) @[Memory.scala 68:52]
        node _T_16 = bits(io.dmem.wdata, 15, 8) @[Memory.scala 68:71]
        node _T_17 = bits(_T_15, 10, 0)
        write mport MPORT_1 = mems_1[_T_17], clock
        MPORT_1 <= _T_16
      node _T_18 = bits(io.dmem.wstrb, 2, 2) @[Memory.scala 67:25]
      when _T_18 : @[Memory.scala 67:30]
        node _T_19 = sub(io.dmem.addr, UInt<32>("h0")) @[Memory.scala 68:37]
        node _T_20 = tail(_T_19, 1) @[Memory.scala 68:37]
        node _T_21 = shr(_T_20, 2) @[Memory.scala 68:52]
        node _T_22 = bits(io.dmem.wdata, 23, 16) @[Memory.scala 68:71]
        node _T_23 = bits(_T_21, 10, 0)
        write mport MPORT_2 = mems_2[_T_23], clock
        MPORT_2 <= _T_22
      node _T_24 = bits(io.dmem.wstrb, 3, 3) @[Memory.scala 67:25]
      when _T_24 : @[Memory.scala 67:30]
        node _T_25 = sub(io.dmem.addr, UInt<32>("h0")) @[Memory.scala 68:37]
        node _T_26 = tail(_T_25, 1) @[Memory.scala 68:37]
        node _T_27 = shr(_T_26, 2) @[Memory.scala 68:52]
        node _T_28 = bits(io.dmem.wdata, 31, 24) @[Memory.scala 68:71]
        node _T_29 = bits(_T_27, 10, 0)
        write mport MPORT_3 = mems_3[_T_29], clock
        MPORT_3 <= _T_28

  module GpioArray :
    input clock : Clock
    input reset : Reset
    output io : { mem : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}, flip in : UInt<32>[6], out : UInt<32>[6]}

    wire _outReg_WIRE : UInt<32>[6] @[Gpio.scala 45:31]
    _outReg_WIRE[0] <= UInt<32>("h0") @[Gpio.scala 45:31]
    _outReg_WIRE[1] <= UInt<32>("h0") @[Gpio.scala 45:31]
    _outReg_WIRE[2] <= UInt<32>("h0") @[Gpio.scala 45:31]
    _outReg_WIRE[3] <= UInt<32>("h0") @[Gpio.scala 45:31]
    _outReg_WIRE[4] <= UInt<32>("h0") @[Gpio.scala 45:31]
    _outReg_WIRE[5] <= UInt<32>("h0") @[Gpio.scala 45:31]
    reg outReg : UInt<32>[6], clock with :
      reset => (reset, _outReg_WIRE) @[Gpio.scala 45:23]
    wire _inReg_WIRE : UInt<32>[6] @[Gpio.scala 46:30]
    _inReg_WIRE[0] <= UInt<32>("h0") @[Gpio.scala 46:30]
    _inReg_WIRE[1] <= UInt<32>("h0") @[Gpio.scala 46:30]
    _inReg_WIRE[2] <= UInt<32>("h0") @[Gpio.scala 46:30]
    _inReg_WIRE[3] <= UInt<32>("h0") @[Gpio.scala 46:30]
    _inReg_WIRE[4] <= UInt<32>("h0") @[Gpio.scala 46:30]
    _inReg_WIRE[5] <= UInt<32>("h0") @[Gpio.scala 46:30]
    reg inReg : UInt<32>[6], clock with :
      reset => (reset, _inReg_WIRE) @[Gpio.scala 46:22]
    io.mem.rvalid <= UInt<1>("h1") @[Gpio.scala 48:17]
    node _io_mem_rdata_T = bits(io.mem.addr, 6, 2) @[Gpio.scala 49:40]
    node _io_mem_rdata_T_1 = and(outReg[0], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_2 = and(inReg[0], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_3 = and(outReg[1], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_4 = and(inReg[1], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_5 = and(outReg[2], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_6 = and(inReg[2], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_7 = and(outReg[3], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_8 = and(inReg[3], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_9 = and(outReg[4], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_10 = and(inReg[4], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_11 = and(outReg[5], UInt<32>("hffffffff")) @[Gpio.scala 51:52]
    node _io_mem_rdata_T_12 = and(inReg[5], UInt<32>("hffffffff")) @[Gpio.scala 52:51]
    node _io_mem_rdata_T_13 = eq(UInt<1>("h0"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_14 = mux(_io_mem_rdata_T_13, _io_mem_rdata_T_1, UInt<32>("hdeadbeef")) @[Mux.scala 81:58]
    node _io_mem_rdata_T_15 = eq(UInt<1>("h1"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_16 = mux(_io_mem_rdata_T_15, _io_mem_rdata_T_2, _io_mem_rdata_T_14) @[Mux.scala 81:58]
    node _io_mem_rdata_T_17 = eq(UInt<3>("h4"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_18 = mux(_io_mem_rdata_T_17, _io_mem_rdata_T_3, _io_mem_rdata_T_16) @[Mux.scala 81:58]
    node _io_mem_rdata_T_19 = eq(UInt<3>("h5"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_20 = mux(_io_mem_rdata_T_19, _io_mem_rdata_T_4, _io_mem_rdata_T_18) @[Mux.scala 81:58]
    node _io_mem_rdata_T_21 = eq(UInt<4>("h8"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_22 = mux(_io_mem_rdata_T_21, _io_mem_rdata_T_5, _io_mem_rdata_T_20) @[Mux.scala 81:58]
    node _io_mem_rdata_T_23 = eq(UInt<4>("h9"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_24 = mux(_io_mem_rdata_T_23, _io_mem_rdata_T_6, _io_mem_rdata_T_22) @[Mux.scala 81:58]
    node _io_mem_rdata_T_25 = eq(UInt<4>("hc"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_26 = mux(_io_mem_rdata_T_25, _io_mem_rdata_T_7, _io_mem_rdata_T_24) @[Mux.scala 81:58]
    node _io_mem_rdata_T_27 = eq(UInt<4>("hd"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_28 = mux(_io_mem_rdata_T_27, _io_mem_rdata_T_8, _io_mem_rdata_T_26) @[Mux.scala 81:58]
    node _io_mem_rdata_T_29 = eq(UInt<5>("h10"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_30 = mux(_io_mem_rdata_T_29, _io_mem_rdata_T_9, _io_mem_rdata_T_28) @[Mux.scala 81:58]
    node _io_mem_rdata_T_31 = eq(UInt<5>("h11"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_32 = mux(_io_mem_rdata_T_31, _io_mem_rdata_T_10, _io_mem_rdata_T_30) @[Mux.scala 81:58]
    node _io_mem_rdata_T_33 = eq(UInt<5>("h14"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_34 = mux(_io_mem_rdata_T_33, _io_mem_rdata_T_11, _io_mem_rdata_T_32) @[Mux.scala 81:58]
    node _io_mem_rdata_T_35 = eq(UInt<5>("h15"), _io_mem_rdata_T) @[Mux.scala 81:61]
    node _io_mem_rdata_T_36 = mux(_io_mem_rdata_T_35, _io_mem_rdata_T_12, _io_mem_rdata_T_34) @[Mux.scala 81:58]
    io.mem.rdata <= _io_mem_rdata_T_36 @[Gpio.scala 49:16]
    node _mask_T = bits(io.mem.wstrb, 0, 0) @[Gpio.scala 55:52]
    node _mask_T_1 = mux(_mask_T, UInt<8>("hff"), UInt<8>("h0")) @[Gpio.scala 55:39]
    node _mask_T_2 = bits(io.mem.wstrb, 1, 1) @[Gpio.scala 55:52]
    node _mask_T_3 = mux(_mask_T_2, UInt<8>("hff"), UInt<8>("h0")) @[Gpio.scala 55:39]
    node _mask_T_4 = bits(io.mem.wstrb, 2, 2) @[Gpio.scala 55:52]
    node _mask_T_5 = mux(_mask_T_4, UInt<8>("hff"), UInt<8>("h0")) @[Gpio.scala 55:39]
    node _mask_T_6 = bits(io.mem.wstrb, 3, 3) @[Gpio.scala 55:52]
    node _mask_T_7 = mux(_mask_T_6, UInt<8>("hff"), UInt<8>("h0")) @[Gpio.scala 55:39]
    node mask_lo = cat(_mask_T_3, _mask_T_1) @[Cat.scala 33:92]
    node mask_hi = cat(_mask_T_7, _mask_T_5) @[Cat.scala 33:92]
    node mask = cat(mask_hi, mask_lo) @[Cat.scala 33:92]
    inReg[0] <= io.in[0] @[Gpio.scala 58:22]
    io.out[0] <= outReg[0] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_1 = eq(_T, UInt<1>("h0")) @[Gpio.scala 61:41]
      when _T_1 : @[Gpio.scala 61:81]
        node _outReg_0_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_0_T_1 = and(outReg[0], _outReg_0_T) @[Gpio.scala 63:50]
        node _outReg_0_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_0_T_3 = or(_outReg_0_T_1, _outReg_0_T_2) @[Gpio.scala 63:59]
        node _outReg_0_T_4 = and(_outReg_0_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[0] <= _outReg_0_T_4 @[Gpio.scala 63:27]
    inReg[1] <= io.in[1] @[Gpio.scala 58:22]
    io.out[1] <= outReg[1] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T_2 = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_3 = eq(_T_2, UInt<3>("h4")) @[Gpio.scala 61:41]
      when _T_3 : @[Gpio.scala 61:81]
        node _outReg_1_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_1_T_1 = and(outReg[1], _outReg_1_T) @[Gpio.scala 63:50]
        node _outReg_1_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_1_T_3 = or(_outReg_1_T_1, _outReg_1_T_2) @[Gpio.scala 63:59]
        node _outReg_1_T_4 = and(_outReg_1_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[1] <= _outReg_1_T_4 @[Gpio.scala 63:27]
    inReg[2] <= io.in[2] @[Gpio.scala 58:22]
    io.out[2] <= outReg[2] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T_4 = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_5 = eq(_T_4, UInt<4>("h8")) @[Gpio.scala 61:41]
      when _T_5 : @[Gpio.scala 61:81]
        node _outReg_2_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_2_T_1 = and(outReg[2], _outReg_2_T) @[Gpio.scala 63:50]
        node _outReg_2_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_2_T_3 = or(_outReg_2_T_1, _outReg_2_T_2) @[Gpio.scala 63:59]
        node _outReg_2_T_4 = and(_outReg_2_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[2] <= _outReg_2_T_4 @[Gpio.scala 63:27]
    inReg[3] <= io.in[3] @[Gpio.scala 58:22]
    io.out[3] <= outReg[3] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T_6 = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_7 = eq(_T_6, UInt<4>("hc")) @[Gpio.scala 61:41]
      when _T_7 : @[Gpio.scala 61:81]
        node _outReg_3_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_3_T_1 = and(outReg[3], _outReg_3_T) @[Gpio.scala 63:50]
        node _outReg_3_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_3_T_3 = or(_outReg_3_T_1, _outReg_3_T_2) @[Gpio.scala 63:59]
        node _outReg_3_T_4 = and(_outReg_3_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[3] <= _outReg_3_T_4 @[Gpio.scala 63:27]
    inReg[4] <= io.in[4] @[Gpio.scala 58:22]
    io.out[4] <= outReg[4] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T_8 = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_9 = eq(_T_8, UInt<5>("h10")) @[Gpio.scala 61:41]
      when _T_9 : @[Gpio.scala 61:81]
        node _outReg_4_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_4_T_1 = and(outReg[4], _outReg_4_T) @[Gpio.scala 63:50]
        node _outReg_4_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_4_T_3 = or(_outReg_4_T_1, _outReg_4_T_2) @[Gpio.scala 63:59]
        node _outReg_4_T_4 = and(_outReg_4_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[4] <= _outReg_4_T_4 @[Gpio.scala 63:27]
    inReg[5] <= io.in[5] @[Gpio.scala 58:22]
    io.out[5] <= outReg[5] @[Gpio.scala 59:23]
    when io.mem.wen : @[Gpio.scala 60:22]
      node _T_10 = bits(io.mem.addr, 7, 2) @[Gpio.scala 61:23]
      node _T_11 = eq(_T_10, UInt<5>("h14")) @[Gpio.scala 61:41]
      when _T_11 : @[Gpio.scala 61:81]
        node _outReg_5_T = not(mask) @[Gpio.scala 63:52]
        node _outReg_5_T_1 = and(outReg[5], _outReg_5_T) @[Gpio.scala 63:50]
        node _outReg_5_T_2 = and(io.mem.wdata, mask) @[Gpio.scala 63:75]
        node _outReg_5_T_3 = or(_outReg_5_T_1, _outReg_5_T_2) @[Gpio.scala 63:59]
        node _outReg_5_T_4 = and(_outReg_5_T_3, UInt<32>("hffffffff")) @[Gpio.scala 63:84]
        outReg[5] <= _outReg_5_T_4 @[Gpio.scala 63:27]

  module IORegister :
    input clock : Clock
    input reset : Reset
    output io : { mem : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}[2], out : { valid : UInt<1>, bits : UInt<32>}[2]}

    node _inSignals_T = bits(io.mem.addr, 2, 2) @[IORegister.scala 19:40]
    node _inSignals_T_1 = cat(UInt<1>("h0"), UInt<32>("hdeadbeef")) @[Cat.scala 33:92]
    node _inSignals_T_2 = and(io.in[0].bits, UInt<17>("h100ff")) @[IORegister.scala 21:49]
    node _inSignals_T_3 = cat(io.in[0].valid, _inSignals_T_2) @[Cat.scala 33:92]
    node _inSignals_T_4 = and(io.in[1].bits, UInt<2>("h3")) @[IORegister.scala 21:49]
    node _inSignals_T_5 = cat(io.in[1].valid, _inSignals_T_4) @[Cat.scala 33:92]
    node _inSignals_T_6 = eq(UInt<1>("h1"), _inSignals_T) @[Mux.scala 81:61]
    node inSignals = mux(_inSignals_T_6, _inSignals_T_5, _inSignals_T_3) @[Mux.scala 81:58]
    node _io_mem_rvalid_T = bits(inSignals, 32, 32) @[IORegister.scala 24:29]
    io.mem.rvalid <= _io_mem_rvalid_T @[IORegister.scala 24:17]
    node _io_mem_rdata_T = bits(inSignals, 31, 0) @[IORegister.scala 25:28]
    io.mem.rdata <= _io_mem_rdata_T @[IORegister.scala 25:16]
    node _mask_T = bits(io.mem.wstrb, 0, 0) @[IORegister.scala 27:52]
    node _mask_T_1 = mux(_mask_T, UInt<8>("hff"), UInt<8>("h0")) @[IORegister.scala 27:39]
    node _mask_T_2 = bits(io.mem.wstrb, 1, 1) @[IORegister.scala 27:52]
    node _mask_T_3 = mux(_mask_T_2, UInt<8>("hff"), UInt<8>("h0")) @[IORegister.scala 27:39]
    node _mask_T_4 = bits(io.mem.wstrb, 2, 2) @[IORegister.scala 27:52]
    node _mask_T_5 = mux(_mask_T_4, UInt<8>("hff"), UInt<8>("h0")) @[IORegister.scala 27:39]
    node _mask_T_6 = bits(io.mem.wstrb, 3, 3) @[IORegister.scala 27:52]
    node _mask_T_7 = mux(_mask_T_6, UInt<8>("hff"), UInt<8>("h0")) @[IORegister.scala 27:39]
    node mask_lo = cat(_mask_T_3, _mask_T_1) @[Cat.scala 33:92]
    node mask_hi = cat(_mask_T_7, _mask_T_5) @[Cat.scala 33:92]
    node mask = cat(mask_hi, mask_lo) @[Cat.scala 33:92]
    io.out[0].valid <= UInt<1>("h0") @[IORegister.scala 30:29]
    io.in[0].ready <= UInt<1>("h0") @[IORegister.scala 31:28]
    node _io_out_0_bits_T = and(io.mem.wdata, mask) @[IORegister.scala 32:45]
    node _io_out_0_bits_T_1 = and(_io_out_0_bits_T, UInt<8>("hff")) @[IORegister.scala 32:53]
    io.out[0].bits <= _io_out_0_bits_T_1 @[IORegister.scala 32:28]
    node _T = bits(io.mem.addr, 3, 2) @[IORegister.scala 33:21]
    node _T_1 = eq(_T, UInt<1>("h0")) @[IORegister.scala 33:39]
    when _T_1 : @[IORegister.scala 33:56]
      io.out[0].valid <= io.mem.wen @[IORegister.scala 34:31]
      io.in[0].ready <= io.mem.ren @[IORegister.scala 35:30]
    io.out[1].valid <= UInt<1>("h0") @[IORegister.scala 30:29]
    io.in[1].ready <= UInt<1>("h0") @[IORegister.scala 31:28]
    node _io_out_1_bits_T = and(io.mem.wdata, mask) @[IORegister.scala 32:45]
    node _io_out_1_bits_T_1 = and(_io_out_1_bits_T, UInt<1>("h0")) @[IORegister.scala 32:53]
    io.out[1].bits <= _io_out_1_bits_T_1 @[IORegister.scala 32:28]
    node _T_2 = bits(io.mem.addr, 3, 2) @[IORegister.scala 33:21]
    node _T_3 = eq(_T_2, UInt<1>("h1")) @[IORegister.scala 33:39]
    when _T_3 : @[IORegister.scala 33:56]
      io.out[1].valid <= io.mem.wen @[IORegister.scala 34:31]
      io.in[1].ready <= io.mem.ren @[IORegister.scala 35:30]

  module DMemDecoder :
    input clock : Clock
    input reset : Reset
    output io : { initiator : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}, flip targets : { flip addr : UInt<32>, rdata : UInt<32>, flip ren : UInt<1>, rvalid : UInt<1>, flip wen : UInt<1>, flip wstrb : UInt<4>, flip wdata : UInt<32>}[3]}

    wire rvalid : UInt<1>
    rvalid <= UInt<1>("h1")
    wire rdata : UInt<32>
    rdata <= UInt<32>("hdeadbeef")
    wire wready : UInt<1>
    wready <= UInt<1>("h0")
    io.initiator.rvalid <= rvalid @[Decoder.scala 18:23]
    io.initiator.rdata <= rdata @[Decoder.scala 19:22]
    wire addr : UInt<32>
    addr <= UInt<32>("h0")
    wire ren : UInt<1>
    ren <= UInt<1>("h0")
    wire wen : UInt<1>
    wen <= UInt<1>("h0")
    wire wdata : UInt<32>
    wdata <= UInt<32>("hdeadbeef")
    wire wstrb : UInt<4>
    wstrb <= UInt<4>("hf")
    io.targets[0].addr <= addr @[Decoder.scala 30:17]
    io.targets[0].ren <= ren @[Decoder.scala 31:16]
    io.targets[0].wen <= wen @[Decoder.scala 32:16]
    io.targets[0].wdata <= wdata @[Decoder.scala 33:18]
    io.targets[0].wstrb <= wstrb @[Decoder.scala 34:18]
    node _T = leq(UInt<1>("h0"), io.initiator.addr) @[Decoder.scala 36:18]
    node _T_1 = lt(io.initiator.addr, UInt<14>("h2000")) @[Decoder.scala 36:60]
    node _T_2 = and(_T, _T_1) @[Decoder.scala 36:39]
    when _T_2 : @[Decoder.scala 36:83]
      node _addr_T = sub(io.initiator.addr, UInt<1>("h0")) @[Decoder.scala 37:33]
      node _addr_T_1 = tail(_addr_T, 1) @[Decoder.scala 37:33]
      addr <= _addr_T_1 @[Decoder.scala 37:12]
      ren <= io.initiator.ren @[Decoder.scala 38:11]
      rvalid <= io.targets[0].rvalid @[Decoder.scala 39:14]
      rdata <= io.targets[0].rdata @[Decoder.scala 40:13]
      wen <= io.initiator.wen @[Decoder.scala 41:11]
      wdata <= io.initiator.wdata @[Decoder.scala 42:13]
      wstrb <= io.initiator.wstrb @[Decoder.scala 43:13]
    wire addr_1 : UInt<32>
    addr_1 <= UInt<32>("h0")
    wire ren_1 : UInt<1>
    ren_1 <= UInt<1>("h0")
    wire wen_1 : UInt<1>
    wen_1 <= UInt<1>("h0")
    wire wdata_1 : UInt<32>
    wdata_1 <= UInt<32>("hdeadbeef")
    wire wstrb_1 : UInt<4>
    wstrb_1 <= UInt<4>("hf")
    io.targets[1].addr <= addr_1 @[Decoder.scala 30:17]
    io.targets[1].ren <= ren_1 @[Decoder.scala 31:16]
    io.targets[1].wen <= wen_1 @[Decoder.scala 32:16]
    io.targets[1].wdata <= wdata_1 @[Decoder.scala 33:18]
    io.targets[1].wstrb <= wstrb_1 @[Decoder.scala 34:18]
    node _T_3 = leq(UInt<32>("ha0000000"), io.initiator.addr) @[Decoder.scala 36:18]
    node _T_4 = lt(io.initiator.addr, UInt<32>("ha0000060")) @[Decoder.scala 36:60]
    node _T_5 = and(_T_3, _T_4) @[Decoder.scala 36:39]
    when _T_5 : @[Decoder.scala 36:83]
      node _addr_T_2 = sub(io.initiator.addr, UInt<32>("ha0000000")) @[Decoder.scala 37:33]
      node _addr_T_3 = tail(_addr_T_2, 1) @[Decoder.scala 37:33]
      addr_1 <= _addr_T_3 @[Decoder.scala 37:12]
      ren_1 <= io.initiator.ren @[Decoder.scala 38:11]
      rvalid <= io.targets[1].rvalid @[Decoder.scala 39:14]
      rdata <= io.targets[1].rdata @[Decoder.scala 40:13]
      wen_1 <= io.initiator.wen @[Decoder.scala 41:11]
      wdata_1 <= io.initiator.wdata @[Decoder.scala 42:13]
      wstrb_1 <= io.initiator.wstrb @[Decoder.scala 43:13]
    wire addr_2 : UInt<32>
    addr_2 <= UInt<32>("h0")
    wire ren_2 : UInt<1>
    ren_2 <= UInt<1>("h0")
    wire wen_2 : UInt<1>
    wen_2 <= UInt<1>("h0")
    wire wdata_2 : UInt<32>
    wdata_2 <= UInt<32>("hdeadbeef")
    wire wstrb_2 : UInt<4>
    wstrb_2 <= UInt<4>("hf")
    io.targets[2].addr <= addr_2 @[Decoder.scala 30:17]
    io.targets[2].ren <= ren_2 @[Decoder.scala 31:16]
    io.targets[2].wen <= wen_2 @[Decoder.scala 32:16]
    io.targets[2].wdata <= wdata_2 @[Decoder.scala 33:18]
    io.targets[2].wstrb <= wstrb_2 @[Decoder.scala 34:18]
    node _T_6 = leq(UInt<32>("ha0001000"), io.initiator.addr) @[Decoder.scala 36:18]
    node _T_7 = lt(io.initiator.addr, UInt<32>("ha0001008")) @[Decoder.scala 36:60]
    node _T_8 = and(_T_6, _T_7) @[Decoder.scala 36:39]
    when _T_8 : @[Decoder.scala 36:83]
      node _addr_T_4 = sub(io.initiator.addr, UInt<32>("ha0001000")) @[Decoder.scala 37:33]
      node _addr_T_5 = tail(_addr_T_4, 1) @[Decoder.scala 37:33]
      addr_2 <= _addr_T_5 @[Decoder.scala 37:12]
      ren_2 <= io.initiator.ren @[Decoder.scala 38:11]
      rvalid <= io.targets[2].rvalid @[Decoder.scala 39:14]
      rdata <= io.targets[2].rdata @[Decoder.scala 40:13]
      wen_2 <= io.initiator.wen @[Decoder.scala 41:11]
      wdata_2 <= io.initiator.wdata @[Decoder.scala 42:13]
      wstrb_2 <= io.initiator.wstrb @[Decoder.scala 43:13]

  module SegmentLedWithShiftRegs :
    input clock : Clock
    input reset : Reset
    output io : { segmentOut : { outputEnable : UInt<1>, shiftClock : UInt<1>, latch : UInt<1>, data : UInt<1>}, digitSelector : { outputEnable : UInt<1>, shiftClock : UInt<1>, latch : UInt<1>, data : UInt<1>}, flip digits : UInt<8>[6]}

    reg segmentUpdateCounter : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[multi_segment_led.scala 32:39]
    node outputEnableLogic1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[multi_segment_led.scala 35:30]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[multi_segment_led.scala 40:24]
    reg digitIndex : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[multi_segment_led.scala 41:29]
    reg segmentCounter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[multi_segment_led.scala 42:33]
    reg shiftClockCounter : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[multi_segment_led.scala 43:36]
    reg segmentShiftReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[multi_segment_led.scala 44:34]
    node _segmentOutputEnable_T = eq(outputEnableLogic1, UInt<1>("h0")) @[multi_segment_led.scala 46:39]
    reg segmentOutputEnable : UInt<1>, clock with :
      reset => (reset, _segmentOutputEnable_T) @[multi_segment_led.scala 46:38]
    reg segmentShiftClock : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[multi_segment_led.scala 47:36]
    reg segmentLatch : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[multi_segment_led.scala 48:31]
    node _segmentData_T = eq(UInt<1>("h1"), UInt<1>("h0")) @[multi_segment_led.scala 49:31]
    reg segmentData : UInt<1>, clock with :
      reset => (reset, _segmentData_T) @[multi_segment_led.scala 49:30]
    node _digitOutputEnable_T = eq(outputEnableLogic1, UInt<1>("h0")) @[multi_segment_led.scala 50:37]
    reg digitOutputEnable : UInt<1>, clock with :
      reset => (reset, _digitOutputEnable_T) @[multi_segment_led.scala 50:36]
    reg digitShiftClock : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[multi_segment_led.scala 51:34]
    reg digitLatch : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[multi_segment_led.scala 52:29]
    node _digitData_T = eq(UInt<1>("h1"), UInt<1>("h0")) @[multi_segment_led.scala 53:29]
    reg digitData : UInt<1>, clock with :
      reset => (reset, _digitData_T) @[multi_segment_led.scala 53:28]
    io.segmentOut.outputEnable <= segmentOutputEnable @[multi_segment_led.scala 55:32]
    io.segmentOut.shiftClock <= segmentShiftClock @[multi_segment_led.scala 56:30]
    io.segmentOut.latch <= segmentLatch @[multi_segment_led.scala 57:25]
    io.segmentOut.data <= segmentData @[multi_segment_led.scala 58:24]
    io.digitSelector.outputEnable <= digitOutputEnable @[multi_segment_led.scala 59:35]
    io.digitSelector.shiftClock <= digitShiftClock @[multi_segment_led.scala 60:33]
    io.digitSelector.latch <= digitLatch @[multi_segment_led.scala 61:28]
    io.digitSelector.data <= digitData @[multi_segment_led.scala 62:27]
    node _T = asUInt(UInt<1>("h0")) @[multi_segment_led.scala 64:19]
    node _T_1 = asUInt(state) @[multi_segment_led.scala 64:19]
    node _T_2 = eq(_T, _T_1) @[multi_segment_led.scala 64:19]
    when _T_2 : @[multi_segment_led.scala 64:19]
      digitIndex <= UInt<1>("h0") @[multi_segment_led.scala 66:24]
      segmentCounter <= UInt<1>("h0") @[multi_segment_led.scala 67:28]
      shiftClockCounter <= UInt<1>("h0") @[multi_segment_led.scala 68:31]
      segmentLatch <= UInt<1>("h0") @[multi_segment_led.scala 69:26]
      digitLatch <= UInt<1>("h0") @[multi_segment_led.scala 70:24]
      node _digitOutputEnable_T_1 = eq(outputEnableLogic1, UInt<1>("h0")) @[multi_segment_led.scala 71:34]
      digitOutputEnable <= _digitOutputEnable_T_1 @[multi_segment_led.scala 71:31]
      node _segmentOutputEnable_T_1 = eq(outputEnableLogic1, UInt<1>("h0")) @[multi_segment_led.scala 72:36]
      segmentOutputEnable <= _segmentOutputEnable_T_1 @[multi_segment_led.scala 72:33]
      state <= UInt<1>("h1") @[multi_segment_led.scala 73:19]
    else :
      node _T_3 = asUInt(UInt<1>("h1")) @[multi_segment_led.scala 64:19]
      node _T_4 = asUInt(state) @[multi_segment_led.scala 64:19]
      node _T_5 = eq(_T_3, _T_4) @[multi_segment_led.scala 64:19]
      when _T_5 : @[multi_segment_led.scala 64:19]
        digitLatch <= UInt<1>("h0") @[multi_segment_led.scala 77:24]
        segmentLatch <= UInt<1>("h0") @[multi_segment_led.scala 78:26]
        node _digitData_T_1 = eq(digitIndex, UInt<1>("h0")) @[multi_segment_led.scala 81:41]
        node _digitData_T_2 = eq(UInt<1>("h0"), UInt<1>("h0")) @[multi_segment_led.scala 81:63]
        node _digitData_T_3 = mux(_digitData_T_1, UInt<1>("h0"), _digitData_T_2) @[multi_segment_led.scala 81:29]
        digitData <= _digitData_T_3 @[multi_segment_led.scala 81:23]
        digitShiftClock <= UInt<1>("h0") @[multi_segment_led.scala 82:29]
        shiftClockCounter <= UInt<2>("h2") @[multi_segment_led.scala 83:31]
        segmentShiftReg <= io.digits[digitIndex] @[multi_segment_led.scala 84:29]
        segmentCounter <= UInt<3>("h7") @[multi_segment_led.scala 85:28]
        state <= UInt<2>("h2") @[multi_segment_led.scala 86:19]
        node _digitIndex_T = eq(digitIndex, UInt<3>("h5")) @[multi_segment_led.scala 89:42]
        node _digitIndex_T_1 = add(digitIndex, UInt<1>("h1")) @[multi_segment_led.scala 89:86]
        node _digitIndex_T_2 = tail(_digitIndex_T_1, 1) @[multi_segment_led.scala 89:86]
        node _digitIndex_T_3 = mux(_digitIndex_T, UInt<1>("h0"), _digitIndex_T_2) @[multi_segment_led.scala 89:30]
        digitIndex <= _digitIndex_T_3 @[multi_segment_led.scala 89:24]
      else :
        node _T_6 = asUInt(UInt<2>("h2")) @[multi_segment_led.scala 64:19]
        node _T_7 = asUInt(state) @[multi_segment_led.scala 64:19]
        node _T_8 = eq(_T_6, _T_7) @[multi_segment_led.scala 64:19]
        when _T_8 : @[multi_segment_led.scala 64:19]
          node _T_9 = eq(shiftClockCounter, UInt<1>("h0")) @[multi_segment_led.scala 92:37]
          when _T_9 : @[multi_segment_led.scala 92:47]
            node _digitShiftClock_T = eq(digitShiftClock, UInt<1>("h0")) @[multi_segment_led.scala 93:36]
            digitShiftClock <= _digitShiftClock_T @[multi_segment_led.scala 93:33]
            shiftClockCounter <= UInt<2>("h2") @[multi_segment_led.scala 94:35]
            when digitShiftClock : @[multi_segment_led.scala 95:41]
              state <= UInt<2>("h3") @[multi_segment_led.scala 96:27]
          else :
            node _shiftClockCounter_T = sub(shiftClockCounter, UInt<1>("h1")) @[multi_segment_led.scala 99:56]
            node _shiftClockCounter_T_1 = tail(_shiftClockCounter_T, 1) @[multi_segment_led.scala 99:56]
            shiftClockCounter <= _shiftClockCounter_T_1 @[multi_segment_led.scala 99:35]
        else :
          node _T_10 = asUInt(UInt<2>("h3")) @[multi_segment_led.scala 64:19]
          node _T_11 = asUInt(state) @[multi_segment_led.scala 64:19]
          node _T_12 = eq(_T_10, _T_11) @[multi_segment_led.scala 64:19]
          when _T_12 : @[multi_segment_led.scala 64:19]
            node _segmentData_T_1 = bits(segmentShiftReg, 7, 7) @[multi_segment_led.scala 103:47]
            node _segmentData_T_2 = eq(UInt<1>("h1"), UInt<1>("h0")) @[multi_segment_led.scala 103:86]
            node _segmentData_T_3 = mux(_segmentData_T_1, UInt<1>("h1"), _segmentData_T_2) @[multi_segment_led.scala 103:31]
            segmentData <= _segmentData_T_3 @[multi_segment_led.scala 103:25]
            node _segmentShiftReg_T = bits(segmentShiftReg, 6, 0) @[multi_segment_led.scala 104:51]
            node _segmentShiftReg_T_1 = cat(_segmentShiftReg_T, UInt<1>("h0")) @[Cat.scala 33:92]
            segmentShiftReg <= _segmentShiftReg_T_1 @[multi_segment_led.scala 104:29]
            segmentShiftClock <= UInt<1>("h0") @[multi_segment_led.scala 105:31]
            shiftClockCounter <= UInt<2>("h2") @[multi_segment_led.scala 106:31]
            state <= UInt<3>("h4") @[multi_segment_led.scala 107:19]
          else :
            node _T_13 = asUInt(UInt<3>("h4")) @[multi_segment_led.scala 64:19]
            node _T_14 = asUInt(state) @[multi_segment_led.scala 64:19]
            node _T_15 = eq(_T_13, _T_14) @[multi_segment_led.scala 64:19]
            when _T_15 : @[multi_segment_led.scala 64:19]
              node _T_16 = eq(shiftClockCounter, UInt<1>("h0")) @[multi_segment_led.scala 110:37]
              when _T_16 : @[multi_segment_led.scala 110:47]
                node _segmentShiftClock_T = eq(segmentShiftClock, UInt<1>("h0")) @[multi_segment_led.scala 111:38]
                segmentShiftClock <= _segmentShiftClock_T @[multi_segment_led.scala 111:35]
                shiftClockCounter <= UInt<2>("h2") @[multi_segment_led.scala 112:35]
                when segmentShiftClock : @[multi_segment_led.scala 113:43]
                  node _T_17 = eq(segmentCounter, UInt<1>("h0")) @[multi_segment_led.scala 114:42]
                  when _T_17 : @[multi_segment_led.scala 114:52]
                    state <= UInt<3>("h5") @[multi_segment_led.scala 115:31]
                  else :
                    node _segmentCounter_T = sub(segmentCounter, UInt<1>("h1")) @[multi_segment_led.scala 117:58]
                    node _segmentCounter_T_1 = tail(_segmentCounter_T, 1) @[multi_segment_led.scala 117:58]
                    segmentCounter <= _segmentCounter_T_1 @[multi_segment_led.scala 117:40]
                    state <= UInt<2>("h3") @[multi_segment_led.scala 118:31]
              else :
                node _shiftClockCounter_T_2 = sub(shiftClockCounter, UInt<1>("h1")) @[multi_segment_led.scala 122:56]
                node _shiftClockCounter_T_3 = tail(_shiftClockCounter_T_2, 1) @[multi_segment_led.scala 122:56]
                shiftClockCounter <= _shiftClockCounter_T_3 @[multi_segment_led.scala 122:35]
            else :
              node _T_18 = asUInt(UInt<3>("h5")) @[multi_segment_led.scala 64:19]
              node _T_19 = asUInt(state) @[multi_segment_led.scala 64:19]
              node _T_20 = eq(_T_18, _T_19) @[multi_segment_led.scala 64:19]
              when _T_20 : @[multi_segment_led.scala 64:19]
                digitLatch <= UInt<1>("h1") @[multi_segment_led.scala 127:24]
                segmentLatch <= UInt<1>("h1") @[multi_segment_led.scala 128:26]
                digitOutputEnable <= outputEnableLogic1 @[multi_segment_led.scala 129:31]
                segmentOutputEnable <= outputEnableLogic1 @[multi_segment_led.scala 130:33]
                segmentUpdateCounter <= UInt<12>("ha8c") @[multi_segment_led.scala 131:34]
                state <= UInt<3>("h6") @[multi_segment_led.scala 132:19]
              else :
                node _T_21 = asUInt(UInt<3>("h6")) @[multi_segment_led.scala 64:19]
                node _T_22 = asUInt(state) @[multi_segment_led.scala 64:19]
                node _T_23 = eq(_T_21, _T_22) @[multi_segment_led.scala 64:19]
                when _T_23 : @[multi_segment_led.scala 64:19]
                  node _T_24 = eq(segmentUpdateCounter, UInt<1>("h0")) @[multi_segment_led.scala 136:41]
                  when _T_24 : @[multi_segment_led.scala 136:51]
                    state <= UInt<1>("h1") @[multi_segment_led.scala 137:23]
                  else :
                    node _segmentUpdateCounter_T = sub(segmentUpdateCounter, UInt<1>("h1")) @[multi_segment_led.scala 139:62]
                    node _segmentUpdateCounter_T_1 = tail(_segmentUpdateCounter_T, 1) @[multi_segment_led.scala 139:62]
                    segmentUpdateCounter <= _segmentUpdateCounter_T_1 @[multi_segment_led.scala 139:38]

  module MatrixLed :
    input clock : Clock
    input reset : Reset
    output io : { row : UInt<8>, column : UInt<8>, flip matrix : UInt<8>[8]}

    reg refreshCounter : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[matrix_led.scala 21:33]
    reg rowReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h1")) @[matrix_led.scala 22:25]
    wire rowEnable : UInt<1>
    rowEnable <= UInt<1>("h1")
    node _io_row_T = mux(rowEnable, rowReg, UInt<8>("h0")) @[matrix_led.scala 25:18]
    io.row <= _io_row_T @[matrix_led.scala 25:12]
    node _io_column_T = shl(UInt<1>("h1"), 0) @[matrix_led.scala 26:81]
    node _io_column_T_1 = eq(rowReg, _io_column_T) @[matrix_led.scala 26:72]
    node _io_column_T_2 = shl(UInt<1>("h1"), 1) @[matrix_led.scala 26:81]
    node _io_column_T_3 = eq(rowReg, _io_column_T_2) @[matrix_led.scala 26:72]
    node _io_column_T_4 = shl(UInt<1>("h1"), 2) @[matrix_led.scala 26:81]
    node _io_column_T_5 = eq(rowReg, _io_column_T_4) @[matrix_led.scala 26:72]
    node _io_column_T_6 = shl(UInt<1>("h1"), 3) @[matrix_led.scala 26:81]
    node _io_column_T_7 = eq(rowReg, _io_column_T_6) @[matrix_led.scala 26:72]
    node _io_column_T_8 = shl(UInt<1>("h1"), 4) @[matrix_led.scala 26:81]
    node _io_column_T_9 = eq(rowReg, _io_column_T_8) @[matrix_led.scala 26:72]
    node _io_column_T_10 = shl(UInt<1>("h1"), 5) @[matrix_led.scala 26:81]
    node _io_column_T_11 = eq(rowReg, _io_column_T_10) @[matrix_led.scala 26:72]
    node _io_column_T_12 = shl(UInt<1>("h1"), 6) @[matrix_led.scala 26:81]
    node _io_column_T_13 = eq(rowReg, _io_column_T_12) @[matrix_led.scala 26:72]
    node _io_column_T_14 = shl(UInt<1>("h1"), 7) @[matrix_led.scala 26:81]
    node _io_column_T_15 = eq(rowReg, _io_column_T_14) @[matrix_led.scala 26:72]
    node _io_column_T_16 = mux(_io_column_T_15, io.matrix[7], UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_column_T_17 = mux(_io_column_T_13, io.matrix[6], _io_column_T_16) @[Mux.scala 101:16]
    node _io_column_T_18 = mux(_io_column_T_11, io.matrix[5], _io_column_T_17) @[Mux.scala 101:16]
    node _io_column_T_19 = mux(_io_column_T_9, io.matrix[4], _io_column_T_18) @[Mux.scala 101:16]
    node _io_column_T_20 = mux(_io_column_T_7, io.matrix[3], _io_column_T_19) @[Mux.scala 101:16]
    node _io_column_T_21 = mux(_io_column_T_5, io.matrix[2], _io_column_T_20) @[Mux.scala 101:16]
    node _io_column_T_22 = mux(_io_column_T_3, io.matrix[1], _io_column_T_21) @[Mux.scala 101:16]
    node _io_column_T_23 = mux(_io_column_T_1, io.matrix[0], _io_column_T_22) @[Mux.scala 101:16]
    io.column <= _io_column_T_23 @[matrix_led.scala 26:15]
    node _refreshCounter_T = add(refreshCounter, UInt<1>("h1")) @[matrix_led.scala 28:38]
    node _refreshCounter_T_1 = tail(_refreshCounter_T, 1) @[matrix_led.scala 28:38]
    refreshCounter <= _refreshCounter_T_1 @[matrix_led.scala 28:20]
    node _T = lt(refreshCounter, UInt<12>("ha77")) @[matrix_led.scala 29:26]
    when _T : @[matrix_led.scala 29:93]
      skip
    else :
      node _T_1 = eq(refreshCounter, UInt<12>("ha81")) @[matrix_led.scala 30:33]
      when _T_1 : @[matrix_led.scala 30:100]
        rowEnable <= UInt<1>("h0") @[matrix_led.scala 31:17]
        node _rowReg_T = shl(rowReg, 1) @[matrix_led.scala 32:25]
        node _rowReg_T_1 = bits(rowReg, 7, 7) @[matrix_led.scala 32:39]
        node _rowReg_T_2 = or(_rowReg_T, _rowReg_T_1) @[matrix_led.scala 32:31]
        rowReg <= _rowReg_T_2 @[matrix_led.scala 32:14]
      else :
        node _T_2 = lt(refreshCounter, UInt<12>("ha8b")) @[matrix_led.scala 33:33]
        when _T_2 : @[matrix_led.scala 33:68]
          rowEnable <= UInt<1>("h0") @[matrix_led.scala 34:17]
        else :
          node _T_3 = eq(refreshCounter, UInt<12>("ha8b")) @[matrix_led.scala 35:33]
          when _T_3 : @[matrix_led.scala 35:70]
            refreshCounter <= UInt<1>("h0") @[matrix_led.scala 36:22]

  module UartTx :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, tx : UInt<1>}

    reg rateCounter : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[UartTx.scala 18:30]
    reg bitCounter : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[UartTx.scala 19:29]
    reg bits : UInt<1>[10], clock with :
      reset => (UInt<1>("h0"), bits) @[UartTx.scala 20:19]
    node _io_tx_T = eq(bitCounter, UInt<1>("h0")) @[UartTx.scala 22:25]
    node _io_tx_T_1 = or(_io_tx_T, bits[0]) @[UartTx.scala 22:33]
    io.tx <= _io_tx_T_1 @[UartTx.scala 22:11]
    node _io_in_ready_T = eq(bitCounter, UInt<1>("h0")) @[UartTx.scala 23:31]
    io.in.ready <= _io_in_ready_T @[UartTx.scala 23:17]
    node _T = and(io.in.valid, io.in.ready) @[UartTx.scala 25:22]
    when _T : @[UartTx.scala 25:38]
      node hi = cat(UInt<1>("h1"), io.in.bits) @[Cat.scala 33:92]
      node _T_1 = cat(hi, UInt<1>("h0")) @[Cat.scala 33:92]
      node _T_2 = bits(_T_1, 0, 0) @[UartTx.scala 26:43]
      node _T_3 = bits(_T_1, 1, 1) @[UartTx.scala 26:43]
      node _T_4 = bits(_T_1, 2, 2) @[UartTx.scala 26:43]
      node _T_5 = bits(_T_1, 3, 3) @[UartTx.scala 26:43]
      node _T_6 = bits(_T_1, 4, 4) @[UartTx.scala 26:43]
      node _T_7 = bits(_T_1, 5, 5) @[UartTx.scala 26:43]
      node _T_8 = bits(_T_1, 6, 6) @[UartTx.scala 26:43]
      node _T_9 = bits(_T_1, 7, 7) @[UartTx.scala 26:43]
      node _T_10 = bits(_T_1, 8, 8) @[UartTx.scala 26:43]
      node _T_11 = bits(_T_1, 9, 9) @[UartTx.scala 26:43]
      bits[0] <= _T_2 @[UartTx.scala 26:14]
      bits[1] <= _T_3 @[UartTx.scala 26:14]
      bits[2] <= _T_4 @[UartTx.scala 26:14]
      bits[3] <= _T_5 @[UartTx.scala 26:14]
      bits[4] <= _T_6 @[UartTx.scala 26:14]
      bits[5] <= _T_7 @[UartTx.scala 26:14]
      bits[6] <= _T_8 @[UartTx.scala 26:14]
      bits[7] <= _T_9 @[UartTx.scala 26:14]
      bits[8] <= _T_10 @[UartTx.scala 26:14]
      bits[9] <= _T_11 @[UartTx.scala 26:14]
      bitCounter <= UInt<4>("ha") @[UartTx.scala 27:20]
      rateCounter <= UInt<8>("he9") @[UartTx.scala 28:21]
    node _T_12 = gt(bitCounter, UInt<1>("h0")) @[UartTx.scala 31:22]
    when _T_12 : @[UartTx.scala 31:30]
      node _T_13 = eq(rateCounter, UInt<1>("h0")) @[UartTx.scala 32:26]
      when _T_13 : @[UartTx.scala 32:35]
        bits[0] <= bits[1] @[UartTx.scala 34:54]
        bits[1] <= bits[2] @[UartTx.scala 34:54]
        bits[2] <= bits[3] @[UartTx.scala 34:54]
        bits[3] <= bits[4] @[UartTx.scala 34:54]
        bits[4] <= bits[5] @[UartTx.scala 34:54]
        bits[5] <= bits[6] @[UartTx.scala 34:54]
        bits[6] <= bits[7] @[UartTx.scala 34:54]
        bits[7] <= bits[8] @[UartTx.scala 34:54]
        bits[8] <= bits[9] @[UartTx.scala 34:54]
        node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[UartTx.scala 35:38]
        node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[UartTx.scala 35:38]
        bitCounter <= _bitCounter_T_1 @[UartTx.scala 35:24]
        rateCounter <= UInt<8>("he9") @[UartTx.scala 36:25]
      else :
        node _rateCounter_T = sub(rateCounter, UInt<1>("h1")) @[UartTx.scala 38:40]
        node _rateCounter_T_1 = tail(_rateCounter_T, 1) @[UartTx.scala 38:40]
        rateCounter <= _rateCounter_T_1 @[UartTx.scala 38:25]

  module UartRx :
    input clock : Clock
    input reset : Reset
    output io : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip rx : UInt<1>, overrun : UInt<1>}

    reg rateCounter : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[UartRx.scala 19:30]
    reg bitCounter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[UartRx.scala 20:29]
    reg bits : UInt<1>[8], clock with :
      reset => (UInt<1>("h0"), bits) @[UartRx.scala 21:19]
    wire _rxRegs_WIRE : UInt<1>[3] @[UartRx.scala 22:33]
    _rxRegs_WIRE[0] <= UInt<1>("h0") @[UartRx.scala 22:33]
    _rxRegs_WIRE[1] <= UInt<1>("h0") @[UartRx.scala 22:33]
    _rxRegs_WIRE[2] <= UInt<1>("h0") @[UartRx.scala 22:33]
    reg rxRegs : UInt<1>[3], clock with :
      reset => (reset, _rxRegs_WIRE) @[UartRx.scala 22:25]
    reg overrun : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[UartRx.scala 23:26]
    reg running : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[UartRx.scala 24:26]
    reg outValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[UartRx.scala 26:27]
    reg outBits : UInt<8>, clock with :
      reset => (UInt<1>("h0"), outBits) @[UartRx.scala 27:22]
    wire outReady : UInt<1>
    outReady <= io.out.ready
    io.out.valid <= outValid @[UartRx.scala 29:18]
    io.out.bits <= outBits @[UartRx.scala 30:17]
    node _T = and(outValid, outReady) @[UartRx.scala 32:19]
    when _T : @[UartRx.scala 32:32]
      outValid <= UInt<1>("h0") @[UartRx.scala 33:18]
    rxRegs[2] <= io.rx @[UartRx.scala 37:26]
    rxRegs[0] <= rxRegs[1] @[UartRx.scala 38:52]
    rxRegs[1] <= rxRegs[2] @[UartRx.scala 38:52]
    io.overrun <= overrun @[UartRx.scala 40:16]
    node _T_1 = eq(running, UInt<1>("h0")) @[UartRx.scala 42:10]
    when _T_1 : @[UartRx.scala 42:20]
      node _T_2 = eq(rxRegs[1], UInt<1>("h0")) @[UartRx.scala 43:14]
      node _T_3 = and(_T_2, rxRegs[0]) @[UartRx.scala 43:25]
      when _T_3 : @[UartRx.scala 43:39]
        rateCounter <= UInt<9>("h15e") @[UartRx.scala 44:25]
        bitCounter <= UInt<3>("h7") @[UartRx.scala 45:24]
        running <= UInt<1>("h1") @[UartRx.scala 46:21]
    else :
      node _T_4 = eq(rateCounter, UInt<1>("h0")) @[UartRx.scala 49:26]
      when _T_4 : @[UartRx.scala 49:35]
        bits[7] <= rxRegs[0] @[UartRx.scala 50:34]
        bits[0] <= bits[1] @[UartRx.scala 51:58]
        bits[1] <= bits[2] @[UartRx.scala 51:58]
        bits[2] <= bits[3] @[UartRx.scala 51:58]
        bits[3] <= bits[4] @[UartRx.scala 51:58]
        bits[4] <= bits[5] @[UartRx.scala 51:58]
        bits[5] <= bits[6] @[UartRx.scala 51:58]
        bits[6] <= bits[7] @[UartRx.scala 51:58]
        node _T_5 = eq(bitCounter, UInt<1>("h0")) @[UartRx.scala 52:29]
        when _T_5 : @[UartRx.scala 52:38]
          outValid <= UInt<1>("h1") @[UartRx.scala 53:26]
          node outBits_lo_hi = cat(bits[3], bits[2]) @[Cat.scala 33:92]
          node outBits_lo = cat(outBits_lo_hi, bits[1]) @[Cat.scala 33:92]
          node outBits_hi_lo = cat(bits[5], bits[4]) @[Cat.scala 33:92]
          node outBits_hi_hi = cat(bits[7], bits[6]) @[Cat.scala 33:92]
          node outBits_hi = cat(outBits_hi_hi, outBits_hi_lo) @[Cat.scala 33:92]
          node _outBits_T = cat(outBits_hi, outBits_lo) @[Cat.scala 33:92]
          node _outBits_T_1 = cat(rxRegs[0], _outBits_T) @[Cat.scala 33:92]
          outBits <= _outBits_T_1 @[UartRx.scala 54:25]
          overrun <= outValid @[UartRx.scala 55:25]
          running <= UInt<1>("h0") @[UartRx.scala 56:25]
        else :
          rateCounter <= UInt<8>("he9") @[UartRx.scala 58:29]
          node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[UartRx.scala 59:42]
          node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[UartRx.scala 59:42]
          bitCounter <= _bitCounter_T_1 @[UartRx.scala 59:28]
      else :
        node _rateCounter_T = sub(rateCounter, UInt<1>("h1")) @[UartRx.scala 62:40]
        node _rateCounter_T_1 = tail(_rateCounter_T, 1) @[UartRx.scala 62:40]
        rateCounter <= _rateCounter_T_1 @[UartRx.scala 62:25]

  module Queue :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, count : UInt<5>}

    cmem ram : UInt<8> [16] @[Decoupled.scala 275:95]
    reg enq_ptr_value : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 61:40]
    reg deq_ptr_value : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 61:40]
    reg maybe_full : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Decoupled.scala 278:27]
    node ptr_match = eq(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 279:33]
    node _empty_T = eq(maybe_full, UInt<1>("h0")) @[Decoupled.scala 280:28]
    node empty = and(ptr_match, _empty_T) @[Decoupled.scala 280:25]
    node full = and(ptr_match, maybe_full) @[Decoupled.scala 281:24]
    node _do_enq_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 52:35]
    wire do_enq : UInt<1>
    do_enq <= _do_enq_T
    node _do_deq_T = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 52:35]
    wire do_deq : UInt<1>
    do_deq <= _do_deq_T
    when do_enq : @[Decoupled.scala 288:16]
      infer mport MPORT = ram[enq_ptr_value], clock @[Decoupled.scala 289:8]
      MPORT <= io.enq.bits @[Decoupled.scala 289:24]
      node wrap = eq(enq_ptr_value, UInt<4>("hf")) @[Counter.scala 73:24]
      node _value_T = add(enq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_1 = tail(_value_T, 1) @[Counter.scala 77:24]
      enq_ptr_value <= _value_T_1 @[Counter.scala 77:15]
    when do_deq : @[Decoupled.scala 292:16]
      node wrap_1 = eq(deq_ptr_value, UInt<4>("hf")) @[Counter.scala 73:24]
      node _value_T_2 = add(deq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_3 = tail(_value_T_2, 1) @[Counter.scala 77:24]
      deq_ptr_value <= _value_T_3 @[Counter.scala 77:15]
    node _T = neq(do_enq, do_deq) @[Decoupled.scala 295:15]
    when _T : @[Decoupled.scala 295:27]
      maybe_full <= do_enq @[Decoupled.scala 296:16]
    when UInt<1>("h0") : @[Decoupled.scala 298:15]
      enq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      deq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      maybe_full <= UInt<1>("h0") @[Decoupled.scala 301:16]
    node _io_deq_valid_T = eq(empty, UInt<1>("h0")) @[Decoupled.scala 304:19]
    io.deq.valid <= _io_deq_valid_T @[Decoupled.scala 304:16]
    node _io_enq_ready_T = eq(full, UInt<1>("h0")) @[Decoupled.scala 305:19]
    io.enq.ready <= _io_enq_ready_T @[Decoupled.scala 305:16]
    infer mport io_deq_bits_MPORT = ram[deq_ptr_value], clock @[Decoupled.scala 312:23]
    io.deq.bits <= io_deq_bits_MPORT @[Decoupled.scala 312:17]
    node _ptr_diff_T = sub(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 328:32]
    node ptr_diff = tail(_ptr_diff_T, 1) @[Decoupled.scala 328:32]
    node _io_count_T = and(maybe_full, ptr_match) @[Decoupled.scala 331:32]
    node _io_count_T_1 = mux(_io_count_T, UInt<5>("h10"), UInt<1>("h0")) @[Decoupled.scala 331:20]
    node _io_count_T_2 = or(_io_count_T_1, ptr_diff) @[Decoupled.scala 331:62]
    io.count <= _io_count_T_2 @[Decoupled.scala 331:14]

  module Queue_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, count : UInt<5>}

    cmem ram : UInt<8> [16] @[Decoupled.scala 275:95]
    reg enq_ptr_value : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 61:40]
    reg deq_ptr_value : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Counter.scala 61:40]
    reg maybe_full : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Decoupled.scala 278:27]
    node ptr_match = eq(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 279:33]
    node _empty_T = eq(maybe_full, UInt<1>("h0")) @[Decoupled.scala 280:28]
    node empty = and(ptr_match, _empty_T) @[Decoupled.scala 280:25]
    node full = and(ptr_match, maybe_full) @[Decoupled.scala 281:24]
    node _do_enq_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 52:35]
    wire do_enq : UInt<1>
    do_enq <= _do_enq_T
    node _do_deq_T = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 52:35]
    wire do_deq : UInt<1>
    do_deq <= _do_deq_T
    when do_enq : @[Decoupled.scala 288:16]
      infer mport MPORT = ram[enq_ptr_value], clock @[Decoupled.scala 289:8]
      MPORT <= io.enq.bits @[Decoupled.scala 289:24]
      node wrap = eq(enq_ptr_value, UInt<4>("hf")) @[Counter.scala 73:24]
      node _value_T = add(enq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_1 = tail(_value_T, 1) @[Counter.scala 77:24]
      enq_ptr_value <= _value_T_1 @[Counter.scala 77:15]
    when do_deq : @[Decoupled.scala 292:16]
      node wrap_1 = eq(deq_ptr_value, UInt<4>("hf")) @[Counter.scala 73:24]
      node _value_T_2 = add(deq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_3 = tail(_value_T_2, 1) @[Counter.scala 77:24]
      deq_ptr_value <= _value_T_3 @[Counter.scala 77:15]
    node _T = neq(do_enq, do_deq) @[Decoupled.scala 295:15]
    when _T : @[Decoupled.scala 295:27]
      maybe_full <= do_enq @[Decoupled.scala 296:16]
    when UInt<1>("h0") : @[Decoupled.scala 298:15]
      enq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      deq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      maybe_full <= UInt<1>("h0") @[Decoupled.scala 301:16]
    node _io_deq_valid_T = eq(empty, UInt<1>("h0")) @[Decoupled.scala 304:19]
    io.deq.valid <= _io_deq_valid_T @[Decoupled.scala 304:16]
    node _io_enq_ready_T = eq(full, UInt<1>("h0")) @[Decoupled.scala 305:19]
    io.enq.ready <= _io_enq_ready_T @[Decoupled.scala 305:16]
    infer mport io_deq_bits_MPORT = ram[deq_ptr_value], clock @[Decoupled.scala 312:23]
    io.deq.bits <= io_deq_bits_MPORT @[Decoupled.scala 312:17]
    node _ptr_diff_T = sub(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 328:32]
    node ptr_diff = tail(_ptr_diff_T, 1) @[Decoupled.scala 328:32]
    node _io_count_T = and(maybe_full, ptr_match) @[Decoupled.scala 331:32]
    node _io_count_T_1 = mux(_io_count_T, UInt<5>("h10"), UInt<1>("h0")) @[Decoupled.scala 331:20]
    node _io_count_T_2 = or(_io_count_T_1, ptr_diff) @[Decoupled.scala 331:62]
    io.count <= _io_count_T_2 @[Decoupled.scala 331:14]

  module Queue_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<33>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<33>}, count : UInt<10>, flip flush : UInt<1>}

    smem ram : UInt<33> [512] @[Decoupled.scala 275:44]
    reg enq_ptr_value : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[Counter.scala 61:40]
    reg deq_ptr_value : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[Counter.scala 61:40]
    reg maybe_full : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Decoupled.scala 278:27]
    node ptr_match = eq(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 279:33]
    node _empty_T = eq(maybe_full, UInt<1>("h0")) @[Decoupled.scala 280:28]
    node empty = and(ptr_match, _empty_T) @[Decoupled.scala 280:25]
    node full = and(ptr_match, maybe_full) @[Decoupled.scala 281:24]
    node _do_enq_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 52:35]
    wire do_enq : UInt<1>
    do_enq <= _do_enq_T
    node _do_deq_T = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 52:35]
    wire do_deq : UInt<1>
    do_deq <= _do_deq_T
    when do_enq : @[Decoupled.scala 288:16]
      infer mport MPORT = ram[enq_ptr_value], clock @[Decoupled.scala 289:8]
      MPORT <= io.enq.bits @[Decoupled.scala 289:24]
      node wrap = eq(enq_ptr_value, UInt<9>("h1ff")) @[Counter.scala 73:24]
      node _value_T = add(enq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_1 = tail(_value_T, 1) @[Counter.scala 77:24]
      enq_ptr_value <= _value_T_1 @[Counter.scala 77:15]
    when do_deq : @[Decoupled.scala 292:16]
      node wrap_1 = eq(deq_ptr_value, UInt<9>("h1ff")) @[Counter.scala 73:24]
      node _value_T_2 = add(deq_ptr_value, UInt<1>("h1")) @[Counter.scala 77:24]
      node _value_T_3 = tail(_value_T_2, 1) @[Counter.scala 77:24]
      deq_ptr_value <= _value_T_3 @[Counter.scala 77:15]
    node _T = neq(do_enq, do_deq) @[Decoupled.scala 295:15]
    when _T : @[Decoupled.scala 295:27]
      maybe_full <= do_enq @[Decoupled.scala 296:16]
    when io.flush : @[Decoupled.scala 298:15]
      enq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      deq_ptr_value <= UInt<1>("h0") @[Counter.scala 98:11]
      maybe_full <= UInt<1>("h0") @[Decoupled.scala 301:16]
    node _io_deq_valid_T = eq(empty, UInt<1>("h0")) @[Decoupled.scala 304:19]
    io.deq.valid <= _io_deq_valid_T @[Decoupled.scala 304:16]
    node _io_enq_ready_T = eq(full, UInt<1>("h0")) @[Decoupled.scala 305:19]
    io.enq.ready <= _io_enq_ready_T @[Decoupled.scala 305:16]
    node _deq_ptr_next_T = sub(UInt<10>("h200"), UInt<1>("h1")) @[Decoupled.scala 308:57]
    node _deq_ptr_next_T_1 = tail(_deq_ptr_next_T, 1) @[Decoupled.scala 308:57]
    node _deq_ptr_next_T_2 = eq(deq_ptr_value, _deq_ptr_next_T_1) @[Decoupled.scala 308:42]
    node _deq_ptr_next_T_3 = add(deq_ptr_value, UInt<1>("h1")) @[Decoupled.scala 308:84]
    node _deq_ptr_next_T_4 = tail(_deq_ptr_next_T_3, 1) @[Decoupled.scala 308:84]
    node deq_ptr_next = mux(_deq_ptr_next_T_2, UInt<1>("h0"), _deq_ptr_next_T_4) @[Decoupled.scala 308:27]
    node _r_addr_T = mux(do_deq, deq_ptr_next, deq_ptr_value) @[Decoupled.scala 309:33]
    wire r_addr : UInt
    r_addr <= _r_addr_T
    wire _io_deq_bits_WIRE : UInt @[Decoupled.scala 310:28]
    _io_deq_bits_WIRE is invalid @[Decoupled.scala 310:28]
    when UInt<1>("h1") : @[Decoupled.scala 310:28]
      _io_deq_bits_WIRE <= r_addr @[Decoupled.scala 310:28]
      node _io_deq_bits_T = or(_io_deq_bits_WIRE, UInt<9>("h0")) @[Decoupled.scala 310:28]
      node _io_deq_bits_T_1 = bits(_io_deq_bits_T, 8, 0) @[Decoupled.scala 310:28]
      read mport io_deq_bits_MPORT = ram[_io_deq_bits_T_1], clock @[Decoupled.scala 310:28]
    io.deq.bits <= io_deq_bits_MPORT @[Decoupled.scala 310:17]
    node _ptr_diff_T = sub(enq_ptr_value, deq_ptr_value) @[Decoupled.scala 328:32]
    node ptr_diff = tail(_ptr_diff_T, 1) @[Decoupled.scala 328:32]
    node _io_count_T = and(maybe_full, ptr_match) @[Decoupled.scala 331:32]
    node _io_count_T_1 = mux(_io_count_T, UInt<10>("h200"), UInt<1>("h0")) @[Decoupled.scala 331:20]
    node _io_count_T_2 = or(_io_count_T_1, ptr_diff) @[Decoupled.scala 331:62]
    io.count <= _io_count_T_2 @[Decoupled.scala 331:14]

  module Probe :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<33>, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<33>, last : UInt<1>}}, flip trigger : UInt<1>, triggered : UInt<1>}

    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 56:24]
    node _flushBuffer_T = eq(state, UInt<1>("h0")) @[probe.scala 57:41]
    wire flushBuffer : UInt<1>
    flushBuffer <= _flushBuffer_T
    wire in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<33>} @[probe.scala 59:18]
    in.valid <= UInt<1>("h0") @[probe.scala 60:14]
    in.bits <= io.in @[probe.scala 61:13]
    inst buffer of Queue_2 @[Decoupled.scala 377:21]
    buffer.clock <= clock
    buffer.reset <= reset
    buffer.io.flush <= flushBuffer @[Decoupled.scala 378:47]
    buffer.io.enq.valid <= in.valid @[Decoupled.scala 379:22]
    buffer.io.enq.bits <= in.bits @[Decoupled.scala 380:21]
    in.ready <= buffer.io.enq.ready @[Decoupled.scala 381:17]
    wire triggerPosition : UInt<512>
    triggerPosition <= UInt<512>("h1f0")
    reg triggerCount : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[probe.scala 65:31]
    wire bufferReady : UInt<1>
    bufferReady <= UInt<1>("h0")
    buffer.io.deq.ready <= bufferReady @[probe.scala 68:18]
    reg outValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 69:27]
    reg outData : UInt<33>, clock with :
      reset => (reset, UInt<33>("h0")) @[probe.scala 70:26]
    wire outLast : UInt<1>
    outLast <= UInt<1>("h0")
    io.out.valid <= outValid @[probe.scala 73:18]
    io.out.bits.data <= outData @[probe.scala 74:22]
    io.out.bits.last <= outLast @[probe.scala 75:22]
    wire triggered : UInt<1>
    triggered <= UInt<1>("h0")
    io.triggered <= triggered @[probe.scala 78:18]
    reg hasTriggered : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 80:31]
    when io.trigger : @[probe.scala 81:24]
      hasTriggered <= UInt<1>("h1") @[probe.scala 82:22]
    node _T = asUInt(UInt<1>("h0")) @[probe.scala 85:19]
    node _T_1 = asUInt(state) @[probe.scala 85:19]
    node _T_2 = eq(_T, _T_1) @[probe.scala 85:19]
    when _T_2 : @[probe.scala 85:19]
      triggerCount <= UInt<1>("h0") @[probe.scala 87:26]
      outValid <= UInt<1>("h0") @[probe.scala 88:22]
      outLast <= UInt<1>("h0") @[probe.scala 89:21]
      node _T_3 = eq(triggerPosition, UInt<1>("h0")) @[probe.scala 91:35]
      when _T_3 : @[probe.scala 91:45]
        state <= UInt<2>("h2") @[probe.scala 93:23]
      else :
        state <= UInt<1>("h1") @[probe.scala 96:23]
    else :
      node _T_4 = asUInt(UInt<1>("h1")) @[probe.scala 85:19]
      node _T_5 = asUInt(state) @[probe.scala 85:19]
      node _T_6 = eq(_T_4, _T_5) @[probe.scala 85:19]
      when _T_6 : @[probe.scala 85:19]
        in.valid <= UInt<1>("h1") @[probe.scala 100:22]
        node _triggerCount_T = add(triggerCount, UInt<1>("h1")) @[probe.scala 101:42]
        node _triggerCount_T_1 = tail(_triggerCount_T, 1) @[probe.scala 101:42]
        triggerCount <= _triggerCount_T_1 @[probe.scala 101:26]
        node _T_7 = sub(triggerPosition, UInt<1>("h1")) @[probe.scala 102:51]
        node _T_8 = tail(_T_7, 1) @[probe.scala 102:51]
        node _T_9 = eq(triggerCount, _T_8) @[probe.scala 102:31]
        when _T_9 : @[probe.scala 102:58]
          state <= UInt<2>("h2") @[probe.scala 103:23]
      else :
        node _T_10 = asUInt(UInt<2>("h2")) @[probe.scala 85:19]
        node _T_11 = asUInt(state) @[probe.scala 85:19]
        node _T_12 = eq(_T_10, _T_11) @[probe.scala 85:19]
        when _T_12 : @[probe.scala 85:19]
          in.valid <= UInt<1>("h1") @[probe.scala 107:22]
          node _T_13 = or(io.trigger, hasTriggered) @[probe.scala 108:30]
          when _T_13 : @[probe.scala 108:48]
            triggered <= UInt<1>("h1") @[probe.scala 109:27]
            state <= UInt<2>("h3") @[probe.scala 110:23]
          else :
            bufferReady <= UInt<1>("h1") @[probe.scala 112:29]
        else :
          node _T_14 = asUInt(UInt<2>("h3")) @[probe.scala 85:19]
          node _T_15 = asUInt(state) @[probe.scala 85:19]
          node _T_16 = eq(_T_14, _T_15) @[probe.scala 85:19]
          when _T_16 : @[probe.scala 85:19]
            in.valid <= UInt<1>("h1") @[probe.scala 116:22]
            node _T_17 = eq(in.ready, UInt<1>("h0")) @[probe.scala 117:19]
            when _T_17 : @[probe.scala 117:31]
              state <= UInt<3>("h4") @[probe.scala 119:23]
          else :
            node _T_18 = asUInt(UInt<3>("h4")) @[probe.scala 85:19]
            node _T_19 = asUInt(state) @[probe.scala 85:19]
            node _T_20 = eq(_T_18, _T_19) @[probe.scala 85:19]
            when _T_20 : @[probe.scala 85:19]
              hasTriggered <= UInt<1>("h0") @[probe.scala 124:26]
              node _outLast_T = eq(buffer.io.deq.valid, UInt<1>("h0")) @[probe.scala 126:24]
              outLast <= _outLast_T @[probe.scala 126:21]
              node _T_21 = eq(outValid, UInt<1>("h0")) @[probe.scala 127:19]
              node _T_22 = or(_T_21, io.out.ready) @[probe.scala 127:29]
              when _T_22 : @[probe.scala 127:47]
                outValid <= buffer.io.deq.valid @[probe.scala 128:26]
                outData <= buffer.io.deq.bits @[probe.scala 129:25]
                bufferReady <= UInt<1>("h1") @[probe.scala 130:29]
              node _T_23 = and(outValid, io.out.ready) @[probe.scala 132:28]
              node _T_24 = and(_T_23, outLast) @[probe.scala 132:44]
              when _T_24 : @[probe.scala 132:57]
                state <= UInt<1>("h0") @[probe.scala 133:23]

  module ProbeOutWidthConverter :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<33>, last : UInt<1>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<8>, last : UInt<1>}}}

    reg phaseCounter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[probe.scala 160:35]
    reg inData : UInt<35>, clock with :
      reset => (reset, UInt<35>("h0")) @[probe.scala 161:29]
    reg inLast : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 162:29]
    reg outValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 163:31]
    reg outData : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[probe.scala 164:30]
    reg outLast : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 165:30]
    node _io_in_ready_T = eq(phaseCounter, UInt<1>("h0")) @[probe.scala 167:37]
    io.in.ready <= _io_in_ready_T @[probe.scala 167:21]
    io.out.valid <= outValid @[probe.scala 168:22]
    node _io_out_bits_data_T = cat(UInt<1>("h0"), outData) @[Cat.scala 33:92]
    io.out.bits.data <= _io_out_bits_data_T @[probe.scala 169:26]
    io.out.bits.last <= outLast @[probe.scala 170:26]
    node _T = and(outValid, io.out.ready) @[probe.scala 172:23]
    when _T : @[probe.scala 172:40]
      outValid <= UInt<1>("h0") @[probe.scala 173:22]
    node _T_1 = and(io.in.valid, io.in.ready) @[probe.scala 175:26]
    when _T_1 : @[probe.scala 175:42]
      inData <= io.in.bits.data @[probe.scala 177:20]
      inLast <= io.in.bits.last @[probe.scala 178:20]
      phaseCounter <= UInt<3>("h5") @[probe.scala 179:26]
    node _T_2 = gt(phaseCounter, UInt<1>("h0")) @[probe.scala 181:28]
    node _T_3 = eq(outValid, UInt<1>("h0")) @[probe.scala 181:38]
    node _T_4 = or(_T_3, io.out.ready) @[probe.scala 181:48]
    node _T_5 = and(_T_2, _T_4) @[probe.scala 181:34]
    when _T_5 : @[probe.scala 181:66]
      node _phaseCounter_T = sub(phaseCounter, UInt<1>("h1")) @[probe.scala 182:42]
      node _phaseCounter_T_1 = tail(_phaseCounter_T, 1) @[probe.scala 182:42]
      phaseCounter <= _phaseCounter_T_1 @[probe.scala 182:26]
      outValid <= UInt<1>("h1") @[probe.scala 183:22]
      node _T_6 = eq(phaseCounter, UInt<1>("h1")) @[probe.scala 185:35]
      when _T_6 : @[probe.scala 185:48]
        node _outData_T = bits(inData, 34, 28) @[probe.scala 187:38]
        outData <= _outData_T @[probe.scala 187:29]
      node _T_7 = eq(phaseCounter, UInt<2>("h2")) @[probe.scala 185:35]
      when _T_7 : @[probe.scala 185:48]
        node _outData_T_1 = bits(inData, 27, 21) @[probe.scala 187:38]
        outData <= _outData_T_1 @[probe.scala 187:29]
      node _T_8 = eq(phaseCounter, UInt<2>("h3")) @[probe.scala 185:35]
      when _T_8 : @[probe.scala 185:48]
        node _outData_T_2 = bits(inData, 20, 14) @[probe.scala 187:38]
        outData <= _outData_T_2 @[probe.scala 187:29]
      node _T_9 = eq(phaseCounter, UInt<3>("h4")) @[probe.scala 185:35]
      when _T_9 : @[probe.scala 185:48]
        node _outData_T_3 = bits(inData, 13, 7) @[probe.scala 187:38]
        outData <= _outData_T_3 @[probe.scala 187:29]
      node _T_10 = eq(phaseCounter, UInt<3>("h5")) @[probe.scala 185:35]
      when _T_10 : @[probe.scala 185:48]
        node _outData_T_4 = bits(inData, 6, 0) @[probe.scala 187:38]
        outData <= _outData_T_4 @[probe.scala 187:29]
      node _outLast_T = eq(phaseCounter, UInt<1>("h1")) @[probe.scala 190:37]
      node _outLast_T_1 = and(_outLast_T, inLast) @[probe.scala 190:45]
      outLast <= _outLast_T_1 @[probe.scala 190:21]

  module ProbeFrameAdapter :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<33>, last : UInt<1>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    inst widthConverter of ProbeOutWidthConverter @[probe.scala 214:32]
    widthConverter.clock <= clock
    widthConverter.reset <= reset
    widthConverter.io.in <= io.in @[probe.scala 215:26]
    wire inReady : UInt<1>
    inReady <= UInt<1>("h0")
    widthConverter.io.out.ready <= inReady @[probe.scala 217:33]
    reg outValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 219:27]
    reg outData : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[probe.scala 220:26]
    io.out.valid <= outValid @[probe.scala 221:18]
    io.out.bits <= outData @[probe.scala 222:17]
    reg state : UInt<2>, clock with :
      reset => (reset, UInt<1>("h0")) @[probe.scala 224:24]
    node _T = and(outValid, io.out.ready) @[probe.scala 226:19]
    when _T : @[probe.scala 226:36]
      outValid <= UInt<1>("h0") @[probe.scala 227:18]
    node _T_1 = asUInt(UInt<1>("h0")) @[probe.scala 230:19]
    node _T_2 = asUInt(state) @[probe.scala 230:19]
    node _T_3 = eq(_T_1, _T_2) @[probe.scala 230:19]
    when _T_3 : @[probe.scala 230:19]
      node _T_4 = eq(outValid, UInt<1>("h0")) @[probe.scala 232:50]
      node _T_5 = or(_T_4, io.out.ready) @[probe.scala 232:60]
      node _T_6 = and(widthConverter.io.out.valid, _T_5) @[probe.scala 232:46]
      when _T_6 : @[probe.scala 232:78]
        outValid <= UInt<1>("h1") @[probe.scala 234:26]
        outData <= UInt<8>("h80") @[probe.scala 235:25]
        state <= UInt<1>("h1") @[probe.scala 236:23]
    else :
      node _T_7 = asUInt(UInt<1>("h1")) @[probe.scala 230:19]
      node _T_8 = asUInt(state) @[probe.scala 230:19]
      node _T_9 = eq(_T_7, _T_8) @[probe.scala 230:19]
      when _T_9 : @[probe.scala 230:19]
        node _inReady_T = eq(outValid, UInt<1>("h0")) @[probe.scala 241:24]
        node _inReady_T_1 = or(_inReady_T, io.out.ready) @[probe.scala 241:34]
        inReady <= _inReady_T_1 @[probe.scala 241:21]
        node _T_10 = and(widthConverter.io.out.valid, inReady) @[probe.scala 242:46]
        when _T_10 : @[probe.scala 242:59]
          outValid <= UInt<1>("h1") @[probe.scala 243:26]
          outData <= widthConverter.io.out.bits.data @[probe.scala 244:25]
          when widthConverter.io.out.bits.last : @[probe.scala 246:55]
            state <= UInt<2>("h2") @[probe.scala 247:27]
      else :
        node _T_11 = asUInt(UInt<2>("h2")) @[probe.scala 230:19]
        node _T_12 = asUInt(state) @[probe.scala 230:19]
        node _T_13 = eq(_T_11, _T_12) @[probe.scala 230:19]
        when _T_13 : @[probe.scala 230:19]
          node _T_14 = eq(outValid, UInt<1>("h0")) @[probe.scala 252:19]
          node _T_15 = or(_T_14, io.out.ready) @[probe.scala 252:29]
          when _T_15 : @[probe.scala 252:47]
            outValid <= UInt<1>("h1") @[probe.scala 255:26]
            outData <= UInt<8>("h81") @[probe.scala 256:25]
            state <= UInt<1>("h0") @[probe.scala 257:23]

  module UartTx_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, tx : UInt<1>}

    reg rateCounter : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[UartTx.scala 18:30]
    reg bitCounter : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[UartTx.scala 19:29]
    reg bits : UInt<1>[10], clock with :
      reset => (UInt<1>("h0"), bits) @[UartTx.scala 20:19]
    node _io_tx_T = eq(bitCounter, UInt<1>("h0")) @[UartTx.scala 22:25]
    node _io_tx_T_1 = or(_io_tx_T, bits[0]) @[UartTx.scala 22:33]
    io.tx <= _io_tx_T_1 @[UartTx.scala 22:11]
    node _io_in_ready_T = eq(bitCounter, UInt<1>("h0")) @[UartTx.scala 23:31]
    io.in.ready <= _io_in_ready_T @[UartTx.scala 23:17]
    node _T = and(io.in.valid, io.in.ready) @[UartTx.scala 25:22]
    when _T : @[UartTx.scala 25:38]
      node hi = cat(UInt<1>("h1"), io.in.bits) @[Cat.scala 33:92]
      node _T_1 = cat(hi, UInt<1>("h0")) @[Cat.scala 33:92]
      node _T_2 = bits(_T_1, 0, 0) @[UartTx.scala 26:43]
      node _T_3 = bits(_T_1, 1, 1) @[UartTx.scala 26:43]
      node _T_4 = bits(_T_1, 2, 2) @[UartTx.scala 26:43]
      node _T_5 = bits(_T_1, 3, 3) @[UartTx.scala 26:43]
      node _T_6 = bits(_T_1, 4, 4) @[UartTx.scala 26:43]
      node _T_7 = bits(_T_1, 5, 5) @[UartTx.scala 26:43]
      node _T_8 = bits(_T_1, 6, 6) @[UartTx.scala 26:43]
      node _T_9 = bits(_T_1, 7, 7) @[UartTx.scala 26:43]
      node _T_10 = bits(_T_1, 8, 8) @[UartTx.scala 26:43]
      node _T_11 = bits(_T_1, 9, 9) @[UartTx.scala 26:43]
      bits[0] <= _T_2 @[UartTx.scala 26:14]
      bits[1] <= _T_3 @[UartTx.scala 26:14]
      bits[2] <= _T_4 @[UartTx.scala 26:14]
      bits[3] <= _T_5 @[UartTx.scala 26:14]
      bits[4] <= _T_6 @[UartTx.scala 26:14]
      bits[5] <= _T_7 @[UartTx.scala 26:14]
      bits[6] <= _T_8 @[UartTx.scala 26:14]
      bits[7] <= _T_9 @[UartTx.scala 26:14]
      bits[8] <= _T_10 @[UartTx.scala 26:14]
      bits[9] <= _T_11 @[UartTx.scala 26:14]
      bitCounter <= UInt<4>("ha") @[UartTx.scala 27:20]
      rateCounter <= UInt<8>("he9") @[UartTx.scala 28:21]
    node _T_12 = gt(bitCounter, UInt<1>("h0")) @[UartTx.scala 31:22]
    when _T_12 : @[UartTx.scala 31:30]
      node _T_13 = eq(rateCounter, UInt<1>("h0")) @[UartTx.scala 32:26]
      when _T_13 : @[UartTx.scala 32:35]
        bits[0] <= bits[1] @[UartTx.scala 34:54]
        bits[1] <= bits[2] @[UartTx.scala 34:54]
        bits[2] <= bits[3] @[UartTx.scala 34:54]
        bits[3] <= bits[4] @[UartTx.scala 34:54]
        bits[4] <= bits[5] @[UartTx.scala 34:54]
        bits[5] <= bits[6] @[UartTx.scala 34:54]
        bits[6] <= bits[7] @[UartTx.scala 34:54]
        bits[7] <= bits[8] @[UartTx.scala 34:54]
        bits[8] <= bits[9] @[UartTx.scala 34:54]
        node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[UartTx.scala 35:38]
        node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[UartTx.scala 35:38]
        bitCounter <= _bitCounter_T_1 @[UartTx.scala 35:24]
        rateCounter <= UInt<8>("he9") @[UartTx.scala 36:25]
      else :
        node _rateCounter_T = sub(rateCounter, UInt<1>("h1")) @[UartTx.scala 38:40]
        node _rateCounter_T_1 = tail(_rateCounter_T, 1) @[UartTx.scala 38:40]
        rateCounter <= _rateCounter_T_1 @[UartTx.scala 38:25]

  module TopWithSegmentLed :
    input clock : Clock
    input reset : UInt<1>
    output io : { debug_pc : UInt<32>, uartTx : UInt<1>, flip uartRx : UInt<1>, success : UInt<1>, segmentOut : { outputEnable : UInt<1>, shiftClock : UInt<1>, latch : UInt<1>, data : UInt<1>}, digitSelector : { outputEnable : UInt<1>, shiftClock : UInt<1>, latch : UInt<1>, data : UInt<1>}, ledOut : UInt<32>, flip switchIn : UInt<32>, matrixColumnOut : UInt<8>, matrixRowOut : UInt<8>, probeOut : UInt<1>, exit : UInt<1>}

    inst core of Core @[TopWithSegmentLed.scala 32:20]
    core.clock <= clock
    core.reset <= reset
    inst memory of Memory @[TopWithSegmentLed.scala 34:22]
    memory.clock <= clock
    memory.reset <= reset
    inst gpios of GpioArray @[TopWithSegmentLed.scala 35:21]
    gpios.clock <= clock
    gpios.reset <= reset
    inst uartRegs of IORegister @[TopWithSegmentLed.scala 36:24]
    uartRegs.clock <= clock
    uartRegs.reset <= reset
    inst decoder of DMemDecoder @[TopWithSegmentLed.scala 38:23]
    decoder.clock <= clock
    decoder.reset <= reset
    core.io.imem <= memory.io.imem @[TopWithSegmentLed.scala 43:16]
    core.io.dmem <= decoder.io.initiator @[TopWithSegmentLed.scala 44:16]
    decoder.io.targets[0] <= memory.io.dmem @[TopWithSegmentLed.scala 46:25]
    decoder.io.targets[1] <= gpios.io.mem @[TopWithSegmentLed.scala 47:25]
    decoder.io.targets[2] <= uartRegs.io.mem @[TopWithSegmentLed.scala 48:25]
    inst segmentLeds of SegmentLedWithShiftRegs @[TopWithSegmentLed.scala 51:27]
    segmentLeds.clock <= clock
    segmentLeds.reset <= reset
    io.segmentOut <= segmentLeds.io.segmentOut @[TopWithSegmentLed.scala 52:17]
    io.digitSelector <= segmentLeds.io.digitSelector @[TopWithSegmentLed.scala 53:20]
    node _T = bits(gpios.io.out[0], 7, 0) @[TopWithSegmentLed.scala 54:69]
    node _T_1 = bits(gpios.io.out[0], 15, 8) @[TopWithSegmentLed.scala 54:69]
    node _T_2 = bits(gpios.io.out[0], 23, 16) @[TopWithSegmentLed.scala 54:69]
    node _T_3 = bits(gpios.io.out[0], 31, 24) @[TopWithSegmentLed.scala 54:69]
    node _T_4 = bits(gpios.io.out[1], 7, 0) @[TopWithSegmentLed.scala 54:125]
    node _T_5 = bits(gpios.io.out[1], 15, 8) @[TopWithSegmentLed.scala 54:125]
    wire _WIRE : UInt<8>[6] @[TopWithSegmentLed.scala 54:35]
    _WIRE[0] <= _T @[TopWithSegmentLed.scala 54:35]
    _WIRE[1] <= _T_1 @[TopWithSegmentLed.scala 54:35]
    _WIRE[2] <= _T_2 @[TopWithSegmentLed.scala 54:35]
    _WIRE[3] <= _T_3 @[TopWithSegmentLed.scala 54:35]
    _WIRE[4] <= _T_4 @[TopWithSegmentLed.scala 54:35]
    _WIRE[5] <= _T_5 @[TopWithSegmentLed.scala 54:35]
    segmentLeds.io.digits[0] <= _WIRE[0] @[TopWithSegmentLed.scala 54:25]
    segmentLeds.io.digits[1] <= _WIRE[1] @[TopWithSegmentLed.scala 54:25]
    segmentLeds.io.digits[2] <= _WIRE[2] @[TopWithSegmentLed.scala 54:25]
    segmentLeds.io.digits[3] <= _WIRE[3] @[TopWithSegmentLed.scala 54:25]
    segmentLeds.io.digits[4] <= _WIRE[4] @[TopWithSegmentLed.scala 54:25]
    segmentLeds.io.digits[5] <= _WIRE[5] @[TopWithSegmentLed.scala 54:25]
    gpios.io.in[0] <= UInt<1>("h0") @[TopWithSegmentLed.scala 55:18]
    gpios.io.in[1] <= UInt<1>("h0") @[TopWithSegmentLed.scala 56:18]
    inst matrixLed of MatrixLed @[TopWithSegmentLed.scala 59:25]
    matrixLed.clock <= clock
    matrixLed.reset <= reset
    node _T_6 = bits(gpios.io.out[2], 7, 0) @[TopWithSegmentLed.scala 60:67]
    node _T_7 = bits(gpios.io.out[2], 15, 8) @[TopWithSegmentLed.scala 60:67]
    node _T_8 = bits(gpios.io.out[2], 23, 16) @[TopWithSegmentLed.scala 60:67]
    node _T_9 = bits(gpios.io.out[2], 31, 24) @[TopWithSegmentLed.scala 60:67]
    node _T_10 = bits(gpios.io.out[3], 7, 0) @[TopWithSegmentLed.scala 60:123]
    node _T_11 = bits(gpios.io.out[3], 15, 8) @[TopWithSegmentLed.scala 60:123]
    node _T_12 = bits(gpios.io.out[3], 23, 16) @[TopWithSegmentLed.scala 60:123]
    node _T_13 = bits(gpios.io.out[3], 31, 24) @[TopWithSegmentLed.scala 60:123]
    wire _WIRE_1 : UInt<8>[8] @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[0] <= _T_6 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[1] <= _T_7 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[2] <= _T_8 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[3] <= _T_9 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[4] <= _T_10 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[5] <= _T_11 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[6] <= _T_12 @[TopWithSegmentLed.scala 60:33]
    _WIRE_1[7] <= _T_13 @[TopWithSegmentLed.scala 60:33]
    matrixLed.io.matrix[0] <= _WIRE_1[0] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[1] <= _WIRE_1[1] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[2] <= _WIRE_1[2] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[3] <= _WIRE_1[3] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[4] <= _WIRE_1[4] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[5] <= _WIRE_1[5] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[6] <= _WIRE_1[6] @[TopWithSegmentLed.scala 60:23]
    matrixLed.io.matrix[7] <= _WIRE_1[7] @[TopWithSegmentLed.scala 60:23]
    io.matrixColumnOut <= matrixLed.io.column @[TopWithSegmentLed.scala 61:22]
    io.matrixRowOut <= matrixLed.io.row @[TopWithSegmentLed.scala 62:19]
    gpios.io.in[2] <= UInt<1>("h0") @[TopWithSegmentLed.scala 63:18]
    gpios.io.in[3] <= UInt<1>("h0") @[TopWithSegmentLed.scala 64:18]
    io.ledOut <= gpios.io.out[4] @[TopWithSegmentLed.scala 67:13]
    gpios.io.in[4] <= UInt<1>("h0") @[TopWithSegmentLed.scala 68:18]
    gpios.io.in[5] <= io.switchIn @[TopWithSegmentLed.scala 71:15]
    inst uartTx of UartTx @[TopWithSegmentLed.scala 73:22]
    uartTx.clock <= clock
    uartTx.reset <= reset
    inst uartRx of UartRx @[TopWithSegmentLed.scala 74:22]
    uartRx.clock <= clock
    uartRx.reset <= reset
    wire uartTxValidReady : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>} @[TopWithSegmentLed.scala 75:30]
    inst uartTxQueue of Queue @[Decoupled.scala 377:21]
    uartTxQueue.clock <= clock
    uartTxQueue.reset <= reset
    uartTxQueue.io.enq.valid <= uartTxValidReady.valid @[Decoupled.scala 379:22]
    uartTxQueue.io.enq.bits <= uartTxValidReady.bits @[Decoupled.scala 380:21]
    uartTxValidReady.ready <= uartTxQueue.io.enq.ready @[Decoupled.scala 381:17]
    inst uartRxQueue of Queue_1 @[Decoupled.scala 377:21]
    uartRxQueue.clock <= clock
    uartRxQueue.reset <= reset
    uartRxQueue.io.enq.valid <= uartRx.io.out.valid @[Decoupled.scala 379:22]
    uartRxQueue.io.enq.bits <= uartRx.io.out.bits @[Decoupled.scala 380:21]
    uartRx.io.out.ready <= uartRxQueue.io.enq.ready @[Decoupled.scala 381:17]
    io.uartTx <= uartTx.io.tx @[TopWithSegmentLed.scala 79:13]
    uartTx.io.in <= uartTxQueue.io.deq @[TopWithSegmentLed.scala 80:16]
    uartTxValidReady.valid <= uartRegs.io.out[0].valid @[TopWithSegmentLed.scala 81:26]
    uartTxValidReady.bits <= uartRegs.io.out[0].bits @[TopWithSegmentLed.scala 82:25]
    node uartRegs_io_in_1_bits_hi = cat(UInt<30>("h0"), uartRxQueue.io.deq.valid) @[Cat.scala 33:92]
    node _uartRegs_io_in_1_bits_T = cat(uartRegs_io_in_1_bits_hi, uartTxValidReady.ready) @[Cat.scala 33:92]
    uartRegs.io.in[1].bits <= _uartRegs_io_in_1_bits_T @[TopWithSegmentLed.scala 83:26]
    uartRegs.io.in[1].valid <= UInt<1>("h1") @[TopWithSegmentLed.scala 84:27]
    core.io.interrupt_in <= uartRxQueue.io.deq.valid @[TopWithSegmentLed.scala 85:24]
    uartRx.io.rx <= io.uartRx @[TopWithSegmentLed.scala 87:13]
    node uartRegs_io_in_0_bits_lo = cat(UInt<8>("h0"), uartRxQueue.io.deq.bits) @[Cat.scala 33:92]
    node uartRegs_io_in_0_bits_hi = cat(UInt<15>("h0"), uartRxQueue.io.deq.valid) @[Cat.scala 33:92]
    node _uartRegs_io_in_0_bits_T = cat(uartRegs_io_in_0_bits_hi, uartRegs_io_in_0_bits_lo) @[Cat.scala 33:92]
    uartRegs.io.in[0].bits <= _uartRegs_io_in_0_bits_T @[TopWithSegmentLed.scala 88:26]
    uartRegs.io.in[0].valid <= UInt<1>("h1") @[TopWithSegmentLed.scala 89:27]
    uartRxQueue.io.deq.ready <= uartRegs.io.in[0].ready @[TopWithSegmentLed.scala 90:21]
    io.success <= core.io.success @[TopWithSegmentLed.scala 92:14]
    io.exit <= core.io.exit @[TopWithSegmentLed.scala 93:11]
    io.debug_pc <= core.io.debug_pc @[TopWithSegmentLed.scala 94:15]
    inst probe of Probe @[TopWithSegmentLed.scala 97:21]
    probe.clock <= clock
    probe.reset <= reset
    node _probe_io_in_T = bits(io.switchIn, 0, 0) @[TopWithSegmentLed.scala 98:33]
    node _probe_io_in_T_1 = cat(_probe_io_in_T, core.io.debug_pc) @[Cat.scala 33:92]
    probe.io.in <= _probe_io_in_T_1 @[TopWithSegmentLed.scala 98:15]
    reg noActivityCounter : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[TopWithSegmentLed.scala 99:34]
    when gpios.io.mem.wen : @[TopWithSegmentLed.scala 100:28]
      noActivityCounter <= UInt<1>("h0") @[TopWithSegmentLed.scala 101:23]
    else :
      node _noActivityCounter_T = add(noActivityCounter, UInt<1>("h1")) @[TopWithSegmentLed.scala 103:44]
      node _noActivityCounter_T_1 = tail(_noActivityCounter_T, 1) @[TopWithSegmentLed.scala 103:44]
      noActivityCounter <= _noActivityCounter_T_1 @[TopWithSegmentLed.scala 103:23]
    node _probe_io_trigger_T = eq(noActivityCounter, UInt<8>("hff")) @[TopWithSegmentLed.scala 105:42]
    node _probe_io_trigger_T_1 = bits(io.switchIn, 0, 0) @[TopWithSegmentLed.scala 105:67]
    node _probe_io_trigger_T_2 = eq(_probe_io_trigger_T_1, UInt<1>("h0")) @[TopWithSegmentLed.scala 105:55]
    node _probe_io_trigger_T_3 = or(_probe_io_trigger_T, _probe_io_trigger_T_2) @[TopWithSegmentLed.scala 105:53]
    probe.io.trigger <= _probe_io_trigger_T_3 @[TopWithSegmentLed.scala 105:20]
    inst probeFrameAdapter of ProbeFrameAdapter @[TopWithSegmentLed.scala 106:33]
    probeFrameAdapter.clock <= clock
    probeFrameAdapter.reset <= reset
    probeFrameAdapter.io.in <= probe.io.out @[TopWithSegmentLed.scala 107:27]
    inst probeUartTx of UartTx_1 @[TopWithSegmentLed.scala 108:27]
    probeUartTx.clock <= clock
    probeUartTx.reset <= reset
    probeUartTx.io.in <= probeFrameAdapter.io.out @[TopWithSegmentLed.scala 109:21]
    io.probeOut <= probeUartTx.io.tx @[TopWithSegmentLed.scala 110:15]

